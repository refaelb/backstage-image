app:
  title: Scaffolded Backstage App
  baseUrl: http://127.0.0.1:3000
  # baseUrl: http://0.0.0.0:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: '7007'
    # Uncomment the following host directive to bind to specific interfaces
    # host: localhost
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    # origin: http://54.155.169.198:3000
    origin: http://127.0.0.1:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
permission:
  enabled: true
integrations:
  github:
    - host: github.com
      token: 7ae20dd7904533cfbab2211c51871d77f51b67ce

  bitbucketCloud:
    # matrix
    - username: refaelb
      appPassword: ATBBAGj9YcwMAKbkf3de3QbQYvxA08395095

  azure:
    - host: dev.azure.com
      credentials:
        - personalAccessToken: eyJ0eXAiOiJKV1QiLCJub25jZSI6IlhLRmt3YmtnaFpmeDlpaFgzaUtVTWF1VHBFVjY1UVB4SVlKOVBBOUJrLWciLCJhbGciOiJSUzI1NiIsIng1dCI6IlhSdmtvOFA3QTNVYVdTblU3Yk05blQwTWpoQSIsImtpZCI6IlhSdmtvOFA3QTNVYVdTblU3Yk05blQwTWpoQSJ9.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNzA4NzUxYy1iMzUwLTQyZWQtOTBkYi1kNzlhMGM1ZjVlNDMvIiwiaWF0IjoxNzA5MTk3OTA1LCJuYmYiOjE3MDkxOTc5MDUsImV4cCI6MTcwOTIwMTgwNSwiYWlvIjoiRTJOZ1lOaDZ0RkZhZ0ZWZUlXZWJ3eUtoeVd2OUFBPT0iLCJhcHBfZGlzcGxheW5hbWUiOiJ0ZXN0IiwiYXBwaWQiOiI2MDJhMGE3Zi0xNzIyLTQ5NWQtODdhZi0xZDZhNzQyYmFhNzUiLCJhcHBpZGFjciI6IjEiLCJpZHAiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9iNzA4NzUxYy1iMzUwLTQyZWQtOTBkYi1kNzlhMGM1ZjVlNDMvIiwiaWR0eXAiOiJhcHAiLCJvaWQiOiJmMjMwYjE4Yi1lMDAxLTQ1YTctYTYyZi02MjZkZGUxNTkyNjMiLCJyaCI6IjAuQWE0QUhIVUl0MUN6N1VLUTI5ZWFERjllUXdNQUFBQUFBQUFBd0FBQUFBQUFBQUN0QUFBLiIsInJvbGVzIjpbIlRlYW1NZW1iZXIuUmVhZC5BbGwiLCJVc2VyLlJlYWRXcml0ZS5BbGwiLCJHcm91cC5SZWFkLkFsbCIsIkRpcmVjdG9yeS5SZWFkV3JpdGUuQWxsIiwiR3JvdXAuQ3JlYXRlIiwiR3JvdXAuUmVhZFdyaXRlLkFsbCIsIkRpcmVjdG9yeS5SZWFkLkFsbCIsIlVzZXIuUmVhZC5BbGwiLCJDaGFubmVsTWVtYmVyLlJlYWQuQWxsIiwiR3JvdXBNZW1iZXIuUmVhZC5BbGwiLCJFeHRlcm5hbFVzZXJQcm9maWxlLlJlYWQuQWxsIiwiVGVhbS5SZWFkQmFzaWMuQWxsIiwiVXNlci5FeHBvcnQuQWxsIiwiVXNlci5NYW5hZ2VJZGVudGl0aWVzLkFsbCIsIkdyb3VwTWVtYmVyLlJlYWRXcml0ZS5BbGwiLCJNZW1iZXIuUmVhZC5IaWRkZW4iXSwic3ViIjoiZjIzMGIxOGItZTAwMS00NWE3LWE2MmYtNjI2ZGRlMTU5MjYzIiwidGVuYW50X3JlZ2lvbl9zY29wZSI6IkVVIiwidGlkIjoiYjcwODc1MWMtYjM1MC00MmVkLTkwZGItZDc5YTBjNWY1ZTQzIiwidXRpIjoicjFteTU3VE1fRUczU2h6YkNjMEJBUSIsInZlciI6IjEuMCIsIndpZHMiOlsiMDk5N2ExZDAtMGQxZC00YWNiLWI0MDgtZDVjYTczMTIxZTkwIl0sInhtc190Y2R0IjoxNzA4NjEwNjE4fQ.VUy04BLIJcn3zmBXspLT0PWuFBo4hv_bY08Z6f1n9u7gZ79ut_TbyvczhnCmXuj8cP0WTOM2ObehpoK_SoWbo03F5MEvBpg3E1RmgvPLRruU-3eW_AEBmqtkV_44cpItGpSeXE0a-B7P6BxZ3aB1TjUGdX3HXNtgV26TiwDTTMz2jlvgOjjwsZo5wAVKocAGYvuLxdnmTtv7CefNa9u8vzkoK6hLOhSrRnyHNfwctri9QhCdiO-AOpCRdh57zGkV4IKL38qXsuuujatf_hD7rNhPulxQ1ybNOgQ-O3cqa-vqswteIHrJibW3d7xE6FCgYhTcUFuehXzW2ocll-mYKA

  # azure:
  #   - host: dev.azure.com
  #     credentials:
  #       - clientId: 602a0a7f-1722-495d-87af-1d6a742baa75
  #         clientSecret: wiv8Q~TOxWTqDQFwrjY8-snEm3DBS2UNz3DxiaK8
  #         tenantId: b708751c-b350-42ed-90db-d79a0c5f5e43

# proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    github:
      development:
        clientId: 2dfaa55d690059895dca
        clientSecret: 8bd91b1981b2561bdc32d593336d0572d8f7edcd
    
    bitbucket:
      development:
        ## metrix
        clientId: FyPyJBbMme9JQ2AvTd
        clientSecret: 9F7T4yt5AgahBupykccvVjnSH7kdfPhE

  

    microsoft:
      development:
        clientId: 602a0a7f-1722-495d-87af-1d6a742baa75
        clientSecret: wiv8Q~TOxWTqDQFwrjY8-snEm3DBS2UNz3DxiaK8
        tenantId: b708751c-b350-42ed-90db-d79a0c5f5e43
        domainHint: b708751c-b350-42ed-90db-d79a0c5f5e43
        additionalScopes:
          - Mail.Send
    
  keys:
    - secret: HOBbL6vhhSpcCLu34ZaMfYviqwupZ18x


######tests############


#######################

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml
      rules:
        - allow: [Template,API]

    # Local example template
    # - type: file
    #   target: ../../examples/template/node-lambda.yaml
    #   rules:
    #     - allow: [Template]

    # # Local example organizational data
    # - type: file
    #   target: ../../examples/org.yaml
    #   rules:
    #     - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    - type: url
      target: https://bitbucket.org/matrixdevops/devops/src/develop/templates/all-template-location.yaml
      rules:
        - allow: [User, Group, Component, System, API, Resource, Location, Template, Domain]

    - type: url
      target: https://bitbucket.org/matrixdevops/devops/raw/92b9fe1da45ae5bb1dff077a844778fdfa10d51b/entities/all-entities-location.yaml
      rules:
        - allow: [User, Group, Component, System, API, Resource, Location, Template, Domain]



    # - type: microsoft-graph-org
    #   target: https://graph.microsoft.com/v1.0
    #   rules:
    #     - allow: [Group, User]
  processors:
    microsoftGraphOrg:
      providers:
        - target: https://graph.microsoft.com/v1.0
          authority: https://login.microsoftonline.com
          tenantId: b708751c-b350-42ed-90db-d79a0c5f5e43
          clientId: 602a0a7f-1722-495d-87af-1d6a742baa75
          clientSecret: wiv8Q~TOxWTqDQFwrjY8-snEm3DBS2UNz3DxiaK8
          # userGroupMemberFilter: "displayName eq 'backstage'"
          queryMode: basic # basic | advanced
          orgUrl: https://graph.microsoft.com/v1.0 
  providers:
    microsoftGraphOrg:
      default:
        tenantId: b708751c-b350-42ed-90db-d79a0c5f5e43
        clientId: 602a0a7f-1722-495d-87af-1d6a742baa75
        clientSecret: wiv8Q~TOxWTqDQFwrjY8-snEm3DBS2UNz3DxiaK8
        orgUrl: https://graph.microsoft.com/v1.0
        # userGroupMemberFilter: "displayName eq 'backstage'"

        # userGroupMember: "displayName eq 'lcb'"
        # group:
          # expand: Security
          # select: ['id', 'displayName', 'description']
        # user:
          # filter: accountEnabled eq true and userType eq 'member'
        
