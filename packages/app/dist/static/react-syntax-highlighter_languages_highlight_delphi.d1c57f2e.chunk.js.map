{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_delphi.d1c57f2e.chunk.js","mappings":"8EAMA,SAASA,EAAOC,EAAM,CACpB,MAAMC,EACJ,26BAWIC,EAAgB,CACpBF,EAAK,oBACLA,EAAK,QAAQ,KAAM,KAAM,CACvB,UAAW,CACb,CAAC,EACDA,EAAK,QAAQ,OAAQ,OAAQ,CAC3B,UAAW,EACb,CAAC,CACH,EACMG,EAAY,CAChB,UAAW,OACX,SAAU,CACR,CACE,MAAO,OACP,IAAK,IACP,EACA,CACE,MAAO,SACP,IAAK,MACP,CACF,CACF,EACMC,EAAS,CACb,UAAW,SACX,MAAO,IACP,IAAK,IACL,SAAU,CAAC,CACT,MAAO,IACT,CAAC,CACH,EACMC,EAAS,CACb,UAAW,SACX,UAAW,EAEX,SAAU,CACR,CAEE,MAAO,iBACT,EACA,CAEE,MAAO,SACT,EACA,CAEE,MAAO,QACT,CACF,CACF,EACMC,EAAc,CAClB,UAAW,SACX,MAAO,SACT,EACMC,EAAQ,CACZ,MAAOP,EAAK,SAAW,wBACvB,YAAa,GACb,SAAU,CAACA,EAAK,UAAU,CAC5B,EACMQ,EAAW,CACf,UAAW,WACX,cAAe,4CACf,IAAK,OACL,SAAU,qDACV,SAAU,CACRR,EAAK,WACL,CACE,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAUC,EACV,SAAU,CACRG,EACAE,EACAH,CACF,EAAE,OAAOD,CAAa,CACxB,EACAC,CACF,EAAE,OAAOD,CAAa,CACxB,EACA,MAAO,CACL,KAAM,SACN,QAAS,CACP,MACA,MACA,MACA,SACA,aACA,UACA,MACA,KACF,EACA,iBAAkB,GAClB,SAAUD,EACV,QAAS,2BACT,SAAU,CACRG,EACAE,EACAN,EAAK,YACLK,EACAE,EACAC,EACAL,CACF,EAAE,OAAOD,CAAa,CACxB,CACF,CAEAO,EAAO,QAAUV,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/delphi.js"],"sourcesContent":["/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {\n      relevance: 0\n    }),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n      relevance: 10\n    })\n  ];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      },\n      {\n        begin: /\\(\\*\\$/,\n        end: /\\*\\)/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [\n      {\n        // Hexadecimal notation, e.g., $7F.\n        begin: '\\\\$[0-9A-Fa-f]+'\n      },\n      {\n        // Octal notation, e.g., &42.\n        begin: '&[0-7]+'\n      },\n      {\n        // Binary notation, e.g., %1010.\n        begin: '%[01]+'\n      }\n    ]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING,\n          DIRECTIVE\n        ].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: [\n      'dpr',\n      'dfm',\n      'pas',\n      'pascal',\n      'freepascal',\n      'lazarus',\n      'lpr',\n      'lfm'\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      hljs.NUMBER_MODE,\n      NUMBER,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;\n"],"names":["delphi","hljs","KEYWORDS","COMMENT_MODES","DIRECTIVE","STRING","NUMBER","CHAR_STRING","CLASS","FUNCTION","module"],"sourceRoot":""}