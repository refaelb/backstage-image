{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_actionscript.ba0de727.chunk.js","mappings":"8EASA,SAASA,EAAOC,EAAI,CAClB,OAAKA,EACD,OAAOA,GAAO,SAAiBA,EAE5BA,EAAG,OAHM,IAIlB,CAMA,SAASC,KAAUC,EAAM,CAEvB,OADeA,EAAK,IAAKC,GAAMJ,EAAOI,CAAC,CAAC,EAAE,KAAK,EAAE,CAEnD,CAUA,SAASC,EAAaC,EAAM,CAC1B,MAAMC,EAAW,2BACXC,EAA4B,iCAE5BC,EAAoB,CACxB,UAAW,WACX,MAAO,SACP,IAAKF,EACL,UAAW,EACb,EAEA,MAAO,CACL,KAAM,eACN,QAAS,CAAE,IAAK,EAChB,SAAU,CACR,QAAS,mUAKT,QAAS,2BACX,EACA,SAAU,CACRD,EAAK,iBACLA,EAAK,kBACLA,EAAK,oBACLA,EAAK,qBACLA,EAAK,cACL,CACE,UAAW,QACX,cAAe,UACf,IAAK,KACL,SAAU,CAAEA,EAAK,UAAW,CAC9B,EACA,CACE,UAAW,QACX,cAAe,kBACf,IAAK,KACL,WAAY,GACZ,SAAU,CACR,CAAE,cAAe,oBAAqB,EACtCA,EAAK,UACP,CACF,EACA,CACE,UAAW,OACX,cAAe,iBACf,IAAK,IACL,SAAU,CAAE,eAAgB,gBAAiB,CAC/C,EACA,CACE,UAAW,WACX,cAAe,WACf,IAAK,OACL,WAAY,GACZ,QAAS,KACT,SAAU,CACRA,EAAK,WACL,CACE,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAU,CACRA,EAAK,iBACLA,EAAK,kBACLA,EAAK,oBACLA,EAAK,qBACLG,CACF,CACF,EACA,CAAE,MAAOP,EAAO,OAAQM,CAAyB,CAAE,CACrD,CACF,EACAF,EAAK,YACP,EACA,QAAS,GACX,CACF,CAEAI,EAAO,QAAUL,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/actionscript.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    name: 'ActionScript',\n    aliases: [ 'as' ],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include',\n        end: /;/,\n        keywords: { 'meta-keyword': 'import include' }\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          { begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE) }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;\n"],"names":["source","re","concat","args","x","actionscript","hljs","IDENT_RE","IDENT_FUNC_RETURN_TYPE_RE","AS3_REST_ARG_MODE","module"],"sourceRoot":""}