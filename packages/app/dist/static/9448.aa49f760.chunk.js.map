{"version":3,"file":"static/9448.aa49f760.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@backstage/plugin-catalog/dist/esm/LinksGridList-c9dd074c.esm.js","webpack://app/../../node_modules/@backstage/plugin-catalog/dist/esm/index-a2f43c63.esm.js"],"sourcesContent":["import { makeStyles, Box, Typography, useMediaQuery, ImageList, ImageListItem } from '@material-ui/core';\nimport React from 'react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { Link } from '@backstage/core-components';\n\nconst useStyles = makeStyles({\n  svgIcon: {\n    display: \"inline-block\",\n    \"& svg\": {\n      display: \"inline-block\",\n      fontSize: \"inherit\",\n      verticalAlign: \"baseline\"\n    }\n  }\n});\nfunction IconLink(props) {\n  const { href, text, Icon } = props;\n  const classes = useStyles();\n  return /* @__PURE__ */ React.createElement(Box, { display: \"flex\" }, /* @__PURE__ */ React.createElement(Box, { mr: 1, className: classes.svgIcon }, /* @__PURE__ */ React.createElement(Typography, { component: \"div\" }, Icon ? /* @__PURE__ */ React.createElement(Icon, null) : /* @__PURE__ */ React.createElement(LanguageIcon, null))), /* @__PURE__ */ React.createElement(Box, { flexGrow: \"1\" }, /* @__PURE__ */ React.createElement(Link, { to: href, target: \"_blank\", rel: \"noopener\" }, text || href)));\n}\n\nconst colDefaults = {\n  xs: 1,\n  sm: 1,\n  md: 1,\n  lg: 2,\n  xl: 3\n};\nfunction useDynamicColumns(cols) {\n  var _a, _b;\n  const matches = [\n    useMediaQuery((theme) => theme.breakpoints.up(\"xl\")) ? \"xl\" : null,\n    useMediaQuery((theme) => theme.breakpoints.up(\"lg\")) ? \"lg\" : null,\n    useMediaQuery((theme) => theme.breakpoints.up(\"md\")) ? \"md\" : null,\n    useMediaQuery((theme) => theme.breakpoints.up(\"sm\")) ? \"sm\" : null,\n    useMediaQuery((theme) => theme.breakpoints.up(\"xs\")) ? \"xs\" : null\n  ];\n  let numOfCols = 1;\n  if (typeof cols === \"number\") {\n    numOfCols = cols;\n  } else {\n    const breakpoint = (_a = matches.find((k) => k !== null)) != null ? _a : \"xs\";\n    numOfCols = (_b = cols == null ? void 0 : cols[breakpoint]) != null ? _b : colDefaults[breakpoint];\n  }\n  return numOfCols;\n}\n\nfunction LinksGridList(props) {\n  const { items, cols = void 0 } = props;\n  const numOfCols = useDynamicColumns(cols);\n  return /* @__PURE__ */ React.createElement(ImageList, { rowHeight: \"auto\", cols: numOfCols }, items.map(({ text, href, Icon }, i) => /* @__PURE__ */ React.createElement(ImageListItem, { key: i }, /* @__PURE__ */ React.createElement(IconLink, { href, text: text != null ? text : href, Icon }))));\n}\n\nexport { LinksGridList as L };\n//# sourceMappingURL=LinksGridList-c9dd074c.esm.js.map\n","import { useEntity } from '@backstage/plugin-catalog-react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { makeStyles, Typography, Button } from '@material-ui/core';\nimport { CodeSnippet, InfoCard } from '@backstage/core-components';\nimport { L as LinksGridList } from './LinksGridList-c9dd074c.esm.js';\nimport { useApp } from '@backstage/core-plugin-api';\n\nconst ENTITY_YAML = `metadata:\n  name: example\n  links:\n    - url: https://dashboard.example.com\n      title: My Dashboard\n      icon: dashboard`;\nconst useStyles = makeStyles(\n  (theme) => ({\n    code: {\n      borderRadius: 6,\n      margin: theme.spacing(2, 0),\n      background: theme.palette.type === \"dark\" ? \"#444\" : theme.palette.common.white\n    }\n  }),\n  { name: \"PluginCatalogEntityLinksEmptyState\" }\n);\nfunction EntityLinksEmptyState() {\n  const classes = useStyles();\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, \"No links defined for this entity. You can add links to your entity YAML as shown in the highlighted example below:\"), /* @__PURE__ */ React.createElement(\"div\", { className: classes.code }, /* @__PURE__ */ React.createElement(\n    CodeSnippet,\n    {\n      text: ENTITY_YAML,\n      language: \"yaml\",\n      showLineNumbers: true,\n      highlightedNumbers: [3, 4, 5, 6],\n      customStyle: { background: \"inherit\", fontSize: \"115%\" }\n    }\n  )), /* @__PURE__ */ React.createElement(\n    Button,\n    {\n      variant: \"contained\",\n      color: \"primary\",\n      target: \"_blank\",\n      href: \"https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional\"\n    },\n    \"Read more\"\n  ));\n}\n\nconst EntityLinksCard = (props) => {\n  var _a;\n  const { cols = void 0, variant } = props;\n  const { entity } = useEntity();\n  const app = useApp();\n  const iconResolver = (key) => {\n    var _a2;\n    return key ? (_a2 = app.getSystemIcon(key)) != null ? _a2 : LanguageIcon : LanguageIcon;\n  };\n  const links = (_a = entity == null ? void 0 : entity.metadata) == null ? void 0 : _a.links;\n  return /* @__PURE__ */ React.createElement(InfoCard, { title: \"Links\", variant }, !links || links.length === 0 ? /* @__PURE__ */ React.createElement(EntityLinksEmptyState, null) : /* @__PURE__ */ React.createElement(\n    LinksGridList,\n    {\n      cols,\n      items: links.map(({ url, title, icon }) => ({\n        text: title != null ? title : url,\n        href: url,\n        Icon: iconResolver(icon)\n      }))\n    }\n  ));\n};\n\nexport { EntityLinksCard };\n//# sourceMappingURL=index-a2f43c63.esm.js.map\n"],"names":["useStyles","IconLink","props","href","text","Icon","classes","colDefaults","useDynamicColumns","cols","_a","_b","matches","theme","numOfCols","breakpoint","k","LinksGridList","items","i","ENTITY_YAML","EntityLinksEmptyState","EntityLinksCard","variant","entity","app","iconResolver","key","_a2","links","url","title","icon"],"sourceRoot":""}