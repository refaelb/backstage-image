{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_powershell.d33f95e2.chunk.js","mappings":"8EAQA,SAASA,EAAWC,EAAM,CACxB,MAAMC,EAAQ,CACZ,SACA,OACA,OACA,MACA,OACA,OACA,UACA,SACA,SACA,WACA,MACA,QACA,YACA,MACF,EAGMC,EACJ,2rBAYIC,EACJ,+bAQIC,EAAW,CACf,SAAU,iBACV,QACE,uLAIF,SACE,iqBASJ,EAEMC,EAAgB,yBAEhBC,EAAkB,CACtB,MAAO,YACP,UAAW,CACb,EAEMC,EAAM,CACV,UAAW,WACX,SAAU,CACR,CACE,MAAO,MACT,EACA,CACE,UAAW,UACX,MAAO,QACT,EACA,CACE,MAAO,mBACT,CACF,CACF,EAEMC,EAAU,CACd,UAAW,UACX,MAAO,uBACT,EAEMC,EAAe,CACnB,UAAW,SACX,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,KACP,CACF,EACA,SAAU,CACRH,EACAC,EACA,CACE,UAAW,WACX,MAAO,UACP,IAAK,QACP,CACF,CACF,EAEMG,EAAc,CAClB,UAAW,SACX,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,KACP,CACF,CACF,EAEMC,EAAc,CAClB,UAAW,SACX,SAAU,CAER,CACE,MAAO,yFACT,EAEA,CACE,MAAO,+FACT,CACF,CACF,EAEMC,EAAaZ,EAAK,QACtBA,EAAK,QAAQ,KAAM,IAAI,EACvB,CACE,SAAU,CAER,CACE,MAAO,IACP,IAAK,GACP,EAEA,CACE,MAAO,KACP,IAAK,IACP,CACF,EACA,SAAU,CAAEW,CAAY,CAC1B,CACF,EAEME,EAAU,CACd,UAAW,WACX,SAAU,CACR,CACE,MAAO,IAAI,OAAOX,EAAa,gBAAgB,CACjD,CACF,CACF,EAEMY,EAAW,CACf,UAAW,QACX,cAAe,aACf,IAAK,SACL,WAAY,GACZ,UAAW,EACX,SAAU,CAAEd,EAAK,UAAW,CAC9B,EAEMe,EAAc,CAClB,UAAW,WACX,MAAO,cACP,IAAK,UACL,WAAY,GACZ,YAAa,GACb,UAAW,EACX,SAAU,CACR,CACE,MAAO,WACP,UAAW,EACX,UAAW,SACb,EACA,CACE,UAAW,QACX,MAAOV,EACP,UAAW,CACb,EACA,CACE,MAAO,KACP,IAAK,KACL,UAAW,SACX,UAAW,EACX,SAAU,CAAEE,CAAI,CAClB,CAEF,CACF,EAGMS,EAAW,CACf,MAAO,UACP,IAAK,IACL,YAAa,GACb,SAAU,CACRP,EACAC,EACA,CACE,UAAW,UACX,MAAO,gDACT,CACF,CACF,EAGMO,EAAe,CACnB,SAAU,CAER,CACE,UAAW,WACX,MAAO,IAAI,OAAOd,EAAsB,MAAM,CAChD,EACA,CACE,UAAW,UACX,MAAO,aACP,UAAW,CACb,CACF,CACF,EAEMe,EAAa,CACjB,UAAW,eACX,MAAO,MACP,UAAW,CACb,EAIMC,EAAa,CACjB,UAAW,WACX,MAAO,wBACP,IAAK,IACL,YAAa,GACb,UAAW,EACX,SAAU,CACR,CACE,UAAW,UACX,MAAO,IAAI,OACTf,EAAS,QAAQ,SAAS,EAAE,QAAQ,MAAO,GAC3C,EAAG,MAAM,EACX,WAAY,GACZ,UAAW,CACb,EACAJ,EAAK,QAAQA,EAAK,WAAY,CAC5B,WAAY,EACd,CAAC,CACH,CACF,EAEMoB,EAAiB,CAErBD,EACAP,EACAN,EACAN,EAAK,YACLS,EACAC,EAEAG,EACAN,EACAC,EACAU,CACF,EAEMG,EAAU,CACd,MAAO,KACP,IAAK,KACL,aAAc,GACd,WAAY,GACZ,UAAW,EACX,SAAU,CAAC,EAAE,OACX,OACAD,EACA,CACE,MAAO,IAAMnB,EAAM,KAAK,GAAG,EAAI,IAC/B,UAAW,WACX,UAAW,CACb,EACA,CACE,UAAW,OACX,MAAO,YACP,UAAW,CACb,CACF,CACF,EAEA,OAAAkB,EAAW,SAAS,QAAQE,CAAO,EAE5B,CACL,KAAM,aACN,QAAS,CACP,KACA,KACF,EACA,iBAAkB,GAClB,SAAUjB,EACV,SAAUgB,EAAe,OACvBN,EACAC,EACAC,EACAC,EACAI,CACF,CACF,CACF,CAEAC,EAAO,QAAUvB,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/powershell.js"],"sourcesContent":["/*\nLanguage: PowerShell\nDescription: PowerShell is a task-based command-line shell and scripting language built on .NET.\nAuthor: David Mohundro <david@mohundro.com>\nContributors: Nicholas Blumhardt <nblumhardt@nblumhardt.com>, Victor Zhou <OiCMudkips@users.noreply.github.com>, Nicolas Le Gall <contact@nlegall.fr>\nWebsite: https://docs.microsoft.com/en-us/powershell/\n*/\n\nfunction powershell(hljs) {\n  const TYPES = [\n    \"string\",\n    \"char\",\n    \"byte\",\n    \"int\",\n    \"long\",\n    \"bool\",\n    \"decimal\",\n    \"single\",\n    \"double\",\n    \"DateTime\",\n    \"xml\",\n    \"array\",\n    \"hashtable\",\n    \"void\"\n  ];\n\n  // https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands\n  const VALID_VERBS =\n    'Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|' +\n    'Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|' +\n    'Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|' +\n    'Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|' +\n    'ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|' +\n    'Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|' +\n    'Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|' +\n    'Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|' +\n    'Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|' +\n    'Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|' +\n    'Unprotect|Use|ForEach|Sort|Tee|Where';\n\n  const COMPARISON_OPERATORS =\n    '-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|' +\n    '-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|' +\n    '-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|' +\n    '-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|' +\n    '-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|' +\n    '-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|' +\n    '-split|-wildcard|-xor';\n\n  const KEYWORDS = {\n    $pattern: /-?[A-z\\.\\-]+\\b/,\n    keyword:\n      'if else foreach return do while until elseif begin for trap data dynamicparam ' +\n      'end break throw param continue finally in switch exit filter try process catch ' +\n      'hidden static parameter',\n    // \"echo\" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts\n    built_in:\n      'ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp ' +\n      'cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx ' +\n      'fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group ' +\n      'gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi ' +\n      'iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh ' +\n      'popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp ' +\n      'rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp ' +\n      'spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write'\n    // TODO: 'validate[A-Z]+' can't work in keywords\n  };\n\n  const TITLE_NAME_RE = /\\w[\\w\\d]*((-)[\\w\\d]+)*/;\n\n  const BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]',\n    relevance: 0\n  };\n\n  const VAR = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$\\B/\n      },\n      {\n        className: 'keyword',\n        begin: /\\$this/\n      },\n      {\n        begin: /\\$[\\w\\d][\\w\\d_:]*/\n      }\n    ]\n  };\n\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\$(null|true|false)\\b/\n  };\n\n  const QUOTE_STRING = {\n    className: \"string\",\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /@\"/,\n        end: /^\"@/\n      }\n    ],\n    contains: [\n      BACKTICK_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$[A-z]/,\n        end: /[^A-z]/\n      }\n    ]\n  };\n\n  const APOS_STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /@'/,\n        end: /^'@/\n      }\n    ]\n  };\n\n  const PS_HELPTAGS = {\n    className: \"doctag\",\n    variants: [\n      /* no paramater help tags */\n      {\n        begin: /\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/\n      },\n      /* one parameter help tags */\n      {\n        begin: /\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/\n      }\n    ]\n  };\n\n  const PS_COMMENT = hljs.inherit(\n    hljs.COMMENT(null, null),\n    {\n      variants: [\n        /* single-line comment */\n        {\n          begin: /#/,\n          end: /$/\n        },\n        /* multi-line comment */\n        {\n          begin: /<#/,\n          end: /#>/\n        }\n      ],\n      contains: [ PS_HELPTAGS ]\n    }\n  );\n\n  const CMDLETS = {\n    className: 'built_in',\n    variants: [\n      {\n        begin: '('.concat(VALID_VERBS, ')+(-)[\\\\w\\\\d]+')\n      }\n    ]\n  };\n\n  const PS_CLASS = {\n    className: 'class',\n    beginKeywords: 'class enum',\n    end: /\\s*[{]/,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [ hljs.TITLE_MODE ]\n  };\n\n  const PS_FUNCTION = {\n    className: 'function',\n    begin: /function\\s+/,\n    end: /\\s*\\{|$/,\n    excludeEnd: true,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: \"function\",\n        relevance: 0,\n        className: \"keyword\"\n      },\n      {\n        className: \"title\",\n        begin: TITLE_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        className: \"params\",\n        relevance: 0,\n        contains: [ VAR ]\n      }\n      // CMDLETS\n    ]\n  };\n\n  // Using statment, plus type, plus assembly name.\n  const PS_USING = {\n    begin: /using\\s/,\n    end: /$/,\n    returnBegin: true,\n    contains: [\n      QUOTE_STRING,\n      APOS_STRING,\n      {\n        className: 'keyword',\n        begin: /(using|assembly|command|module|namespace|type)/\n      }\n    ]\n  };\n\n  // Comperison operators & function named parameters.\n  const PS_ARGUMENTS = {\n    variants: [\n      // PS literals are pretty verbose so it's a good idea to accent them a bit.\n      {\n        className: 'operator',\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\n      },\n      {\n        className: 'literal',\n        begin: /(-)[\\w\\d]+/,\n        relevance: 0\n      }\n    ]\n  };\n\n  const HASH_SIGNS = {\n    className: 'selector-tag',\n    begin: /@\\B/,\n    relevance: 0\n  };\n\n  // It's a very general rule so I'll narrow it a bit with some strict boundaries\n  // to avoid any possible false-positive collisions!\n  const PS_METHODS = {\n    className: 'function',\n    begin: /\\[.*\\]\\s*[\\w]+[ ]??\\(/,\n    end: /$/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        begin: '('.concat(\n          KEYWORDS.keyword.toString().replace(/\\s/g, '|'\n          ), ')\\\\b'),\n        endsParent: true,\n        relevance: 0\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        endsParent: true\n      })\n    ]\n  };\n\n  const GENTLEMANS_SET = [\n    // STATIC_MEMBER,\n    PS_METHODS,\n    PS_COMMENT,\n    BACKTICK_ESCAPE,\n    hljs.NUMBER_MODE,\n    QUOTE_STRING,\n    APOS_STRING,\n    // PS_NEW_OBJECT_TYPE,\n    CMDLETS,\n    VAR,\n    LITERAL,\n    HASH_SIGNS\n  ];\n\n  const PS_TYPE = {\n    begin: /\\[/,\n    end: /\\]/,\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [].concat(\n      'self',\n      GENTLEMANS_SET,\n      {\n        begin: \"(\" + TYPES.join(\"|\") + \")\",\n        className: \"built_in\",\n        relevance: 0\n      },\n      {\n        className: 'type',\n        begin: /[\\.\\w\\d]+/,\n        relevance: 0\n      }\n    )\n  };\n\n  PS_METHODS.contains.unshift(PS_TYPE);\n\n  return {\n    name: 'PowerShell',\n    aliases: [\n      \"ps\",\n      \"ps1\"\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: GENTLEMANS_SET.concat(\n      PS_CLASS,\n      PS_FUNCTION,\n      PS_USING,\n      PS_ARGUMENTS,\n      PS_TYPE\n    )\n  };\n}\n\nmodule.exports = powershell;\n"],"names":["powershell","hljs","TYPES","VALID_VERBS","COMPARISON_OPERATORS","KEYWORDS","TITLE_NAME_RE","BACKTICK_ESCAPE","VAR","LITERAL","QUOTE_STRING","APOS_STRING","PS_HELPTAGS","PS_COMMENT","CMDLETS","PS_CLASS","PS_FUNCTION","PS_USING","PS_ARGUMENTS","HASH_SIGNS","PS_METHODS","GENTLEMANS_SET","PS_TYPE","module"],"sourceRoot":""}