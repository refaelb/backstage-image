{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_cal.f48b8593.chunk.js","mappings":"8EAQA,SAASA,EAAIC,EAAM,CACjB,MAAMC,EACJ,yHAEIC,EAAW,aACXC,EAAgB,CACpBH,EAAK,oBACLA,EAAK,QACH,KACA,KACA,CACE,UAAW,CACb,CACF,EACAA,EAAK,QACH,OACA,OACA,CACE,UAAW,EACb,CACF,CACF,EACMI,EAAS,CACb,UAAW,SACX,MAAO,IACP,IAAK,IACL,SAAU,CAAC,CACT,MAAO,IACT,CAAC,CACH,EACMC,EAAc,CAClB,UAAW,SACX,MAAO,SACT,EACMC,EAAO,CACX,UAAW,SACX,MAAO,4BACP,UAAW,CACb,EACMC,EAAsB,CAC1B,UAAW,SACX,MAAO,IACP,IAAK,GACP,EAEMC,EAAY,CAChB,UAAW,WACX,cAAe,YACf,IAAK,OACL,SAAU,eACV,SAAU,CACRR,EAAK,WACL,CACE,UAAW,SACX,MAAO,KACP,IAAK,KACL,SAAUC,EACV,SAAU,CACRG,EACAC,CACF,CACF,CACF,EAAE,OAAOF,CAAa,CACxB,EAEMM,EAAS,CACb,UAAW,QACX,MAAO,gGACP,YAAa,GACb,SAAU,CACRT,EAAK,WACLQ,CACF,CACF,EAEA,MAAO,CACL,KAAM,OACN,iBAAkB,GAClB,SAAU,CACR,QAASP,EACT,QAASC,CACX,EACA,QAAS,OACT,SAAU,CACRE,EACAC,EACAC,EACAC,EACAP,EAAK,YACLS,EACAD,CACF,CACF,CACF,CAEAE,EAAO,QAAUX,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/cal.js"],"sourcesContent":["/*\nLanguage: C/AL\nAuthor: Kenneth Fuglsang Christensen <kfuglsang@gmail.com>\nDescription: Provides highlighting of Microsoft Dynamics NAV C/AL code files\nWebsite: https://docs.microsoft.com/en-us/dynamics-nav/programming-in-c-al\n*/\n\n/** @type LanguageFn */\nfunction cal(hljs) {\n  const KEYWORDS =\n    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n    'until while with var';\n  const LITERALS = 'false true';\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const DATE = {\n    className: 'number',\n    begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n    relevance: 0\n  };\n  const DBL_QUOTED_VARIABLE = {\n    className: 'string', // not a string technically but makes sense to be highlighted in the same style\n    begin: '\"',\n    end: '\"'\n  };\n\n  const PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure',\n    end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING\n        ]\n      }\n    ].concat(COMMENT_MODES)\n  };\n\n  const OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE,\n      PROCEDURE\n    ]\n  };\n\n  return {\n    name: 'C/AL',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    illegal: /\\/\\*/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      DATE,\n      DBL_QUOTED_VARIABLE,\n      hljs.NUMBER_MODE,\n      OBJECT,\n      PROCEDURE\n    ]\n  };\n}\n\nmodule.exports = cal;\n"],"names":["cal","hljs","KEYWORDS","LITERALS","COMMENT_MODES","STRING","CHAR_STRING","DATE","DBL_QUOTED_VARIABLE","PROCEDURE","OBJECT","module"],"sourceRoot":""}