{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_ceylon.9c2a2dbf.chunk.js","mappings":"8EAOA,SAASA,EAAOC,EAAM,CAEpB,MAAMC,EACJ,iRAKIC,EACJ,uHAGIC,EACJ,mCACIC,EAAQ,CACZ,UAAW,QACX,aAAc,GACd,WAAY,GACZ,MAAO,KACP,IAAK,KACL,SAAUH,EACV,UAAW,EACb,EACMI,EAAc,CAClB,CAEE,UAAW,SACX,MAAO,MACP,IAAK,MACL,UAAW,EACb,EACA,CAEE,UAAW,SACX,MAAO,IACP,IAAK,IACL,SAAU,CAACD,CAAK,CAClB,EACA,CAEE,UAAW,SACX,MAAO,IACP,IAAK,GACP,EACA,CAEE,UAAW,SACX,MAAO,gFACP,UAAW,CACb,CACF,EACA,OAAAA,EAAM,SAAWC,EAEV,CACL,KAAM,SACN,SAAU,CACR,QAASJ,EAAW,IAAMC,EAC1B,KAAMC,CACR,EACA,QAAS,yBACT,SAAU,CACRH,EAAK,oBACLA,EAAK,QAAQ,OAAQ,OAAQ,CAC3B,SAAU,CAAC,MAAM,CACnB,CAAC,EACD,CAEE,UAAW,OACX,MAAO,yBACT,CACF,EAAE,OAAOK,CAAW,CACtB,CACF,CAEAC,EAAO,QAAUP,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/ceylon.js"],"sourcesContent":["/*\nLanguage: Ceylon\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\nWebsite: https://ceylon-lang.org\n*/\n\n/** @type LanguageFn */\nfunction ceylon(hljs) {\n  // 2.3. Identifiers and keywords\n  const KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  const DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated ' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  const DOCUMENTATION =\n    'doc by license see throws tagged';\n  const SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  const EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    name: 'Ceylon',\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: ['self']\n      }),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?::\"[^\"]*\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n}\n\nmodule.exports = ceylon;\n"],"names":["ceylon","hljs","KEYWORDS","DECLARATION_MODIFIERS","DOCUMENTATION","SUBST","EXPRESSIONS","module"],"sourceRoot":""}