{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_elm.f80b1413.chunk.js","mappings":"8EAQA,SAASA,EAAIC,EAAM,CACjB,MAAMC,EAAU,CACd,SAAU,CACRD,EAAK,QAAQ,KAAM,GAAG,EACtBA,EAAK,QACH,MACA,MACA,CACE,SAAU,CAAC,MAAM,CACnB,CACF,CACF,CACF,EAEME,EAAc,CAClB,UAAW,OACX,MAAO,kBACP,UAAW,CACb,EAEMC,EAAO,CACX,MAAO,MACP,IAAK,MACL,QAAS,IACT,SAAU,CACR,CACE,UAAW,OACX,MAAO,wCACT,EACAF,CACF,CACF,EAEMG,EAAS,CACb,MAAO,KACP,IAAK,KACL,SAAUD,EAAK,QACjB,EAEME,EAAY,CAChB,UAAW,SACX,MAAO,UACP,IAAK,IACL,QAAS,GACX,EAEA,MAAO,CACL,KAAM,MACN,SACE,8HAEF,SAAU,CAIR,CACE,cAAe,qBACf,IAAK,WACL,SAAU,yDACV,SAAU,CACRF,EACAF,CACF,EACA,QAAS,UACX,EACA,CACE,MAAO,SACP,IAAK,IACL,SAAU,qBACV,SAAU,CACRE,EACAF,CACF,EACA,QAAS,UACX,EACA,CACE,MAAO,OACP,IAAK,IACL,SAAU,aACV,SAAU,CACRC,EACAC,EACAC,EACAH,CACF,CACF,EACA,CACE,cAAe,sBACf,IAAK,IACL,SAAU,CACRD,EAAK,cACLC,CACF,CACF,EACA,CACE,MAAO,OACP,IAAK,IACL,SAAU,OACV,SAAU,CAACA,CAAO,CACpB,EAIAI,EACAL,EAAK,kBACLA,EAAK,cACLE,EACAF,EAAK,QAAQA,EAAK,WAAY,CAC5B,MAAO,gBACT,CAAC,EACDC,EAEA,CACE,MAAO,OACT,CACF,EACA,QAAS,GACX,CACF,CAEAK,EAAO,QAAUP,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/elm.js"],"sourcesContent":["/*\nLanguage: Elm\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\nWebsite: https://elm-lang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n\n  return {\n    name: 'Elm',\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module',\n        end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import',\n        end: '$',\n        keywords: 'import as exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type',\n        end: '$',\n        keywords: 'type alias',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: 'port',\n        end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n\n      {\n        begin: '->|<-'\n      } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;\n"],"names":["elm","hljs","COMMENT","CONSTRUCTOR","LIST","RECORD","CHARACTER","module"],"sourceRoot":""}