{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_groovy.1c59a78e.chunk.js","mappings":"6EASA,SAASA,EAAOC,EAAI,CAClB,OAAKA,EACD,OAAOA,GAAO,SAAiBA,EAE5BA,EAAG,OAHM,IAIlB,CAMA,SAASC,EAAUD,EAAI,CACrB,OAAOE,EAAO,MAAOF,EAAI,GAAG,CAC9B,CAMA,SAASE,KAAUC,EAAM,CAEvB,OADeA,EAAK,IAAKC,GAAML,EAAOK,CAAC,CAAC,EAAE,KAAK,EAAE,CAEnD,CASA,SAASC,EAASA,EAAUC,EAAM,CAAC,EAAG,CACpC,OAAAA,EAAI,SAAWD,EACRC,CACT,CAEA,SAASC,EAAOC,EAAM,CACpB,MAAMC,EAAW,iBACXC,EAAUL,EAAS,CACvBG,EAAK,oBACLA,EAAK,qBACLA,EAAK,QACH,UACA,OACA,CACE,UAAW,EACX,SAAU,CACR,CAEE,MAAO,OACP,UAAW,CACb,EACA,CACE,UAAW,SACX,MAAO,YACT,CACF,CACF,CACF,CACF,CAAC,EACKG,EAAS,CACb,UAAW,SACX,MAAO,iBACP,SAAU,CAAEH,EAAK,gBAAiB,CACpC,EACMI,EAASP,EAAS,CACtBG,EAAK,mBACLA,EAAK,aACP,CAAC,EACKK,EAASR,EAAS,CACtB,CACE,MAAO,MACP,IAAK,KACP,EACA,CACE,MAAO,MACP,IAAK,KACP,EACA,CACE,MAAO,OACP,IAAK,OACL,UAAW,EACb,EACAG,EAAK,iBACLA,EAAK,iBACP,EACA,CACE,UAAW,QACb,CACA,EAEA,MAAO,CACL,KAAM,SACN,SAAU,CACR,SAAU,aACV,QAAS,kBACT,QACM,2TAOR,EACA,SAAU,CACRA,EAAK,QAAQ,CACX,OAAQ,SACR,UAAW,EACb,CAAC,EACDE,EACAG,EACAF,EACAC,EACA,CACE,UAAW,QACX,cAAe,6BACf,IAAK,KACL,QAAS,IACT,SAAU,CACR,CACE,cAAe,oBACjB,EACAJ,EAAK,qBACP,CACF,EACA,CACE,UAAW,OACX,MAAO,aACP,UAAW,CACb,EACA,CAEE,UAAW,OACX,MAAOC,EAAW,SAClB,UAAW,CACb,EACA,CAGE,MAAO,KACP,IAAK,IACL,UAAW,EACX,SAAU,CACRC,EACAG,EACAF,EACAC,EACA,MACF,CACF,EACA,CAEE,UAAW,SACX,MAAO,SAAYX,EAAUQ,EAAW,GAAG,EAC3C,aAAc,GACd,IAAKA,EAAW,IAChB,UAAW,CACb,CACF,EACA,QAAS,OACX,CACF,CAEAK,EAAO,QAAUP,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/groovy.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  {\n    className: \"string\"\n  }\n  );\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait enum',\n        end: /\\{/,\n        illegal: ':',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n"],"names":["source","re","lookahead","concat","args","x","variants","obj","groovy","hljs","IDENT_RE","COMMENT","REGEXP","NUMBER","STRING","module"],"sourceRoot":""}