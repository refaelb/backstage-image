{"version":3,"file":"static/9842.c7adecce.chunk.js","mappings":"0SAiBA,MAAMA,KAAY,KAChB,CACE,KAAM,CAAC,CAAE,OAAAC,CAAO,KAAO,CACrB,QAAS,OACT,cAAe,SACf,UAAWA,EACX,UAAWA,CACb,GACA,MAAO,CACL,KAAM,EACN,UAAW,CACb,CACF,EACA,CAAE,KAAM,oCAAqC,CAC/C,EACMC,EAAoBC,GAAU,CAClC,KAAM,CACJ,QAAAC,EAAU,WACV,cAAAC,EAAgB,KAChB,SAAAC,EAAW,EACX,eAAAC,EAAiB,GACjB,eAAAC,EAAiB,GACjB,UAAAC,EAAY,KAAU,WACtB,MAAAC,EACA,UAAAC,EACA,OAAAV,EACA,UAAAW,EACA,gBAAAC,EACA,YAAAC,EACA,MAAAC,EAAQ,YACR,KAAAC,EAAO,iBACT,EAAIb,EACE,CAAE,OAAAc,CAAO,KAAI,KAAU,EACvBC,KAAa,MAAqBD,CAAM,EACxCE,KAAqB,MAAY,IAAc,EAC/CC,KAAoB,MAAY,IAAoB,EACpDC,KAAW,MAAY,EACvBC,EAAUtB,EAAU,CAAE,OAAAC,CAAO,CAAC,EAC9BsB,KAAY,MAAa,EACzBC,KAAqB,eACzB,CAACC,EAAMC,IAAM,CACX,IAAIC,EACJ,MAAMC,KAAiB,MAAeH,EAAK,EAAE,EACvCI,EAAOV,EAAmB,CAC9B,KAAMS,EAAe,KAAK,kBAAkB,OAAO,EACnD,UAAWA,EAAe,UAAU,kBAAkB,OAAO,EAC7D,KAAMA,EAAe,IACvB,CAAC,EACDL,EAAU,aACR,SACCI,EAAKF,EAAK,OAAO,SAAS,QAAU,KAAOE,KAAK,MAAkBC,CAAc,EACjF,CAAE,WAAY,CAAE,GAAIC,CAAK,CAAE,CAC7B,EACAR,EAASQ,CAAI,CACf,EACA,CAACV,EAAoBE,EAAUE,CAAS,CAC1C,EACMO,EAAqB,cACzB,CACE,eAAgB,IAAC,MAAmBb,CAAM,CAAC,EAC3C,SAAAX,EACA,eAAAC,EACA,eAAAC,EACA,cAAeE,EACf,kBAAmBC,EACnB,UAAAF,CACF,EACA,CAAE,YAAa,WAAY,eAAgB,EAAK,CAClD,EACMsB,EAAkB,GAAGX,EAAkB,IAAIU,IACjD,OAAuB,gBACrB,KACA,CACE,MAAAf,EACA,cAAeO,EAAQ,KACvB,QAAAlB,EACA,UAAW,GACX,SAAU,CACR,MAAO,aACP,KAAM2B,CACR,CACF,EACgB,gBACd,KACA,CACE,GAAG5B,EACH,gBAAiBU,GAAmBK,EACpC,YAAaJ,GAAeU,EAC5B,UAAWZ,GAAaU,EAAQ,MAChC,SAAAhB,EACA,eAAAC,EACA,eAAAC,EACA,UAAAC,EACA,cAAAJ,EACA,KAAAW,CACF,CACF,CACF,CACF,C","sources":["webpack://app/../../node_modules/@backstage/plugin-catalog-graph/dist/esm/index-7de551c2.esm.js"],"sourcesContent":["import { getCompoundEntityRef, parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { InfoCard } from '@backstage/core-components';\nimport { useRouteRef, useAnalytics } from '@backstage/core-plugin-api';\nimport { useEntity, entityRouteRef, humanizeEntityRef } from '@backstage/plugin-catalog-react';\nimport { makeStyles } from '@material-ui/core';\nimport qs from 'qs';\nimport React, { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ALL_RELATION_PAIRS, Direction, catalogGraphRouteRef, EntityRelationsGraph } from '../index.esm.js';\nimport 'classnames';\nimport '@material-ui/core/styles/makeStyles';\nimport '@material-ui/core/styles';\nimport '@material-ui/icons/Work';\nimport 'react-use/lib/useDebounce';\nimport 'p-limit';\nimport 'react-use/lib/useAsyncFn';\n\nconst useStyles = makeStyles(\n  {\n    card: ({ height }) => ({\n      display: \"flex\",\n      flexDirection: \"column\",\n      maxHeight: height,\n      minHeight: height\n    }),\n    graph: {\n      flex: 1,\n      minHeight: 0\n    }\n  },\n  { name: \"PluginCatalogGraphCatalogGraphCard\" }\n);\nconst CatalogGraphCard = (props) => {\n  const {\n    variant = \"gridItem\",\n    relationPairs = ALL_RELATION_PAIRS,\n    maxDepth = 1,\n    unidirectional = true,\n    mergeRelations = true,\n    direction = Direction.LEFT_RIGHT,\n    kinds,\n    relations,\n    height,\n    className,\n    rootEntityNames,\n    onNodeClick,\n    title = \"Relations\",\n    zoom = \"enable-on-click\"\n  } = props;\n  const { entity } = useEntity();\n  const entityName = getCompoundEntityRef(entity);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const catalogGraphRoute = useRouteRef(catalogGraphRouteRef);\n  const navigate = useNavigate();\n  const classes = useStyles({ height });\n  const analytics = useAnalytics();\n  const defaultOnNodeClick = useCallback(\n    (node, _) => {\n      var _a;\n      const nodeEntityName = parseEntityRef(node.id);\n      const path = catalogEntityRoute({\n        kind: nodeEntityName.kind.toLocaleLowerCase(\"en-US\"),\n        namespace: nodeEntityName.namespace.toLocaleLowerCase(\"en-US\"),\n        name: nodeEntityName.name\n      });\n      analytics.captureEvent(\n        \"click\",\n        (_a = node.entity.metadata.title) != null ? _a : humanizeEntityRef(nodeEntityName),\n        { attributes: { to: path } }\n      );\n      navigate(path);\n    },\n    [catalogEntityRoute, navigate, analytics]\n  );\n  const catalogGraphParams = qs.stringify(\n    {\n      rootEntityRefs: [stringifyEntityRef(entity)],\n      maxDepth,\n      unidirectional,\n      mergeRelations,\n      selectedKinds: kinds,\n      selectedRelations: relations,\n      direction\n    },\n    { arrayFormat: \"brackets\", addQueryPrefix: true }\n  );\n  const catalogGraphUrl = `${catalogGraphRoute()}${catalogGraphParams}`;\n  return /* @__PURE__ */ React.createElement(\n    InfoCard,\n    {\n      title,\n      cardClassName: classes.card,\n      variant,\n      noPadding: true,\n      deepLink: {\n        title: \"View graph\",\n        link: catalogGraphUrl\n      }\n    },\n    /* @__PURE__ */ React.createElement(\n      EntityRelationsGraph,\n      {\n        ...props,\n        rootEntityNames: rootEntityNames || entityName,\n        onNodeClick: onNodeClick || defaultOnNodeClick,\n        className: className || classes.graph,\n        maxDepth,\n        unidirectional,\n        mergeRelations,\n        direction,\n        relationPairs,\n        zoom\n      }\n    )\n  );\n};\n\nexport { CatalogGraphCard };\n//# sourceMappingURL=index-7de551c2.esm.js.map\n"],"names":["useStyles","height","CatalogGraphCard","props","variant","relationPairs","maxDepth","unidirectional","mergeRelations","direction","kinds","relations","className","rootEntityNames","onNodeClick","title","zoom","entity","entityName","catalogEntityRoute","catalogGraphRoute","navigate","classes","analytics","defaultOnNodeClick","node","_","_a","nodeEntityName","path","catalogGraphParams","catalogGraphUrl"],"sourceRoot":""}