{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_asciidoc.7a22593b.chunk.js","mappings":"8EASA,SAASA,EAAOC,EAAI,CAClB,OAAKA,EACD,OAAOA,GAAO,SAAiBA,EAE5BA,EAAG,OAHM,IAIlB,CAMA,SAASC,KAAUC,EAAM,CAEvB,OADeA,EAAK,IAAKC,GAAMJ,EAAOI,CAAC,CAAC,EAAE,KAAK,EAAE,CAEnD,CAYA,SAASC,EAASC,EAAM,CACtB,MAAMC,EAAkB,CACtB,MAAO,iBACP,UAAW,EACb,EACMC,EAAqB,CAEzB,CACE,MAAO,SACT,EAIA,CACE,MAAO,uBACT,EACA,CACE,MAAO,oBACT,EACA,CACE,MAAO,oBACT,EAGA,CACE,MAAO,qBACT,CACF,EACMC,EAAS,CAEb,CACE,UAAW,SACX,MAAO,qBACT,EAEA,CACE,UAAW,SACX,MAAOP,EACL,OACA,oCACA,+BACA,MACF,EACA,UAAW,CACb,EAEA,CACE,UAAW,SAEX,MAAO,8BACT,EAEA,CACE,UAAW,SAEX,MAAO,8BACT,CACF,EACMQ,EAAW,CAEf,CACE,UAAW,WACX,MAAO,mBACT,EAEA,CACE,UAAW,WACX,MAAOR,EACL,KACA,kCACA,6BACA,IACF,EACA,UAAW,CACb,EAEA,CACE,UAAW,WAEX,MAAO,4BACT,EAEA,CACE,UAAW,WAEX,MAAO,4BACT,EAEA,CACE,UAAW,WAEX,MAAO,iBACP,IAAK,aAEL,SAAU,CAAC,CACT,MAAO,WACP,UAAW,CACb,CAAC,EACD,UAAW,CACb,CACF,EACMS,EAAa,CACjB,UAAW,SACX,MAAO,6CACP,UAAW,EACb,EACMC,EAAc,CAClB,UAAW,SACX,MAAO,gCACT,EAEA,MAAO,CACL,KAAM,WACN,QAAS,CAAC,MAAM,EAChB,SAAU,CAERN,EAAK,QACH,YACA,YAIA,CACE,UAAW,EACb,CACF,EAEAA,EAAK,QACH,MACA,IACA,CACE,UAAW,CACb,CACF,EAEA,CACE,UAAW,QACX,MAAO,YACT,EAEA,CACE,MAAO,iBACP,IAAK,kBACL,UAAW,EACb,EAEA,CACE,UAAW,UACX,UAAW,GACX,SAAU,CACR,CACE,MAAO,6BACT,EACA,CACE,MAAO,sCACT,CACF,CACF,EAEA,CACE,UAAW,OACX,MAAO,SACP,IAAK,MACL,WAAY,GACZ,UAAW,EACb,EAEA,CACE,UAAW,OACX,MAAO,cACP,UAAW,CACb,EAEA,CACE,UAAW,QACX,MAAO,YACP,IAAK,YACL,UAAW,EACb,EAEA,CACE,UAAW,OACX,MAAO,mBACP,IAAK,mBACL,UAAW,EACb,EAEA,CACE,MAAO,cACP,IAAK,cACL,SAAU,CAAC,CACT,MAAO,IACP,IAAK,IACL,YAAa,MACb,UAAW,CACb,CAAC,EACD,UAAW,EACb,EAEAM,EACAD,EACA,GAAGH,EACH,GAAGC,EACH,GAAGC,EAGH,CACE,UAAW,SACX,SAAU,CACR,CACE,MAAO,SACT,EACA,CACE,MAAO,OACT,CACF,CACF,EAEA,CACE,UAAW,OACX,MAAO,OACP,IAAK,cACP,EAEA,CACE,UAAW,OACX,MAAO,oBACP,UAAW,CACb,EAEA,CACE,UAAW,OACX,MAAO,UACP,IAAK,IACL,UAAW,CACb,EACAH,EAEA,CACE,MAAO,8DACP,YAAa,GACb,SAAU,CACR,CACE,MAAO,kBACP,UAAW,CACb,EACA,CACE,UAAW,OACX,MAAO,MACP,IAAK,UACL,UAAW,CACb,EACA,CACE,UAAW,SACX,MAAO,MACP,IAAK,MACL,aAAc,GACd,WAAY,GACZ,UAAW,CACb,CACF,EACA,UAAW,EACb,CACF,CACF,CACF,CAEAM,EAAO,QAAUR,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/asciidoc.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  const HORIZONTAL_RULE = {\n    begin: '^\\'{3,}[ \\\\t]*$',\n    relevance: 10\n  };\n  const ESCAPED_FORMATTING = [\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n    {\n      begin: /\\\\[*_`]/\n    },\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n    // must ignore until the next formatting marks\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n    {\n      begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/\n    },\n    {\n      begin: /\\\\\\\\_{2}[^\\n]*_{2}/\n    },\n    {\n      begin: /\\\\\\\\`{2}[^\\n]*`{2}/\n    },\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\n    // \"}\". match these so the constrained rule doesn't see them\n    {\n      begin: /[:;}][*_`](?![*_`])/\n    }\n  ];\n  const STRONG = [\n    // inline unconstrained strong (single line)\n    {\n      className: 'strong',\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\n    },\n    // inline unconstrained strong (multi-line)\n    {\n      className: 'strong',\n      begin: concat(\n        /\\*\\*/,\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\n        /\\*\\*/\n      ),\n      relevance: 0\n    },\n    // inline constrained strong (single line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\n    },\n    // inline constrained strong (multi-line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\n    }\n  ];\n  const EMPHASIS = [\n    // inline unconstrained emphasis (single line)\n    {\n      className: 'emphasis',\n      begin: /_{2}([^\\n]+?)_{2}/\n    },\n    // inline unconstrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      begin: concat(\n        /__/,\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\n        /__/\n      ),\n      relevance: 0\n    },\n    // inline constrained emphasis (single line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\n    },\n    // inline constrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\n    },\n    // inline constrained emphasis using single quote (legacy)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }\n  ];\n  const ADMONITION = {\n    className: 'symbol',\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n    relevance: 10\n  };\n  const BULLET_LIST = {\n    className: 'bullet',\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n  };\n\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {\n            begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'\n          },\n          {\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n          }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [{\n          begin: '<',\n          end: '>',\n          subLanguage: 'xml',\n          relevance: 0\n        }],\n        relevance: 10\n      },\n\n      BULLET_LIST,\n      ADMONITION,\n      ...ESCAPED_FORMATTING,\n      ...STRONG,\n      ...EMPHASIS,\n\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: \"``.+?''\"\n          },\n          {\n            begin: \"`.+?'\"\n          }\n        ]\n      },\n      // inline unconstrained emphasis\n      {\n        className: 'code',\n        begin: /`{2}/,\n        end: /(\\n{2}|`{2})/\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      HORIZONTAL_RULE,\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n"],"names":["source","re","concat","args","x","asciidoc","hljs","HORIZONTAL_RULE","ESCAPED_FORMATTING","STRONG","EMPHASIS","ADMONITION","BULLET_LIST","module"],"sourceRoot":""}