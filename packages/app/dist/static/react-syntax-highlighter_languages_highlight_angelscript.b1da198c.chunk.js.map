{"version":3,"file":"static/react-syntax-highlighter_languages_highlight_angelscript.b1da198c.chunk.js","mappings":"8EAQA,SAASA,EAAYC,EAAM,CACzB,IAAIC,EAAkB,CACpB,UAAW,WACX,MAAO,yHACT,EAEIC,EAAmB,CACrB,UAAW,SACX,MAAO,gBACT,EAEIC,EAAc,CAChB,UAAW,UACX,MAAO,IAAK,IAAK,IACjB,SAAU,CAAEF,EAAiBC,CAAiB,CAChD,EAEA,OAAAD,EAAgB,SAAW,CAAEE,CAAY,EACzCD,EAAiB,SAAW,CAAEC,CAAY,EAEnC,CACL,KAAM,cACN,QAAS,CAAC,KAAK,EAEf,SACE,2SAMF,QAAS,uDAET,SAAU,CACR,CACE,UAAW,SACX,MAAO,IAAM,IAAK,IAClB,QAAS,MACT,SAAU,CAAEH,EAAK,gBAAiB,EAClC,UAAW,CACb,EAGA,CACE,UAAW,SACX,MAAO,MAAO,IAAK,KACrB,EAEA,CACE,UAAW,SACX,MAAO,IAAK,IAAK,IACjB,QAAS,MACT,SAAU,CAAEA,EAAK,gBAAiB,EAClC,UAAW,CACb,EAEAA,EAAK,oBACLA,EAAK,qBAEL,CACE,UAAW,SACX,MAAO,WAAY,IAAK,KAC1B,EAEA,CACE,cAAe,sBAAuB,IAAK,KAC3C,QAAS,UACT,SAAU,CACR,CACE,UAAW,SACX,MAAO,eACT,CACF,CACF,EAEA,CACE,cAAe,QAAS,IAAK,KAC7B,QAAS,UACT,SAAU,CACR,CACE,UAAW,SACX,MAAO,gBACP,SAAU,CACR,CACE,MAAO,WACP,SAAU,CACR,CACE,UAAW,SACX,MAAO,eACT,CACF,CACF,CACF,CACF,CACF,CACF,EAEAC,EACAC,EAEA,CACE,UAAW,UACX,MAAO,sBACT,EAEA,CACE,UAAW,SACX,UAAW,EACX,MAAO,oFACT,CACF,CACF,CACF,CAEAE,EAAO,QAAUL,C","sources":["webpack://app/../../node_modules/highlight.js/lib/languages/angelscript.js"],"sourcesContent":["/*\nLanguage: AngelScript\nAuthor: Melissa Geels <melissa@nimble.tools>\nCategory: scripting\nWebsite: https://www.angelcode.com/angelscript/\n*/\n\n/** @type LanguageFn */\nfunction angelscript(hljs) {\n  var builtInTypeMode = {\n    className: 'built_in',\n    begin: '\\\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'\n  };\n\n  var objectHandleMode = {\n    className: 'symbol',\n    begin: '[a-zA-Z0-9_]+@'\n  };\n\n  var genericMode = {\n    className: 'keyword',\n    begin: '<', end: '>',\n    contains: [ builtInTypeMode, objectHandleMode ]\n  };\n\n  builtInTypeMode.contains = [ genericMode ];\n  objectHandleMode.contains = [ genericMode ];\n\n  return {\n    name: 'AngelScript',\n    aliases: ['asc'],\n\n    keywords:\n      'for in|0 break continue while do|0 return if else case switch namespace is cast ' +\n      'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' +\n      'final shared external mixin|10 enum typedef funcdef this super import from interface ' +\n      'abstract|0 try catch protected explicit property',\n\n    // avoid close detection with C# and JS\n    illegal: '(^using\\\\s+[A-Za-z0-9_\\\\.]+;$|\\\\bfunction\\\\s*[^\\\\(])',\n\n    contains: [\n      { // 'strings'\n        className: 'string',\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      // \"\"\"heredoc strings\"\"\"\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n\n      { // \"strings\"\n        className: 'string',\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      hljs.C_LINE_COMMENT_MODE, // single-line comments\n      hljs.C_BLOCK_COMMENT_MODE, // comment blocks\n\n      { // metadata\n        className: 'string',\n        begin: '^\\\\s*\\\\[', end: '\\\\]',\n      },\n\n      { // interface or namespace declaration\n        beginKeywords: 'interface namespace', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // interface or namespace name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+'\n          }\n        ]\n      },\n\n      { // class declaration\n        beginKeywords: 'class', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // class name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+',\n            contains: [\n              {\n                begin: '[:,]\\\\s*',\n                contains: [\n                  {\n                    className: 'symbol',\n                    begin: '[a-zA-Z0-9_]+'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n\n      builtInTypeMode, // built-in types\n      objectHandleMode, // object handles\n\n      { // literals\n        className: 'literal',\n        begin: '\\\\b(null|true|false)'\n      },\n\n      { // numbers\n        className: 'number',\n        relevance: 0,\n        begin: '(-?)(\\\\b0[xXbBoOdD][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?f?|\\\\.\\\\d+f?)([eE][-+]?\\\\d+f?)?)'\n      }\n    ]\n  };\n}\n\nmodule.exports = angelscript;\n"],"names":["angelscript","hljs","builtInTypeMode","objectHandleMode","genericMode","module"],"sourceRoot":""}