{"version":3,"file":"immutabilityHelpers.js","names":["_typeguards","require","_utils","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","shallowClone","isJSONArray","copy","slice","symbol","isJSONObject","applyProp","updatedObject","getIn","path","parseInt","setIn","createPath","updatedValue","newObject","IS_INTEGER_REGEX","test","Error","updateIn","callback","isObjectOrArray","deleteIn","splice","insertAt","document","parentPath","index","items","Array","isArray","JSON","stringify","updatedItems","transform","updated1","updated2","before","after","concat","hasOwnProperty","existsIn"],"sources":["../../src/immutabilityHelpers.ts"],"sourcesContent":["/**\n * Immutability helpers\n *\n * inspiration:\n *\n * https://www.npmjs.com/package/seamless-immutable\n * https://www.npmjs.com/package/ih\n * https://www.npmjs.com/package/mutatis\n * https://github.com/mariocasciaro/object-path-immutable\n */\nimport { isJSONArray, isJSONObject } from './typeguards.js'\nimport type { JSONArray, JSONValue, JSONObject, JSONPath } from './types'\nimport { isObjectOrArray } from './utils.js'\n\n/**\n * Shallow clone of an Object, Array, or value\n * Symbols are cloned too.\n */\nexport function shallowClone<T extends JSONValue> (value: T) : T {\n  if (isJSONArray(value)) {\n    // copy array items\n    const copy: JSONArray = value.slice()\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy as T\n  } else if (isJSONObject(value)) {\n    // copy object properties\n    const copy: JSONObject = { ...value }\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy as T\n  } else {\n    return value\n  }\n}\n\n/**\n * Update a value in an object in an immutable way.\n * If the value is unchanged, the original object will be returned\n */\nexport function applyProp<T extends JSONObject | JSONArray> (object: T, key: string | number, value: JSONValue) : T {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (object[key] === value) {\n    // return original object unchanged when the new value is identical to the old one\n    return object\n  } else {\n    const updatedObject = shallowClone(object)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    updatedObject[key] = value\n    return updatedObject\n  }\n}\n\n/**\n * helper function to get a nested property in an object or array\n *\n * @return Returns the field when found, or undefined when the path doesn't exist\n */\nexport function getIn (object: JSONValue, path: JSONPath) : JSONValue | undefined {\n  let value: JSONValue | undefined = object\n  let i = 0\n\n  while (i < path.length) {\n    if (isJSONObject(value)) {\n      value = value[path[i]]\n    } else if (isJSONArray(value)) {\n      value = value[parseInt(path[i])]\n    } else {\n      value = undefined\n    }\n\n    i++\n  }\n\n  return value\n}\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @param object\n * @param path\n * @param value\n * @param [createPath=false]\n *                    If true, `path` will be created when (partly) missing in\n *                    the object. For correctly creating nested Arrays or\n *                    Objects, the function relies on `path` containing number\n *                    in case of array indexes.\n *                    If false (default), an error will be thrown when the\n *                    path doesn't exist.\n * @return Returns a new, updated object or array\n */\nexport function setIn (object: JSONValue, path: JSONPath, value: JSONValue, createPath = false) : JSONValue {\n  if (path.length === 0) {\n    return value\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = setIn(object ? object[key] : undefined, path.slice(1), value, createPath)\n\n  if (isJSONObject(object) || isJSONArray(object)) {\n    return applyProp(object, key, updatedValue)\n  } else {\n    if (createPath) {\n      const newObject = IS_INTEGER_REGEX.test(key)\n        ? []\n        : {}\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      newObject[key] = updatedValue\n      return newObject\n    } else {\n      throw new Error('Path does not exist')\n    }\n  }\n}\n\nconst IS_INTEGER_REGEX = /^\\d+$/\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @return  Returns a new, updated object or array\n */\nexport function updateIn (object: JSONValue, path: JSONPath, callback: (value: JSONValue) => JSONValue) : JSONValue {\n  if (path.length === 0) {\n    return callback(object)\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path doesn\\'t exist')\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = updateIn(object[key], path.slice(1), callback)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * helper function to delete a nested property in an object\n * without mutating the object itself.\n *\n * @return Returns a new, updated object or array\n */\nexport function deleteIn<T extends JSONValue> (object: T, path: JSONPath) : T {\n  if (path.length === 0) {\n    return object\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path does not exist')\n  }\n\n  if (path.length === 1) {\n    const key = path[0]\n    if (!(key in (object as object))) {\n      // key doesn't exist. return object unchanged\n      return object\n    } else {\n      const updatedObject = shallowClone(object)\n\n      if (isJSONArray(updatedObject)) {\n        updatedObject.splice(parseInt(key), 1)\n      } if (isJSONObject(updatedObject)) {\n        delete updatedObject[key]\n      }\n\n      return updatedObject\n    }\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = deleteIn(object[key], path.slice(1))\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * Insert a new item in an array at a specific index.\n * Example usage:\n *\n *     insertAt({arr: [1,2,3]}, ['arr', '2'], 'inserted')  // [1,2,'inserted',3]\n */\nexport function insertAt (document: JSONObject | JSONArray, path: JSONPath, value: JSONValue) : JSONValue {\n  const parentPath = path.slice(0, path.length - 1)\n  const index = path[path.length - 1]\n\n  return updateIn(document, parentPath, (items) => {\n    if (!Array.isArray(items)) {\n      throw new TypeError('Array expected at path ' + JSON.stringify(parentPath))\n    }\n\n    const updatedItems = shallowClone(items)\n    updatedItems.splice(parseInt(index), 0, value)\n\n    return updatedItems\n  })\n}\n\n/**\n * Transform a JSON object, traverse over the whole object,\n * and allow replacing Objects/Arrays/values.\n */\nexport function transform (document: JSONValue, callback: (document: JSONValue, path: JSONPath) => JSONValue, path: JSONPath = []) : JSONValue {\n  const updated1 = callback(document, path)\n\n  if (isJSONArray(updated1)) { // array\n    let updated2\n\n    for (let i = 0; i < updated1.length; i++) {\n      const before = updated1[i]\n      // we stringify the index here, so the path only contains strings and can be safely\n      // stringified/parsed to JSONPointer without loosing information.\n      // We do not want to rely on path keys being numeric/string.\n      const after = transform(before, callback, path.concat(i + ''))\n      if (after !== before) {\n        if (!updated2) {\n          updated2 = shallowClone(updated1)\n        }\n        updated2[i] = after\n      }\n    }\n\n    return updated2 || updated1\n  } else if (isJSONObject(updated1)) { // object\n    let updated2\n\n    for (const key in updated1) {\n      if (Object.hasOwnProperty.call(updated1, key)) {\n        const before = updated1[key]\n        const after = transform(before, callback, path.concat(key))\n        if (after !== before) {\n          if (!updated2) {\n            updated2 = shallowClone(updated1)\n          }\n          updated2[key] = after\n        }\n      }\n    }\n\n    return updated2 || updated1\n  } else { // number, string, boolean, null\n    return updated1\n  }\n}\n\n/**\n * Test whether a path exists in a JSON object\n * @return Returns true if the path exists, else returns false\n */\nexport function existsIn (document: JSONValue, path: JSONPath) : boolean {\n  if (document === undefined) {\n    return false\n  }\n\n  if (path.length === 0) {\n    return true\n  }\n\n  if (document === null) {\n    return false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return existsIn(document[path[0]], path.slice(1))\n}\n"],"mappings":"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"}