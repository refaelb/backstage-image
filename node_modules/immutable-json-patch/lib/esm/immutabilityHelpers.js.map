{"version":3,"file":"immutabilityHelpers.js","names":["isJSONArray","isJSONObject","isObjectOrArray","shallowClone","value","copy","slice","Object","getOwnPropertySymbols","forEach","symbol","_objectSpread","applyProp","object","key","updatedObject","getIn","path","i","length","parseInt","undefined","setIn","createPath","arguments","updatedValue","newObject","IS_INTEGER_REGEX","test","Error","updateIn","callback","deleteIn","splice","insertAt","document","parentPath","index","items","Array","isArray","TypeError","JSON","stringify","updatedItems","transform","updated1","updated2","before","after","concat","hasOwnProperty","call","existsIn"],"sources":["../../src/immutabilityHelpers.ts"],"sourcesContent":["/**\n * Immutability helpers\n *\n * inspiration:\n *\n * https://www.npmjs.com/package/seamless-immutable\n * https://www.npmjs.com/package/ih\n * https://www.npmjs.com/package/mutatis\n * https://github.com/mariocasciaro/object-path-immutable\n */\nimport { isJSONArray, isJSONObject } from './typeguards.js'\nimport type { JSONArray, JSONValue, JSONObject, JSONPath } from './types'\nimport { isObjectOrArray } from './utils.js'\n\n/**\n * Shallow clone of an Object, Array, or value\n * Symbols are cloned too.\n */\nexport function shallowClone<T extends JSONValue> (value: T) : T {\n  if (isJSONArray(value)) {\n    // copy array items\n    const copy: JSONArray = value.slice()\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy as T\n  } else if (isJSONObject(value)) {\n    // copy object properties\n    const copy: JSONObject = { ...value }\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy as T\n  } else {\n    return value\n  }\n}\n\n/**\n * Update a value in an object in an immutable way.\n * If the value is unchanged, the original object will be returned\n */\nexport function applyProp<T extends JSONObject | JSONArray> (object: T, key: string | number, value: JSONValue) : T {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (object[key] === value) {\n    // return original object unchanged when the new value is identical to the old one\n    return object\n  } else {\n    const updatedObject = shallowClone(object)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    updatedObject[key] = value\n    return updatedObject\n  }\n}\n\n/**\n * helper function to get a nested property in an object or array\n *\n * @return Returns the field when found, or undefined when the path doesn't exist\n */\nexport function getIn (object: JSONValue, path: JSONPath) : JSONValue | undefined {\n  let value: JSONValue | undefined = object\n  let i = 0\n\n  while (i < path.length) {\n    if (isJSONObject(value)) {\n      value = value[path[i]]\n    } else if (isJSONArray(value)) {\n      value = value[parseInt(path[i])]\n    } else {\n      value = undefined\n    }\n\n    i++\n  }\n\n  return value\n}\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @param object\n * @param path\n * @param value\n * @param [createPath=false]\n *                    If true, `path` will be created when (partly) missing in\n *                    the object. For correctly creating nested Arrays or\n *                    Objects, the function relies on `path` containing number\n *                    in case of array indexes.\n *                    If false (default), an error will be thrown when the\n *                    path doesn't exist.\n * @return Returns a new, updated object or array\n */\nexport function setIn (object: JSONValue, path: JSONPath, value: JSONValue, createPath = false) : JSONValue {\n  if (path.length === 0) {\n    return value\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = setIn(object ? object[key] : undefined, path.slice(1), value, createPath)\n\n  if (isJSONObject(object) || isJSONArray(object)) {\n    return applyProp(object, key, updatedValue)\n  } else {\n    if (createPath) {\n      const newObject = IS_INTEGER_REGEX.test(key)\n        ? []\n        : {}\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      newObject[key] = updatedValue\n      return newObject\n    } else {\n      throw new Error('Path does not exist')\n    }\n  }\n}\n\nconst IS_INTEGER_REGEX = /^\\d+$/\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @return  Returns a new, updated object or array\n */\nexport function updateIn (object: JSONValue, path: JSONPath, callback: (value: JSONValue) => JSONValue) : JSONValue {\n  if (path.length === 0) {\n    return callback(object)\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path doesn\\'t exist')\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = updateIn(object[key], path.slice(1), callback)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * helper function to delete a nested property in an object\n * without mutating the object itself.\n *\n * @return Returns a new, updated object or array\n */\nexport function deleteIn<T extends JSONValue> (object: T, path: JSONPath) : T {\n  if (path.length === 0) {\n    return object\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path does not exist')\n  }\n\n  if (path.length === 1) {\n    const key = path[0]\n    if (!(key in (object as object))) {\n      // key doesn't exist. return object unchanged\n      return object\n    } else {\n      const updatedObject = shallowClone(object)\n\n      if (isJSONArray(updatedObject)) {\n        updatedObject.splice(parseInt(key), 1)\n      } if (isJSONObject(updatedObject)) {\n        delete updatedObject[key]\n      }\n\n      return updatedObject\n    }\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = deleteIn(object[key], path.slice(1))\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * Insert a new item in an array at a specific index.\n * Example usage:\n *\n *     insertAt({arr: [1,2,3]}, ['arr', '2'], 'inserted')  // [1,2,'inserted',3]\n */\nexport function insertAt (document: JSONObject | JSONArray, path: JSONPath, value: JSONValue) : JSONValue {\n  const parentPath = path.slice(0, path.length - 1)\n  const index = path[path.length - 1]\n\n  return updateIn(document, parentPath, (items) => {\n    if (!Array.isArray(items)) {\n      throw new TypeError('Array expected at path ' + JSON.stringify(parentPath))\n    }\n\n    const updatedItems = shallowClone(items)\n    updatedItems.splice(parseInt(index), 0, value)\n\n    return updatedItems\n  })\n}\n\n/**\n * Transform a JSON object, traverse over the whole object,\n * and allow replacing Objects/Arrays/values.\n */\nexport function transform (document: JSONValue, callback: (document: JSONValue, path: JSONPath) => JSONValue, path: JSONPath = []) : JSONValue {\n  const updated1 = callback(document, path)\n\n  if (isJSONArray(updated1)) { // array\n    let updated2\n\n    for (let i = 0; i < updated1.length; i++) {\n      const before = updated1[i]\n      // we stringify the index here, so the path only contains strings and can be safely\n      // stringified/parsed to JSONPointer without loosing information.\n      // We do not want to rely on path keys being numeric/string.\n      const after = transform(before, callback, path.concat(i + ''))\n      if (after !== before) {\n        if (!updated2) {\n          updated2 = shallowClone(updated1)\n        }\n        updated2[i] = after\n      }\n    }\n\n    return updated2 || updated1\n  } else if (isJSONObject(updated1)) { // object\n    let updated2\n\n    for (const key in updated1) {\n      if (Object.hasOwnProperty.call(updated1, key)) {\n        const before = updated1[key]\n        const after = transform(before, callback, path.concat(key))\n        if (after !== before) {\n          if (!updated2) {\n            updated2 = shallowClone(updated1)\n          }\n          updated2[key] = after\n        }\n      }\n    }\n\n    return updated2 || updated1\n  } else { // number, string, boolean, null\n    return updated1\n  }\n}\n\n/**\n * Test whether a path exists in a JSON object\n * @return Returns true if the path exists, else returns false\n */\nexport function existsIn (document: JSONValue, path: JSONPath) : boolean {\n  if (document === undefined) {\n    return false\n  }\n\n  if (path.length === 0) {\n    return true\n  }\n\n  if (document === null) {\n    return false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return existsIn(document[path[0]], path.slice(1))\n}\n"],"mappings":"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"}