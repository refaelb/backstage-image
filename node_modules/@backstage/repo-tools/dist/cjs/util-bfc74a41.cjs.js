'use strict';

var child_process = require('child_process');
var os = require('os');
var pLimit = require('p-limit');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var os__default = /*#__PURE__*/_interopDefaultLegacy(os);
var pLimit__default = /*#__PURE__*/_interopDefaultLegacy(pLimit);

const limiter = pLimit__default["default"](os__default["default"].cpus().length);
function createBinRunner(cwd, path) {
  return async (...command) => limiter(
    () => new Promise((resolve, reject) => {
      child_process.execFile(
        "node",
        [path, ...command],
        {
          cwd,
          shell: true,
          timeout: 6e4,
          maxBuffer: 1024 * 1024
        },
        (err, stdout, stderr) => {
          if (err) {
            reject(new Error(`${err.message}
${stderr}`));
          } else if (stderr) {
            reject(new Error(`Command printed error output: ${stderr}`));
          } else {
            resolve(stdout);
          }
        }
      );
    })
  );
}

exports.createBinRunner = createBinRunner;
//# sourceMappingURL=util-bfc74a41.cjs.js.map
