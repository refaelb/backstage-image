{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport { makeStyles, Theme, Grid, Paper } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {\n  CatalogIcon,\n  Content,\n  DocsIcon,\n  Header,\n  Page,\n  useSidebarPinState,\n} from '@backstage/core-components';\nimport {\n  useApi,\n  DiscoveryApi,\n  IdentityApi,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\n\nimport {\n  createPlugin,\n  createApiExtension,\n  createPageExtension,\n  createExtensionInput,\n  createNavItemExtension,\n  createSchemaFromZod,\n} from '@backstage/frontend-plugin-api';\n\nimport {\n  catalogApiRef,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/plugin-catalog-react';\n\nimport {\n  DefaultResultListItem,\n  SearchBar,\n  SearchFilter,\n  SearchPagination,\n  SearchResult as SearchResults,\n  SearchResultPager,\n  useSearch,\n  SearchContextProvider,\n} from '@backstage/plugin-search-react';\nimport { SearchResult } from '@backstage/plugin-search-common';\nimport { searchApiRef } from '@backstage/plugin-search-react';\nimport { createSearchResultListItemExtension } from '@backstage/plugin-search-react/alpha';\n\nimport { rootRouteRef } from './plugin';\nimport { SearchClient } from './apis';\nimport { SearchType } from './components/SearchType';\nimport { UrlUpdater } from './components/SearchPage/SearchPage';\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\n\n/** @alpha */\nexport const searchApi = createApiExtension({\n  factory: {\n    api: searchApiRef,\n    deps: { discoveryApi: discoveryApiRef, identityApi: identityApiRef },\n    factory: ({\n      identityApi,\n      discoveryApi,\n    }: {\n      identityApi: IdentityApi;\n      discoveryApi: DiscoveryApi;\n    }) => new SearchClient({ discoveryApi, identityApi }),\n  },\n});\n\nconst useSearchPageStyles = makeStyles((theme: Theme) => ({\n  filter: {\n    '& + &': {\n      marginTop: theme.spacing(2.5),\n    },\n  },\n  filters: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n}));\n\n/** @alpha */\nexport const searchPage = createPageExtension({\n  routeRef: convertLegacyRouteRef(rootRouteRef),\n  configSchema: createSchemaFromZod(z =>\n    z.object({\n      path: z.string().default('/search'),\n      noTrack: z.boolean().default(false),\n    }),\n  ),\n  inputs: {\n    items: createExtensionInput({\n      item: createSearchResultListItemExtension.itemDataRef,\n    }),\n  },\n  loader: async ({ config, inputs }) => {\n    const getResultItemComponent = (result: SearchResult) => {\n      const value = inputs.items.find(item =>\n        item?.output.item.predicate?.(result),\n      );\n      return value?.output.item.component ?? DefaultResultListItem;\n    };\n\n    const Component = () => {\n      const classes = useSearchPageStyles();\n      const { isMobile } = useSidebarPinState();\n      const { types } = useSearch();\n      const catalogApi = useApi(catalogApiRef);\n\n      return (\n        <Page themeId=\"home\">\n          {!isMobile && <Header title=\"Search\" />}\n          <Content>\n            <Grid container direction=\"row\">\n              <Grid item xs={12}>\n                <SearchBar debounceTime={100} />\n              </Grid>\n              {!isMobile && (\n                <Grid item xs={3}>\n                  <SearchType.Accordion\n                    name=\"Result Type\"\n                    defaultValue=\"software-catalog\"\n                    showCounts\n                    types={[\n                      {\n                        value: 'software-catalog',\n                        name: 'Software Catalog',\n                        icon: <CatalogIcon />,\n                      },\n                      {\n                        value: 'techdocs',\n                        name: 'Documentation',\n                        icon: <DocsIcon />,\n                      },\n                      {\n                        value: 'adr',\n                        name: 'Architecture Decision Records',\n                        icon: <DocsIcon />,\n                      },\n                    ]}\n                  />\n                  <Paper className={classes.filters}>\n                    {types.includes('techdocs') && (\n                      <SearchFilter.Select\n                        className={classes.filter}\n                        label=\"Entity\"\n                        name=\"name\"\n                        values={async () => {\n                          // Return a list of entities which are documented.\n                          const { items } = await catalogApi.getEntities({\n                            fields: ['metadata.name'],\n                            filter: {\n                              'metadata.annotations.backstage.io/techdocs-ref':\n                                CATALOG_FILTER_EXISTS,\n                            },\n                          });\n\n                          const names = items.map(\n                            entity => entity.metadata.name,\n                          );\n                          names.sort();\n                          return names;\n                        }}\n                      />\n                    )}\n                    <SearchFilter.Select\n                      className={classes.filter}\n                      label=\"Kind\"\n                      name=\"kind\"\n                      values={['Component', 'Template']}\n                    />\n                    <SearchFilter.Checkbox\n                      className={classes.filter}\n                      label=\"Lifecycle\"\n                      name=\"lifecycle\"\n                      values={['experimental', 'production']}\n                    />\n                  </Paper>\n                </Grid>\n              )}\n              <Grid item xs>\n                <SearchPagination />\n                <SearchResults>\n                  {({ results }) => (\n                    <>\n                      {results.map((result, index) => {\n                        const { noTrack } = config;\n                        const { document, ...rest } = result;\n                        const SearchResultListItem =\n                          getResultItemComponent(result);\n                        return (\n                          <SearchResultListItem\n                            {...rest}\n                            key={index}\n                            result={document}\n                            noTrack={noTrack}\n                          />\n                        );\n                      })}\n                    </>\n                  )}\n                </SearchResults>\n                <SearchResultPager />\n              </Grid>\n            </Grid>\n          </Content>\n        </Page>\n      );\n    };\n\n    return compatWrapper(\n      <SearchContextProvider>\n        <UrlUpdater />\n        <Component />\n      </SearchContextProvider>,\n    );\n  },\n});\n\n/** @alpha */\nexport const searchNavItem = createNavItemExtension({\n  routeRef: convertLegacyRouteRef(rootRouteRef),\n  title: 'Search',\n  icon: SearchIcon,\n});\n\n/** @alpha */\nexport default createPlugin({\n  id: 'search',\n  extensions: [searchApi, searchPage, searchNavItem],\n  routes: {\n    root: convertLegacyRouteRef(rootRouteRef),\n  },\n});\n"],"names":["_a","SearchResults"],"mappings":"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"}