export { S as SearchModal, a as SearchModalProvider, u as useSearchModal } from './esm/useSearchModal-77675f70.esm.js';
import { r as rootRouteRef } from './esm/SearchType-a8f79021.esm.js';
export { H as HomePageSearchBar, S as Router, b as SearchPage, a as SearchType, c as SidebarSearchModal, s as plugin, s as searchPlugin } from './esm/SearchType-a8f79021.esm.js';
import qs from 'qs';
import React, { useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { useRouteRef } from '@backstage/core-plugin-api';
import { useContent, SidebarSearchField } from '@backstage/core-components';
import '@backstage/plugin-search-react';
import '@material-ui/core';
import '@material-ui/core/Box';
import '@material-ui/core/Button';
import '@material-ui/core/IconButton';
import '@material-ui/core/styles';
import '@material-ui/icons/ArrowForward';
import '@material-ui/icons/Close';
import '@backstage/version-bridge';
import 'react-use/lib/useUpdateEffect';
import '@backstage/errors';
import 'react-use/lib/usePrevious';
import 'react-use/lib/useEffectOnce';
import '@material-ui/icons/ExpandMore';
import '@material-ui/icons/FontDownload';
import 'react-use/lib/useAsync';

const SidebarSearch = (props) => {
  const searchRoute = useRouteRef(rootRouteRef);
  const { focusContent } = useContent();
  const navigate = useNavigate();
  const handleSearch = useCallback(
    (query) => {
      const queryString = qs.stringify({ query }, { addQueryPrefix: true });
      focusContent();
      navigate(`${searchRoute()}${queryString}`);
    },
    [focusContent, navigate, searchRoute]
  );
  return /* @__PURE__ */ React.createElement(
    SidebarSearchField,
    {
      icon: props.icon,
      onSearch: handleSearch,
      to: "/search"
    }
  );
};

export { SidebarSearch };
//# sourceMappingURL=index.esm.js.map
