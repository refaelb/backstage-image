{"version":3,"file":"index.esm.js","sources":["../../core-app-api/src/app/AppContext.tsx","../../app-defaults/src/defaults/apis.ts","../../app-defaults/src/defaults/components.tsx","../../app-defaults/src/defaults/icons.tsx","../src/compatWrapper/BackwardsCompatProvider.tsx","../src/compatWrapper/ForwardsCompatProvider.tsx","../src/compatWrapper/compatWrapper.tsx","../../core-plugin-api/src/routing/types.ts","../../frontend-plugin-api/src/routing/RouteRef.ts","../../frontend-plugin-api/src/routing/SubRouteRef.ts","../../frontend-plugin-api/src/routing/ExternalRouteRef.ts","../src/convertLegacyRouteRef.ts","../src/collectLegacyRoutes.tsx","../src/convertLegacyApp.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PropsWithChildren } from 'react';\nimport {\n  createVersionedValueMap,\n  createVersionedContext,\n} from '@backstage/version-bridge';\nimport { AppContext as AppContextV1 } from './types';\n\nconst AppContext = createVersionedContext<{ 1: AppContextV1 }>('app-context');\n\ntype Props = {\n  appContext: AppContextV1;\n};\n\nexport const AppContextProvider = ({\n  appContext,\n  children,\n}: PropsWithChildren<Props>) => {\n  const versionedValue = createVersionedValueMap({ 1: appContext });\n\n  return <AppContext.Provider value={versionedValue} children={children} />;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AlertApiForwarder,\n  NoOpAnalyticsApi,\n  ErrorApiForwarder,\n  ErrorAlerter,\n  GoogleAuth,\n  GithubAuth,\n  OktaAuth,\n  GitlabAuth,\n  MicrosoftAuth,\n  BitbucketAuth,\n  BitbucketServerAuth,\n  OAuthRequestManager,\n  WebStorage,\n  UrlPatternDiscovery,\n  OneLoginAuth,\n  UnhandledErrorForwarder,\n  AtlassianAuth,\n  createFetchApi,\n  FetchMiddlewares,\n} from '@backstage/core-app-api';\n\nimport {\n  createApiFactory,\n  alertApiRef,\n  analyticsApiRef,\n  errorApiRef,\n  discoveryApiRef,\n  fetchApiRef,\n  identityApiRef,\n  oauthRequestApiRef,\n  googleAuthApiRef,\n  githubAuthApiRef,\n  oktaAuthApiRef,\n  gitlabAuthApiRef,\n  microsoftAuthApiRef,\n  storageApiRef,\n  configApiRef,\n  oneloginAuthApiRef,\n  bitbucketAuthApiRef,\n  bitbucketServerAuthApiRef,\n  atlassianAuthApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  permissionApiRef,\n  IdentityPermissionApi,\n} from '@backstage/plugin-permission-react';\n\nexport const apis = [\n  createApiFactory({\n    api: discoveryApiRef,\n    deps: { configApi: configApiRef },\n    factory: ({ configApi }) =>\n      UrlPatternDiscovery.compile(\n        `${configApi.getString('backend.baseUrl')}/api/{{ pluginId }}`,\n      ),\n  }),\n  createApiFactory({\n    api: alertApiRef,\n    deps: {},\n    factory: () => new AlertApiForwarder(),\n  }),\n  createApiFactory({\n    api: analyticsApiRef,\n    deps: {},\n    factory: () => new NoOpAnalyticsApi(),\n  }),\n  createApiFactory({\n    api: errorApiRef,\n    deps: { alertApi: alertApiRef },\n    factory: ({ alertApi }) => {\n      const errorApi = new ErrorAlerter(alertApi, new ErrorApiForwarder());\n      UnhandledErrorForwarder.forward(errorApi, { hidden: false });\n      return errorApi;\n    },\n  }),\n  createApiFactory({\n    api: storageApiRef,\n    deps: { errorApi: errorApiRef },\n    factory: ({ errorApi }) => WebStorage.create({ errorApi }),\n  }),\n  createApiFactory({\n    api: fetchApiRef,\n    deps: {\n      configApi: configApiRef,\n      identityApi: identityApiRef,\n      discoveryApi: discoveryApiRef,\n    },\n    factory: ({ configApi, identityApi, discoveryApi }) => {\n      return createFetchApi({\n        middleware: [\n          FetchMiddlewares.resolvePluginProtocol({\n            discoveryApi,\n          }),\n          FetchMiddlewares.injectIdentityAuth({\n            identityApi,\n            config: configApi,\n          }),\n        ],\n      });\n    },\n  }),\n  createApiFactory({\n    api: oauthRequestApiRef,\n    deps: {},\n    factory: () => new OAuthRequestManager(),\n  }),\n  createApiFactory({\n    api: googleAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GoogleAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: microsoftAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      MicrosoftAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: githubAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GithubAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        defaultScopes: ['read:user'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: oktaAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OktaAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: gitlabAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GitlabAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: oneloginAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OneLoginAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: bitbucketAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      BitbucketAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        defaultScopes: ['team'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: bitbucketServerAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      BitbucketServerAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        defaultScopes: ['REPO_READ'],\n      }),\n  }),\n  createApiFactory({\n    api: atlassianAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) => {\n      return AtlassianAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      });\n    },\n  }),\n  createApiFactory({\n    api: permissionApiRef,\n    deps: {\n      discovery: discoveryApiRef,\n      identity: identityApiRef,\n      config: configApiRef,\n    },\n    factory: ({ config, discovery, identity }) =>\n      IdentityPermissionApi.create({ config, discovery, identity }),\n  }),\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ErrorPanel, Progress, ErrorPage } from '@backstage/core-components';\nimport {\n  MemoryRouter,\n  useInRouterContext,\n  BrowserRouter,\n} from 'react-router-dom';\nimport {\n  AppComponents,\n  BootErrorPageProps,\n  ErrorBoundaryFallbackProps,\n} from '@backstage/core-plugin-api';\n\nexport function OptionallyWrapInRouter({ children }: { children: ReactNode }) {\n  if (useInRouterContext()) {\n    return <>{children}</>;\n  }\n  return <MemoryRouter>{children}</MemoryRouter>;\n}\n\nconst DefaultNotFoundPage = () => (\n  <ErrorPage status=\"404\" statusMessage=\"PAGE NOT FOUND\" />\n);\n\nconst DefaultBootErrorPage = ({ step, error }: BootErrorPageProps) => {\n  let message = '';\n  if (step === 'load-config') {\n    message = `The configuration failed to load, someone should have a look at this error: ${error.message}`;\n  } else if (step === 'load-chunk') {\n    message = `Lazy loaded chunk failed to load, try to reload the page: ${error.message}`;\n  }\n  // TODO: figure out a nicer way to handle routing on the error page, when it can be done.\n  return (\n    <OptionallyWrapInRouter>\n      <ErrorPage status=\"501\" statusMessage={message} />\n    </OptionallyWrapInRouter>\n  );\n};\n\nconst DefaultErrorBoundaryFallback = ({\n  error,\n  resetError,\n  plugin,\n}: ErrorBoundaryFallbackProps) => {\n  return (\n    <ErrorPanel\n      title={`Error in ${plugin?.getId()}`}\n      defaultExpanded\n      error={error}\n    >\n      <Button variant=\"outlined\" onClick={resetError}>\n        Retry\n      </Button>\n    </ErrorPanel>\n  );\n};\n\n/**\n * Creates a set of default components to pass along to {@link @backstage/core-app-api#createSpecializedApp}.\n *\n * @public\n */\nexport const components: AppComponents = {\n  Progress,\n  Router: BrowserRouter,\n  NotFoundErrorPage: DefaultNotFoundPage,\n  BootErrorPage: DefaultBootErrorPage,\n  ErrorBoundaryFallback: DefaultErrorBoundaryFallback,\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core-plugin-api';\nimport MuiApartmentIcon from '@material-ui/icons/Apartment';\nimport MuiBrokenImageIcon from '@material-ui/icons/BrokenImage';\nimport MuiCategoryIcon from '@material-ui/icons/Category';\nimport MuiCreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport MuiSubjectIcon from '@material-ui/icons/Subject';\nimport MuiSearchIcon from '@material-ui/icons/Search';\nimport MuiChatIcon from '@material-ui/icons/Chat';\nimport MuiDashboardIcon from '@material-ui/icons/Dashboard';\nimport MuiDocsIcon from '@material-ui/icons/Description';\nimport MuiEmailIcon from '@material-ui/icons/Email';\nimport MuiExtensionIcon from '@material-ui/icons/Extension';\nimport MuiGitHubIcon from '@material-ui/icons/GitHub';\nimport MuiHelpIcon from '@material-ui/icons/Help';\nimport MuiLocationOnIcon from '@material-ui/icons/LocationOn';\nimport MuiMemoryIcon from '@material-ui/icons/Memory';\nimport MuiMenuBookIcon from '@material-ui/icons/MenuBook';\nimport MuiPeopleIcon from '@material-ui/icons/People';\nimport MuiPersonIcon from '@material-ui/icons/Person';\nimport MuiWarningIcon from '@material-ui/icons/Warning';\nimport MuiWorkIcon from '@material-ui/icons/Work';\nimport MuiFeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\n\nexport const icons = {\n  brokenImage: MuiBrokenImageIcon as IconComponent,\n  // To be confirmed: see https://github.com/backstage/backstage/issues/4970\n  catalog: MuiMenuBookIcon as IconComponent,\n  scaffolder: MuiCreateNewFolderIcon as IconComponent,\n  techdocs: MuiSubjectIcon as IconComponent,\n  search: MuiSearchIcon as IconComponent,\n  chat: MuiChatIcon as IconComponent,\n  dashboard: MuiDashboardIcon as IconComponent,\n  docs: MuiDocsIcon as IconComponent,\n  email: MuiEmailIcon as IconComponent,\n  github: MuiGitHubIcon as IconComponent,\n  group: MuiPeopleIcon as IconComponent,\n  help: MuiHelpIcon as IconComponent,\n  'kind:api': MuiExtensionIcon as IconComponent,\n  'kind:component': MuiMemoryIcon as IconComponent,\n  'kind:domain': MuiApartmentIcon as IconComponent,\n  'kind:group': MuiPeopleIcon as IconComponent,\n  'kind:location': MuiLocationOnIcon as IconComponent,\n  'kind:system': MuiCategoryIcon as IconComponent,\n  'kind:user': MuiPersonIcon as IconComponent,\n  'kind:resource': MuiWorkIcon as IconComponent,\n  'kind:template': MuiFeaturedPlayListIcon as IconComponent,\n  user: MuiPersonIcon as IconComponent,\n  warning: MuiWarningIcon as IconComponent,\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport { ReactNode } from 'react';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppContextProvider } from '../../../core-app-api/src/app/AppContext';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  components as defaultComponents,\n  icons as defaultIcons,\n} from '../../../app-defaults/src/defaults';\nimport {\n  BackstagePlugin as NewBackstagePlugin,\n  appTreeApiRef,\n  useApi,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AppComponents,\n  IconComponent,\n  BackstagePlugin as LegacyBackstagePlugin,\n} from '@backstage/core-plugin-api';\nimport { getOrCreateGlobalSingleton } from '@backstage/version-bridge';\n\n// Make sure that we only convert each new plugin instance to its legacy equivalent once\nconst legacyPluginStore = getOrCreateGlobalSingleton(\n  'legacy-plugin-compatibility-store',\n  () => new WeakMap<NewBackstagePlugin, LegacyBackstagePlugin>(),\n);\n\nfunction toLegacyPlugin(plugin: NewBackstagePlugin): LegacyBackstagePlugin {\n  let legacy = legacyPluginStore.get(plugin);\n  if (legacy) {\n    return legacy;\n  }\n\n  const errorMsg = 'Not implemented in legacy plugin compatibility layer';\n  const notImplemented = () => {\n    throw new Error(errorMsg);\n  };\n\n  legacy = {\n    getId(): string {\n      return plugin.id;\n    },\n    get routes() {\n      return {};\n    },\n    get externalRoutes() {\n      return {};\n    },\n    getApis: notImplemented,\n    getFeatureFlags: notImplemented,\n    provide: notImplemented,\n  };\n\n  legacyPluginStore.set(plugin, legacy);\n  return legacy;\n}\n\n// Recreates the old AppContext APIs using the various new APIs that replaced it\nfunction LegacyAppContextProvider(props: { children: ReactNode }) {\n  const appTreeApi = useApi(appTreeApiRef);\n\n  const appContext = useMemo(() => {\n    const { tree } = appTreeApi.getTree();\n\n    let gatheredPlugins: LegacyBackstagePlugin[] | undefined = undefined;\n\n    return {\n      getPlugins(): LegacyBackstagePlugin[] {\n        if (gatheredPlugins) {\n          return gatheredPlugins;\n        }\n\n        const pluginSet = new Set<LegacyBackstagePlugin>();\n        for (const node of tree.nodes.values()) {\n          const plugin = node.spec.source;\n          if (plugin) {\n            pluginSet.add(toLegacyPlugin(plugin));\n          }\n        }\n        gatheredPlugins = Array.from(pluginSet);\n\n        return gatheredPlugins;\n      },\n\n      // TODO: Grab these from new API once it exists\n      getSystemIcon(key: string): IconComponent | undefined {\n        return key in defaultIcons\n          ? defaultIcons[key as keyof typeof defaultIcons]\n          : undefined;\n      },\n\n      // TODO: Grab these from new API once it exists\n      getSystemIcons(): Record<string, IconComponent> {\n        return defaultIcons;\n      },\n\n      // TODO: Grab these from new API once it exists\n      getComponents(): AppComponents {\n        return defaultComponents;\n      },\n    };\n  }, [appTreeApi]);\n\n  return (\n    <AppContextProvider appContext={appContext}>\n      {props.children}\n    </AppContextProvider>\n  );\n}\n\nexport function BackwardsCompatProvider(props: { children: ReactNode }) {\n  return <LegacyAppContextProvider>{props.children}</LegacyAppContextProvider>;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { ReactNode } from 'react';\n\nexport function ForwardsCompatProvider(props: { children: ReactNode }) {\n  // TODO(Rugvip): Implement\n  return <>{props.children}</>;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { useVersionedContext } from '@backstage/version-bridge';\nimport { ReactNode } from 'react';\nimport { BackwardsCompatProvider } from './BackwardsCompatProvider';\nimport { ForwardsCompatProvider } from './ForwardsCompatProvider';\n\nfunction BidirectionalCompatProvider(props: { children: ReactNode }) {\n  const isInNewApp = !useVersionedContext<{ 1: unknown }>('app-context');\n\n  if (isInNewApp) {\n    return <BackwardsCompatProvider {...props} />;\n  }\n\n  return <ForwardsCompatProvider {...props} />;\n}\n\n/**\n * Wraps a React element in a bidirectional compatibility provider, allow APIs\n * from `@backstage/core-plugin-api` to be used in an app from `@backstage/frontend-app-api`,\n * and APIs from `@backstage/frontend-plugin-api` to be used in an app from `@backstage/core-app-api`.\n *\n * @public\n */\nexport function compatWrapper(element: ReactNode) {\n  return <BidirectionalCompatProvider>{element}</BidirectionalCompatProvider>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getOrCreateGlobalSingleton } from '@backstage/version-bridge';\n\n/**\n * Catch-all type for route params.\n *\n * @public\n */\nexport type AnyRouteRefParams = { [param in string]: string } | undefined;\n\n/**\n * @deprecated use {@link AnyRouteRefParams} instead\n * @public\n */\nexport type AnyParams = AnyRouteRefParams;\n\n/**\n * Type describing the key type of a route parameter mapping.\n *\n * @public\n * @deprecated this type is deprecated and will be removed in the future\n */\nexport type ParamKeys<Params extends AnyParams> = keyof Params extends never\n  ? []\n  : (keyof Params)[];\n\n/**\n * Optional route params.\n *\n * @public\n * @deprecated this type is deprecated and will be removed in the future\n */\nexport type OptionalParams<Params extends { [param in string]: string }> =\n  Params[keyof Params] extends never ? undefined : Params;\n\n/**\n * TS magic for handling route parameters.\n *\n * @remarks\n *\n * The extra TS magic here is to require a single params argument if the RouteRef\n * had at least one param defined, but require 0 arguments if there are no params defined.\n * Without this we'd have to pass in empty object to all parameter-less RouteRefs\n * just to make TypeScript happy, or we would have to make the argument optional in\n * which case you might forget to pass it in when it is actually required.\n *\n * @public\n */\nexport type RouteFunc<Params extends AnyParams> = (\n  ...[params]: Params extends undefined ? readonly [] : readonly [Params]\n) => string;\n\n/**\n * This symbol is what we use at runtime to determine whether a given object\n * is a type of RouteRef or not. It doesn't work well in TypeScript though since\n * the `unique symbol` will refer to different values between package versions.\n * For that reason we use the marker $$routeRefType to represent the symbol at\n * compile-time instead of using the symbol directly.\n *\n * @internal\n */\nexport const routeRefType: unique symbol = getOrCreateGlobalSingleton<any>(\n  'route-ref-type',\n  () => Symbol('route-ref-type'),\n);\n\n/**\n * Absolute route reference.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport type RouteRef<Params extends AnyParams = any> = {\n  /** @deprecated access to this property will be removed in the future */\n  $$routeRefType: 'absolute'; // See routeRefType above\n\n  /** @deprecated access to this property will be removed in the future */\n  params: ParamKeys<Params>;\n};\n\n/**\n * Descriptor of a route relative to an absolute {@link RouteRef}.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport type SubRouteRef<Params extends AnyParams = any> = {\n  /** @deprecated access to this property will be removed in the future */\n  $$routeRefType: 'sub'; // See routeRefType above\n\n  /** @deprecated access to this property will be removed in the future */\n  parent: RouteRef;\n\n  path: string;\n\n  /** @deprecated access to this property will be removed in the future */\n  params: ParamKeys<Params>;\n};\n\n/**\n * Route descriptor, to be later bound to a concrete route by the app. Used to implement cross-plugin route references.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport type ExternalRouteRef<\n  Params extends AnyParams = any,\n  Optional extends boolean = any,\n> = {\n  /** @deprecated access to this property will be removed in the future */\n  $$routeRefType: 'external'; // See routeRefType above\n\n  /** @deprecated access to this property will be removed in the future */\n  params: ParamKeys<Params>;\n\n  optional?: Optional;\n};\n\n/**\n * @internal\n */\nexport type AnyRouteRef =\n  | RouteRef<any>\n  | SubRouteRef<any>\n  | ExternalRouteRef<any, any>;\n\n/**\n * A duplicate of the react-router RouteObject, but with routeRef added\n * @internal\n */\nexport interface BackstageRouteObject {\n  caseSensitive: boolean;\n  children?: BackstageRouteObject[];\n  element: React.ReactNode;\n  path: string;\n  routeRefs: Set<RouteRef>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { describeParentCallSite } from './describeParentCallSite';\nimport { AnyRouteRefParams } from './types';\n\n/**\n * Absolute route reference.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface RouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> {\n  readonly $$type: '@backstage/RouteRef';\n  readonly T: TParams;\n}\n\n/** @internal */\nexport interface InternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> extends RouteRef<TParams> {\n  readonly version: 'v1';\n  getParams(): string[];\n  getDescription(): string;\n\n  setId(id: string): void;\n}\n\n/** @internal */\nexport function toInternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n>(resource: RouteRef<TParams>): InternalRouteRef<TParams> {\n  const r = resource as InternalRouteRef<TParams>;\n  if (r.$$type !== '@backstage/RouteRef') {\n    throw new Error(`Invalid RouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isRouteRef(opaque: { $$type: string }): opaque is RouteRef {\n  return opaque.$$type === '@backstage/RouteRef';\n}\n\n/** @internal */\nexport class RouteRefImpl implements InternalRouteRef {\n  readonly $$type = '@backstage/RouteRef';\n  readonly version = 'v1';\n  declare readonly T: never;\n\n  #id?: string;\n  #params: string[];\n  #creationSite: string;\n\n  constructor(readonly params: string[] = [], creationSite: string) {\n    this.#params = params;\n    this.#creationSite = creationSite;\n  }\n\n  getParams(): string[] {\n    return this.#params;\n  }\n\n  getDescription(): string {\n    if (this.#id) {\n      return this.#id;\n    }\n    return `created at '${this.#creationSite}'`;\n  }\n\n  get #name() {\n    return this.$$type.slice('@backstage/'.length);\n  }\n\n  setId(id: string): void {\n    if (!id) {\n      throw new Error(`${this.#name} id must be a non-empty string`);\n    }\n    if (this.#id) {\n      throw new Error(\n        `${this.#name} was referenced twice as both '${this.#id}' and '${id}'`,\n      );\n    }\n    this.#id = id;\n  }\n\n  toString(): string {\n    return `${this.#name}{${this.getDescription()}}`;\n  }\n}\n\n/**\n * Create a {@link RouteRef} from a route descriptor.\n *\n * @param config - Description of the route reference to be created.\n * @public\n */\nexport function createRouteRef<\n  // Params is the type that we care about and the one to be embedded in the route ref.\n  // For example, given the params ['name', 'kind'], Params will be {name: string, kind: string}\n  TParams extends { [param in TParamKeys]: string } | undefined = undefined,\n  TParamKeys extends string = string,\n>(config?: {\n  /** A list of parameter names that the path that this route ref is bound to must contain */\n  readonly params: string extends TParamKeys ? (keyof TParams)[] : TParamKeys[];\n}): RouteRef<\n  keyof TParams extends never\n    ? undefined\n    : string extends TParamKeys\n    ? TParams\n    : { [param in TParamKeys]: string }\n> {\n  return new RouteRefImpl(\n    config?.params as string[] | undefined,\n    describeParentCallSite(),\n  ) as RouteRef<any>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RouteRef, toInternalRouteRef } from './RouteRef';\nimport { AnyRouteRefParams } from './types';\n\n// Should match the pattern in react-router\nconst PARAM_PATTERN = /^\\w+$/;\n\n/**\n * Descriptor of a route relative to an absolute {@link RouteRef}.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface SubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> {\n  readonly $$type: '@backstage/SubRouteRef';\n\n  readonly T: TParams;\n\n  readonly path: string;\n}\n\n/** @internal */\nexport interface InternalSubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> extends SubRouteRef<TParams> {\n  readonly version: 'v1';\n\n  getParams(): string[];\n  getParent(): RouteRef;\n  getDescription(): string;\n}\n\n/** @internal */\nexport function toInternalSubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n>(resource: SubRouteRef<TParams>): InternalSubRouteRef<TParams> {\n  const r = resource as InternalSubRouteRef<TParams>;\n  if (r.$$type !== '@backstage/SubRouteRef') {\n    throw new Error(`Invalid SubRouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isSubRouteRef(opaque: {\n  $$type: string;\n}): opaque is SubRouteRef {\n  return opaque.$$type === '@backstage/SubRouteRef';\n}\n\n/** @internal */\nexport class SubRouteRefImpl<TParams extends AnyRouteRefParams>\n  implements SubRouteRef<TParams>\n{\n  readonly $$type = '@backstage/SubRouteRef';\n  readonly version = 'v1';\n  declare readonly T: never;\n\n  #params: string[];\n  #parent: RouteRef;\n\n  constructor(readonly path: string, params: string[], parent: RouteRef) {\n    this.#params = params;\n    this.#parent = parent;\n  }\n\n  getParams(): string[] {\n    return this.#params;\n  }\n\n  getParent(): RouteRef {\n    return this.#parent;\n  }\n\n  getDescription(): string {\n    const parent = toInternalRouteRef(this.#parent);\n    return `at ${this.path} with parent ${parent.getDescription()}`;\n  }\n\n  toString(): string {\n    return `SubRouteRef{${this.getDescription()}}`;\n  }\n}\n\n/**\n * Used in {@link PathParams} type declaration.\n * @ignore\n */\ntype ParamPart<S extends string> = S extends `:${infer Param}` ? Param : never;\n\n/**\n * Used in {@link PathParams} type declaration.\n * @ignore\n */\ntype ParamNames<S extends string> = S extends `${infer Part}/${infer Rest}`\n  ? ParamPart<Part> | ParamNames<Rest>\n  : ParamPart<S>;\n/**\n * This utility type helps us infer a Param object type from a string path\n * For example, `/foo/:bar/:baz` inferred to `{ bar: string, baz: string }`\n * @ignore\n */\ntype PathParams<S extends string> = { [name in ParamNames<S>]: string };\n\n/**\n * Merges a param object type with an optional params type into a params object.\n * @ignore\n */\ntype MergeParams<\n  P1 extends { [param in string]: string },\n  P2 extends AnyRouteRefParams,\n> = (P1[keyof P1] extends never ? {} : P1) & (P2 extends undefined ? {} : P2);\n\n/**\n * Convert empty params to undefined.\n * @ignore\n */\ntype TrimEmptyParams<Params extends { [param in string]: string }> =\n  keyof Params extends never ? undefined : Params;\n\n/**\n * Creates a SubRouteRef type given the desired parameters and parent route parameters.\n * The parameters types are merged together while ensuring that there is no overlap between the two.\n *\n * @ignore\n */\ntype MakeSubRouteRef<\n  Params extends { [param in string]: string },\n  ParentParams extends AnyRouteRefParams,\n> = keyof Params & keyof ParentParams extends never\n  ? SubRouteRef<TrimEmptyParams<MergeParams<Params, ParentParams>>>\n  : never;\n\n/**\n * Create a {@link SubRouteRef} from a route descriptor.\n *\n * @param config - Description of the route reference to be created.\n * @public\n */\nexport function createSubRouteRef<\n  Path extends string,\n  ParentParams extends AnyRouteRefParams = never,\n>(config: {\n  path: Path;\n  parent: RouteRef<ParentParams>;\n}): MakeSubRouteRef<PathParams<Path>, ParentParams> {\n  const { path, parent } = config;\n  type Params = PathParams<Path>;\n\n  const internalParent = toInternalRouteRef(parent);\n  const parentParams = internalParent.getParams();\n\n  // Collect runtime parameters from the path, e.g. ['bar', 'baz'] from '/foo/:bar/:baz'\n  const pathParams = path\n    .split('/')\n    .filter(p => p.startsWith(':'))\n    .map(p => p.substring(1));\n  const params = [...parentParams, ...pathParams];\n\n  if (parentParams.some(p => pathParams.includes(p as string))) {\n    throw new Error(\n      'SubRouteRef may not have params that overlap with its parent',\n    );\n  }\n  if (!path.startsWith('/')) {\n    throw new Error(`SubRouteRef path must start with '/', got '${path}'`);\n  }\n  if (path.endsWith('/')) {\n    throw new Error(`SubRouteRef path must not end with '/', got '${path}'`);\n  }\n  for (const param of pathParams) {\n    if (!PARAM_PATTERN.test(param)) {\n      throw new Error(`SubRouteRef path has invalid param, got '${param}'`);\n    }\n  }\n\n  // We ensure that the type of the return type is sane here\n  const subRouteRef = new SubRouteRefImpl(\n    path,\n    params as string[],\n    parent,\n  ) as SubRouteRef<TrimEmptyParams<MergeParams<Params, ParentParams>>>;\n\n  // But skip type checking of the return value itself, because the conditional\n  // type checking of the parent parameter overlap is tricky to express.\n  return subRouteRef as any;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RouteRefImpl } from './RouteRef';\nimport { describeParentCallSite } from './describeParentCallSite';\nimport { AnyRouteRefParams } from './types';\n\n/**\n * Route descriptor, to be later bound to a concrete route by the app. Used to implement cross-plugin route references.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface ExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n> {\n  readonly $$type: '@backstage/ExternalRouteRef';\n  readonly T: TParams;\n  readonly optional: TOptional;\n}\n\n/** @internal */\nexport interface InternalExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n> extends ExternalRouteRef<TParams, TOptional> {\n  readonly version: 'v1';\n  getParams(): string[];\n  getDescription(): string;\n\n  setId(id: string): void;\n}\n\n/** @internal */\nexport function toInternalExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n>(\n  resource: ExternalRouteRef<TParams, TOptional>,\n): InternalExternalRouteRef<TParams, TOptional> {\n  const r = resource as InternalExternalRouteRef<TParams, TOptional>;\n  if (r.$$type !== '@backstage/ExternalRouteRef') {\n    throw new Error(`Invalid ExternalRouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isExternalRouteRef(opaque: {\n  $$type: string;\n}): opaque is ExternalRouteRef {\n  return opaque.$$type === '@backstage/ExternalRouteRef';\n}\n\n/** @internal */\nclass ExternalRouteRefImpl\n  extends RouteRefImpl\n  implements InternalExternalRouteRef\n{\n  readonly $$type = '@backstage/ExternalRouteRef' as any;\n\n  constructor(\n    readonly optional: boolean,\n    readonly params: string[] = [],\n    creationSite: string,\n  ) {\n    super(params, creationSite);\n  }\n}\n\n/**\n * Creates a route descriptor, to be later bound to a concrete route by the app. Used to implement cross-plugin route references.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @param options - Description of the route reference to be created.\n * @public\n */\nexport function createExternalRouteRef<\n  TParams extends { [param in TParamKeys]: string } | undefined = undefined,\n  TOptional extends boolean = false,\n  TParamKeys extends string = string,\n>(options?: {\n  /**\n   * The parameters that will be provided to the external route reference.\n   */\n  readonly params?: string extends TParamKeys\n    ? (keyof TParams)[]\n    : TParamKeys[];\n\n  /**\n   * Whether or not this route is optional, defaults to false.\n   *\n   * Optional external routes are not required to be bound in the app, and\n   * if they aren't, `useExternalRouteRef` will return `undefined`.\n   */\n  optional?: TOptional;\n}): ExternalRouteRef<\n  keyof TParams extends never\n    ? undefined\n    : string extends TParamKeys\n    ? TParams\n    : { [param in TParamKeys]: string },\n  TOptional\n> {\n  return new ExternalRouteRefImpl(\n    Boolean(options?.optional),\n    options?.params as string[] | undefined,\n    describeParentCallSite(),\n  ) as ExternalRouteRef<any, any>;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RouteRef as LegacyRouteRef,\n  SubRouteRef as LegacySubRouteRef,\n  ExternalRouteRef as LegacyExternalRouteRef,\n  AnyRouteRefParams,\n} from '@backstage/core-plugin-api';\n\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { routeRefType } from '../../core-plugin-api/src/routing/types';\n\nimport {\n  RouteRef,\n  SubRouteRef,\n  ExternalRouteRef,\n  createRouteRef,\n  createSubRouteRef,\n  createExternalRouteRef,\n} from '@backstage/frontend-plugin-api';\n\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { toInternalRouteRef } from '../../frontend-plugin-api/src/routing/RouteRef';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { toInternalSubRouteRef } from '../../frontend-plugin-api/src/routing/SubRouteRef';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { toInternalExternalRouteRef } from '../../frontend-plugin-api/src/routing/ExternalRouteRef';\n\n/**\n * A temporary helper to convert a legacy route ref to the new system.\n *\n * @public\n * @remarks\n *\n * In the future the legacy createRouteRef will instead create refs compatible with both systems.\n */\nexport function convertLegacyRouteRef<TParams extends AnyRouteRefParams>(\n  ref: LegacyRouteRef<TParams>,\n): RouteRef<TParams>;\n\n/**\n * A temporary helper to convert a legacy sub route ref to the new system.\n *\n * @public\n * @remarks\n *\n * In the future the legacy createSubRouteRef will instead create refs compatible with both systems.\n */\nexport function convertLegacyRouteRef<TParams extends AnyRouteRefParams>(\n  ref: LegacySubRouteRef<TParams>,\n): SubRouteRef<TParams>;\n\n/**\n * A temporary helper to convert a legacy external route ref to the new system.\n *\n * @public\n * @remarks\n *\n * In the future the legacy createExternalRouteRef will instead create refs compatible with both systems.\n */\nexport function convertLegacyRouteRef<\n  TParams extends AnyRouteRefParams,\n  TOptional extends boolean,\n>(\n  ref: LegacyExternalRouteRef<TParams, TOptional>,\n): ExternalRouteRef<TParams, TOptional>;\n\nexport function convertLegacyRouteRef(\n  ref: LegacyRouteRef | LegacySubRouteRef | LegacyExternalRouteRef,\n): RouteRef | SubRouteRef | ExternalRouteRef {\n  // Ref has already been converted\n  if ('$$type' in ref) {\n    return ref as unknown as RouteRef | SubRouteRef | ExternalRouteRef;\n  }\n\n  const type = (ref as unknown as { [routeRefType]: unknown })[routeRefType];\n\n  if (type === 'absolute') {\n    const legacyRef = ref as LegacyRouteRef;\n    const legacyRefStr = String(legacyRef);\n    const newRef = toInternalRouteRef(\n      createRouteRef<{ [key in string]: string }>({\n        params: legacyRef.params as string[],\n      }),\n    );\n    return Object.assign(legacyRef, {\n      $$type: '@backstage/RouteRef' as const,\n      version: 'v1',\n      T: newRef.T,\n      getParams() {\n        return newRef.getParams();\n      },\n      getDescription() {\n        return legacyRefStr;\n      },\n      setId(id: string) {\n        newRef.setId(id);\n      },\n      toString() {\n        return legacyRefStr;\n      },\n    });\n  }\n  if (type === 'sub') {\n    const legacyRef = ref as LegacySubRouteRef;\n    const legacyRefStr = String(legacyRef);\n    const newRef = toInternalSubRouteRef(\n      createSubRouteRef({\n        path: legacyRef.path,\n        parent: convertLegacyRouteRef(legacyRef.parent),\n      }),\n    );\n    return Object.assign(legacyRef, {\n      $$type: '@backstage/SubRouteRef' as const,\n      version: 'v1',\n      T: newRef.T,\n      getParams() {\n        return newRef.getParams();\n      },\n      getParent() {\n        return newRef.getParent();\n      },\n      getDescription() {\n        return legacyRefStr;\n      },\n      toString() {\n        return legacyRefStr;\n      },\n    });\n  }\n  if (type === 'external') {\n    const legacyRef = ref as LegacyExternalRouteRef;\n    const legacyRefStr = String(legacyRef);\n    const newRef = toInternalExternalRouteRef(\n      createExternalRouteRef<{ [key in string]: string }>({\n        params: legacyRef.params as string[],\n        optional: legacyRef.optional,\n      }),\n    );\n    return Object.assign(legacyRef, {\n      $$type: '@backstage/ExternalRouteRef' as const,\n      version: 'v1',\n      T: newRef.T,\n      optional: newRef.optional,\n      getParams() {\n        return newRef.getParams();\n      },\n      getDescription() {\n        return legacyRefStr;\n      },\n      setId(id: string) {\n        newRef.setId(id);\n      },\n      toString() {\n        return legacyRefStr;\n      },\n    });\n  }\n\n  throw new Error(`Failed to convert legacy route ref, unknown type '${type}'`);\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnyRouteRefParams,\n  BackstagePlugin as LegacyBackstagePlugin,\n  RouteRef,\n  getComponentData,\n} from '@backstage/core-plugin-api';\nimport {\n  BackstagePlugin,\n  ExtensionDefinition,\n  coreExtensionData,\n  createApiExtension,\n  createExtension,\n  createExtensionInput,\n  createPageExtension,\n  createPlugin,\n} from '@backstage/frontend-plugin-api';\nimport React, { Children, ReactNode, isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { convertLegacyRouteRef } from './convertLegacyRouteRef';\nimport { compatWrapper } from './compatWrapper';\n\n/*\n\n# Legacy interoperability\n\nUse-cases (prioritized):\n 1. Slowly migrate over an existing app to DI, piece by piece\n 2. Use a legacy plugin in a new DI app\n 3. Use DI in an existing legacy app\n\nStarting point: use-case #1\n\nPotential solutions:\n 1. Codemods (we're not considering this for now)\n 2. Legacy apps are migrated bottom-up, i.e. keep legacy root, replace pages with DI\n 3. Legacy apps are migrated top-down i.e. switch out base to DI, legacy adapter allows for usage of existing app structure\n\nChosen path: #3\n\nExisting tasks:\n  - Adopters can migrate their existing app gradually (~4)\n    - Example-app uses legacy base with DI adapters\n    - Create an API that lets you inject DI into existing apps - working assumption is that this is enough\n  - Adopters can use legacy plugins in DI through adapters (~8)\n    - App-next uses DI base with legacy adapters\n    - Create a legacy adapter that is able to take an existing extension tree\n\n*/\n\n// Creates a shim extension whose purpose is to build up the tree (anchored at\n// the root page) of paths/routeRefs so that the app can bind them properly.\nfunction makeRoutingShimExtension(options: {\n  name: string;\n  parentExtensionId: string;\n  routePath?: string;\n  routeRef?: RouteRef;\n}) {\n  const { name, parentExtensionId, routePath, routeRef } = options;\n  return createExtension({\n    kind: 'routing-shim',\n    name,\n    attachTo: { id: parentExtensionId, input: 'childRoutingShims' },\n    inputs: {\n      childRoutingShims: createExtensionInput({\n        routePath: coreExtensionData.routePath.optional(),\n        routeRef: coreExtensionData.routeRef.optional(),\n      }),\n    },\n    output: {\n      routePath: coreExtensionData.routePath.optional(),\n      routeRef: coreExtensionData.routeRef.optional(),\n    },\n    factory: () => ({\n      routePath,\n      routeRef: routeRef ? convertLegacyRouteRef(routeRef) : undefined,\n    }),\n  });\n}\n\nfunction visitRouteChildren(options: {\n  children: ReactNode;\n  parentExtensionId: string;\n  context: {\n    pluginId: string;\n    extensions: ExtensionDefinition<unknown>[];\n    getUniqueName: () => string;\n    discoverPlugin: (plugin: LegacyBackstagePlugin) => void;\n  };\n}): void {\n  const { children, parentExtensionId, context } = options;\n  const { pluginId, extensions, getUniqueName, discoverPlugin } = context;\n\n  Children.forEach(children, node => {\n    if (!isValidElement(node)) {\n      return;\n    }\n\n    const plugin = getComponentData<LegacyBackstagePlugin>(node, 'core.plugin');\n    const routeRef = getComponentData<RouteRef<AnyRouteRefParams>>(\n      node,\n      'core.mountPoint',\n    );\n    const routePath: string | undefined = node.props?.path;\n\n    if (plugin) {\n      // We just mark the plugin as discovered, but don't change the context\n      discoverPlugin(plugin);\n    }\n\n    let nextParentExtensionId = parentExtensionId;\n    if (routeRef || routePath) {\n      const nextParentExtensionName = getUniqueName();\n      nextParentExtensionId = `routing-shim:${pluginId}/${nextParentExtensionName}`;\n      extensions.push(\n        makeRoutingShimExtension({\n          name: nextParentExtensionName,\n          parentExtensionId,\n          routePath,\n          routeRef,\n        }),\n      );\n    }\n\n    visitRouteChildren({\n      children: node.props.children,\n      parentExtensionId: nextParentExtensionId,\n      context,\n    });\n  });\n}\n\n/** @internal */\nexport function collectLegacyRoutes(\n  flatRoutesElement: JSX.Element,\n): BackstagePlugin[] {\n  const pluginExtensions = new Map<\n    LegacyBackstagePlugin,\n    ExtensionDefinition<unknown>[]\n  >();\n\n  const getUniqueName = (() => {\n    let currentIndex = 1;\n    return () => String(currentIndex++);\n  })();\n\n  const getPluginExtensions = (plugin: LegacyBackstagePlugin) => {\n    let extensions = pluginExtensions.get(plugin);\n    if (!extensions) {\n      extensions = [];\n      pluginExtensions.set(plugin, extensions);\n    }\n    return extensions;\n  };\n\n  React.Children.forEach(\n    flatRoutesElement.props.children,\n    (route: ReactNode) => {\n      // TODO(freben): Handle feature flag and permissions framework wrapper elements\n      if (!React.isValidElement(route) || route.type !== Route) {\n        return;\n      }\n\n      const routeElement = route.props.element;\n      const path: string | undefined = route.props.path;\n      const plugin = getComponentData<LegacyBackstagePlugin>(\n        routeElement,\n        'core.plugin',\n      );\n      const routeRef = getComponentData<RouteRef>(\n        routeElement,\n        'core.mountPoint',\n      );\n      if (!plugin || !path) {\n        return;\n      }\n\n      const extensions = getPluginExtensions(plugin);\n      const pageExtensionName = extensions.length ? getUniqueName() : undefined;\n      const pageExtensionId = `page:${plugin.getId()}${\n        pageExtensionName ? `/${pageExtensionName}` : pageExtensionName\n      }`;\n\n      extensions.push(\n        createPageExtension({\n          name: pageExtensionName,\n          defaultPath: path[0] === '/' ? path.slice(1) : path,\n          routeRef: routeRef ? convertLegacyRouteRef(routeRef) : undefined,\n          inputs: {\n            childRoutingShims: createExtensionInput({\n              routePath: coreExtensionData.routePath.optional(),\n              routeRef: coreExtensionData.routeRef.optional(),\n            }),\n          },\n          loader: async () =>\n            compatWrapper(\n              route.props.children ? (\n                <Routes>\n                  <Route path=\"*\" element={routeElement}>\n                    <Route path=\"*\" element={route.props.children} />\n                  </Route>\n                </Routes>\n              ) : (\n                routeElement\n              ),\n            ),\n        }),\n      );\n\n      visitRouteChildren({\n        children: route.props.children,\n        parentExtensionId: pageExtensionId,\n        context: {\n          pluginId: plugin.getId(),\n          extensions,\n          getUniqueName,\n          discoverPlugin: getPluginExtensions,\n        },\n      });\n    },\n  );\n\n  return Array.from(pluginExtensions).map(([plugin, extensions]) =>\n    createPlugin({\n      id: plugin.getId(),\n      extensions: [\n        ...extensions,\n        ...Array.from(plugin.getApis()).map(factory =>\n          createApiExtension({ factory }),\n        ),\n      ],\n    }),\n  );\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  Children,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  isValidElement,\n} from 'react';\nimport {\n  FrontendFeature,\n  coreExtensionData,\n  createExtension,\n  createExtensionInput,\n  createExtensionOverrides,\n} from '@backstage/frontend-plugin-api';\nimport { getComponentData } from '@backstage/core-plugin-api';\nimport { collectLegacyRoutes } from './collectLegacyRoutes';\n\nfunction selectChildren(\n  rootNode: ReactNode,\n  selector?: (element: ReactElement<{ children?: ReactNode }>) => boolean,\n  strictError?: string,\n): Array<ReactElement<{ children?: ReactNode }>> {\n  return Children.toArray(rootNode).flatMap(node => {\n    if (!isValidElement<{ children?: ReactNode }>(node)) {\n      return [];\n    }\n\n    if (node.type === Fragment) {\n      return selectChildren(node.props.children, selector, strictError);\n    }\n\n    if (selector === undefined || selector(node)) {\n      return [node];\n    }\n\n    if (strictError) {\n      throw new Error(strictError);\n    }\n\n    return selectChildren(node.props.children, selector, strictError);\n  });\n}\n\n/** @public */\nexport function convertLegacyApp(\n  rootElement: React.JSX.Element,\n): FrontendFeature[] {\n  if (getComponentData(rootElement, 'core.type') === 'FlatRoutes') {\n    return collectLegacyRoutes(rootElement);\n  }\n\n  const appRouterEls = selectChildren(\n    rootElement,\n    el => getComponentData(el, 'core.type') === 'AppRouter',\n  );\n  if (appRouterEls.length !== 1) {\n    throw new Error(\n      \"Failed to convert legacy app, AppRouter element could not been found. Make sure it's at the top level of the App element tree\",\n    );\n  }\n\n  const rootEls = selectChildren(\n    appRouterEls[0].props.children,\n    el =>\n      Boolean(el.props.children) &&\n      selectChildren(\n        el.props.children,\n        innerEl => getComponentData(innerEl, 'core.type') === 'FlatRoutes',\n      ).length === 1,\n  );\n  if (rootEls.length !== 1) {\n    throw new Error(\n      \"Failed to convert legacy app, Root element containing FlatRoutes could not been found. Make sure it's within the AppRouter element of the App element tree\",\n    );\n  }\n  const [rootEl] = rootEls;\n\n  const routesEls = selectChildren(\n    rootEls[0].props.children,\n    el => getComponentData(el, 'core.type') === 'FlatRoutes',\n  );\n  if (routesEls.length !== 1) {\n    throw new Error(\n      'Unexpectedly failed to find FlatRoutes in app element tree',\n    );\n  }\n  const [routesEl] = routesEls;\n\n  const CoreLayoutOverride = createExtension({\n    namespace: 'app',\n    name: 'layout',\n    attachTo: { id: 'app', input: 'root' },\n    inputs: {\n      content: createExtensionInput(\n        {\n          element: coreExtensionData.reactElement,\n        },\n        { singleton: true },\n      ),\n    },\n    output: {\n      element: coreExtensionData.reactElement,\n    },\n    factory({ inputs }) {\n      // Clone the root element, this replaces the FlatRoutes declared in the app with out content input\n      return {\n        element: React.cloneElement(\n          rootEl,\n          undefined,\n          inputs.content.output.element,\n        ),\n      };\n    },\n  });\n  const CoreNavOverride = createExtension({\n    namespace: 'app',\n    name: 'nav',\n    attachTo: { id: 'app/layout', input: 'nav' },\n    output: {},\n    factory: () => ({}),\n    disabled: true,\n  });\n\n  const collectedRoutes = collectLegacyRoutes(routesEl);\n\n  return [\n    ...collectedRoutes,\n    createExtensionOverrides({\n      extensions: [CoreLayoutOverride, CoreNavOverride],\n    }),\n  ];\n}\n"],"names":["defaultIcons","defaultComponents"],"mappings":"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"}