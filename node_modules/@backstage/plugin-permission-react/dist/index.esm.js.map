{"version":3,"file":"index.esm.js","sources":["../src/apis/PermissionApi.ts","../src/apis/IdentityPermissionApi.ts","../src/hooks/usePermission.ts","../src/components/PermissionedRoute.tsx","../src/components/RequirePermission.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EvaluatePermissionRequest,\n  EvaluatePermissionResponse,\n} from '@backstage/plugin-permission-common';\nimport { ApiRef, createApiRef } from '@backstage/core-plugin-api';\n\n/**\n * This API is used by various frontend utilities that allow developers to implement authorization within their frontend\n * plugins. A plugin developer will likely not have to interact with this API or its implementations directly, but\n * rather with the aforementioned utility components/hooks.\n * @public\n */\nexport type PermissionApi = {\n  authorize(\n    request: EvaluatePermissionRequest,\n  ): Promise<EvaluatePermissionResponse>;\n};\n\n/**\n * A Backstage ApiRef for the Permission API. See https://backstage.io/docs/api/utility-apis for more information on\n * Backstage ApiRefs.\n * @public\n */\nexport const permissionApiRef: ApiRef<PermissionApi> = createApiRef({\n  id: 'plugin.permission.api',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport { PermissionApi } from './PermissionApi';\nimport {\n  AuthorizePermissionRequest,\n  AuthorizePermissionResponse,\n  PermissionClient,\n} from '@backstage/plugin-permission-common';\nimport { Config } from '@backstage/config';\n\n/**\n * The default implementation of the PermissionApi, which simply calls the authorize method of the given\n * {@link @backstage/plugin-permission-common#PermissionClient}.\n * @public\n */\nexport class IdentityPermissionApi implements PermissionApi {\n  private constructor(\n    private readonly permissionClient: PermissionClient,\n    private readonly identityApi: IdentityApi,\n  ) {}\n\n  static create(options: {\n    config: Config;\n    discovery: DiscoveryApi;\n    identity: IdentityApi;\n  }) {\n    const { config, discovery, identity } = options;\n    const permissionClient = new PermissionClient({ discovery, config });\n    return new IdentityPermissionApi(permissionClient, identity);\n  }\n\n  async authorize(\n    request: AuthorizePermissionRequest,\n  ): Promise<AuthorizePermissionResponse> {\n    const response = await this.permissionClient.authorize(\n      [request],\n      await this.identityApi.getCredentials(),\n    );\n    return response[0];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core-plugin-api';\nimport { permissionApiRef } from '../apis';\nimport {\n  AuthorizeResult,\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\nimport useSWR from 'swr';\n\n/** @public */\nexport type AsyncPermissionResult = {\n  loading: boolean;\n  allowed: boolean;\n  error?: Error;\n};\n\n/**\n * React hook utility for authorization. Given either a non-resource\n * {@link @backstage/plugin-permission-common#Permission} or a\n * {@link @backstage/plugin-permission-common#ResourcePermission} and an\n * optional resourceRef, it will return whether or not access is allowed (for\n * the given resource, if resourceRef is provided). See\n * {@link @backstage/plugin-permission-common/PermissionClient#authorize} for\n * more details.\n *\n * The resourceRef field is optional to allow calling this hook with an\n * entity that might be loading asynchronously, but when resourceRef is not\n * supplied, the value of `allowed` will always be false.\n *\n * Note: This hook uses stale-while-revalidate to help avoid flicker in UI\n * elements that would be conditionally rendered based on the `allowed` result\n * of this hook.\n * @public\n */\nexport function usePermission(\n  input:\n    | {\n        permission: Exclude<Permission, ResourcePermission>;\n        resourceRef?: never;\n      }\n    | {\n        permission: ResourcePermission;\n        resourceRef: string | undefined;\n      },\n): AsyncPermissionResult {\n  const permissionApi = useApi(permissionApiRef);\n  const { data, error } = useSWR(input, async (args: typeof input) => {\n    // We could make the resourceRef parameter required to avoid this check, but\n    // it would make using this hook difficult in situations where the entity\n    // must be asynchronously loaded, so instead we short-circuit to a deny when\n    // no resourceRef is supplied, on the assumption that the resourceRef is\n    // still loading outside the hook.\n    if (isResourcePermission(args.permission) && !args.resourceRef) {\n      return AuthorizeResult.DENY;\n    }\n\n    const { result } = await permissionApi.authorize(args);\n    return result;\n  });\n\n  if (error) {\n    return { error, loading: false, allowed: false };\n  }\n  if (data === undefined) {\n    return { loading: true, allowed: false };\n  }\n  return { loading: false, allowed: data === AuthorizeResult.ALLOW };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, ReactNode } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport {\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Returns a React Router Route which only renders the element when authorized. If unauthorized, the Route will render a\n * NotFoundErrorPage (see {@link @backstage/core-app-api#AppComponents}).\n *\n * @public\n * @deprecated This component no longer works with the most recent version of `@backstage/core-app-api` and react-router v6, use {@link RequirePermission} instead.\n */\nexport const PermissionedRoute = (\n  props: {\n    caseSensitive?: boolean;\n    children?: ReactNode;\n    element?: ReactElement | null;\n    path?: string;\n    errorComponent?: ReactElement | null;\n  } & (\n    | {\n        permission: Exclude<Permission, ResourcePermission>;\n        resourceRef?: never;\n      }\n    | {\n        permission: ResourcePermission;\n        resourceRef: string | undefined;\n      }\n  ),\n) => {\n  const { permission, resourceRef, errorComponent, ...otherProps } = props;\n\n  const permissionResult = usePermission(\n    isResourcePermission(permission)\n      ? { permission, resourceRef }\n      : { permission },\n  );\n  const app = useApp();\n  const { NotFoundErrorPage } = app.getComponents();\n\n  let shownElement: ReactElement | null | undefined =\n    errorComponent === undefined ? <NotFoundErrorPage /> : errorComponent;\n\n  if (permissionResult.loading) {\n    shownElement = null;\n  } else if (permissionResult.allowed) {\n    shownElement = props.element;\n  }\n\n  return <Route {...otherProps} element={shownElement} />;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport {\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Properties for {@link RequirePermission}\n *\n * @public\n */\nexport type RequirePermissionProps = (\n  | {\n      permission: Exclude<Permission, ResourcePermission>;\n      resourceRef?: never;\n    }\n  | {\n      permission: ResourcePermission;\n      resourceRef: string | undefined;\n    }\n) & {\n  /**\n   * The error page to be displayed if the user is not allowed access.\n   *\n   * Defaults to the `NotFoundErrorPage` app component.\n   */\n  errorPage?: ReactNode;\n  children: ReactNode;\n};\n\n/**\n * A boundary that only renders its child elements if the user has the specified permission.\n *\n * While loading, nothing will be rendered. If the user does not have\n * permission, the `errorPage` element will be rendered, falling back\n * to the `NotFoundErrorPage` app component if no `errorPage` is provider.\n *\n * @public\n */\nexport function RequirePermission(\n  props: RequirePermissionProps,\n): JSX.Element | null {\n  const { permission, resourceRef } = props;\n  const permissionResult = usePermission(\n    isResourcePermission(permission)\n      ? { permission, resourceRef }\n      : { permission },\n  );\n  const app = useApp();\n\n  if (permissionResult.loading) {\n    return null;\n  } else if (permissionResult.allowed) {\n    return <>{props.children}</>;\n  }\n\n  if (props.errorPage) {\n    return <>{props.errorPage}</>;\n  }\n  // If no explicit error element is provided, the not found page is used as fallback.\n  const { NotFoundErrorPage } = app.getComponents();\n  return <NotFoundErrorPage />;\n}\n"],"names":[],"mappings":"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"}