import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';
import { TemplateAction, TaskBroker, TemplateFilter, TemplateGlobal } from '@backstage/plugin-scaffolder-node';

/**
 * Extension point for managing scaffolder actions.
 *
 * @alpha
 */
interface ScaffolderActionsExtensionPoint {
    addActions(...actions: TemplateAction<any, any>[]): void;
}
/**
 * Extension point for managing scaffolder actions.
 *
 * @alpha
 */
declare const scaffolderActionsExtensionPoint: _backstage_backend_plugin_api.ExtensionPoint<ScaffolderActionsExtensionPoint>;
/**
 * Extension point for replacing the scaffolder task broker.
 *
 * @alpha
 */
interface ScaffolderTaskBrokerExtensionPoint {
    setTaskBroker(taskBroker: TaskBroker): void;
}
/**
 * Extension point for replacing the scaffolder task broker.
 *
 * @alpha
 */
declare const scaffolderTaskBrokerExtensionPoint: _backstage_backend_plugin_api.ExtensionPoint<ScaffolderTaskBrokerExtensionPoint>;
/**
 * Extension point for adding template filters and globals.
 *
 * @alpha
 */
interface ScaffolderTemplatingExtensionPoint {
    addTemplateFilters(filters: Record<string, TemplateFilter>): void;
    addTemplateGlobals(filters: Record<string, TemplateGlobal>): void;
}
/**
 * Extension point for adding template filters and globals.
 *
 * @alpha
 */
declare const scaffolderTemplatingExtensionPoint: _backstage_backend_plugin_api.ExtensionPoint<ScaffolderTemplatingExtensionPoint>;

export { ScaffolderActionsExtensionPoint, ScaffolderTaskBrokerExtensionPoint, ScaffolderTemplatingExtensionPoint, scaffolderActionsExtensionPoint, scaffolderTaskBrokerExtensionPoint, scaffolderTemplatingExtensionPoint };
