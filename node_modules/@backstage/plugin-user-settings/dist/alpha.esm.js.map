{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreExtensionData,\n  createExtensionInput,\n  createNavItemExtension,\n  createPageExtension,\n  createPlugin,\n} from '@backstage/frontend-plugin-api';\nimport {\n  convertLegacyRouteRef,\n  compatWrapper,\n} from '@backstage/core-compat-api';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { settingsRouteRef } from './plugin';\n\nimport React from 'react';\n\nexport * from './translation';\n\nconst userSettingsPage = createPageExtension({\n  defaultPath: '/settings',\n  routeRef: convertLegacyRouteRef(settingsRouteRef),\n  inputs: {\n    providerSettings: createExtensionInput(\n      {\n        element: coreExtensionData.reactElement,\n      },\n      { singleton: true, optional: true },\n    ),\n  },\n  loader: ({ inputs }) =>\n    import('./components/SettingsPage').then(m =>\n      compatWrapper(\n        <m.SettingsPage\n          providerSettings={inputs.providerSettings?.output.element}\n        />,\n      ),\n    ),\n});\n\n/** @alpha */\nexport const settingsNavItem = createNavItemExtension({\n  routeRef: convertLegacyRouteRef(settingsRouteRef),\n  title: 'Settings',\n  icon: SettingsIcon,\n});\n\n/**\n * @alpha\n */\nexport default createPlugin({\n  id: 'user-settings',\n  extensions: [userSettingsPage, settingsNavItem],\n  routes: {\n    root: convertLegacyRouteRef(settingsRouteRef),\n  },\n});\n"],"names":[],"mappings":";;;;;;;;;AAiCA,MAAM,mBAAmB,mBAAoB,CAAA;AAAA,EAC3C,WAAa,EAAA,WAAA;AAAA,EACb,QAAA,EAAU,sBAAsB,gBAAgB,CAAA;AAAA,EAChD,MAAQ,EAAA;AAAA,IACN,gBAAkB,EAAA,oBAAA;AAAA,MAChB;AAAA,QACE,SAAS,iBAAkB,CAAA,YAAA;AAAA,OAC7B;AAAA,MACA,EAAE,SAAA,EAAW,IAAM,EAAA,QAAA,EAAU,IAAK,EAAA;AAAA,KACpC;AAAA,GACF;AAAA,EACA,QAAQ,CAAC,EAAE,QACT,KAAA,OAAO,6BAA2B,CAAE,CAAA,IAAA;AAAA,IAAK,CAAE,CAAA,KAAA;AA7C/C,MAAA,IAAA,EAAA,CAAA;AA8CM,MAAA,OAAA,aAAA;AAAA,wBACE,KAAA,CAAA,aAAA;AAAA,UAAC,CAAE,CAAA,YAAA;AAAA,UAAF;AAAA,YACC,gBAAkB,EAAA,CAAA,EAAA,GAAA,MAAA,CAAO,gBAAP,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAyB,MAAO,CAAA,OAAA;AAAA,WAAA;AAAA,SACpD;AAAA,OACF,CAAA;AAAA,KAAA;AAAA,GACF;AACJ,CAAC,CAAA,CAAA;AAGM,MAAM,kBAAkB,sBAAuB,CAAA;AAAA,EACpD,QAAA,EAAU,sBAAsB,gBAAgB,CAAA;AAAA,EAChD,KAAO,EAAA,UAAA;AAAA,EACP,IAAM,EAAA,YAAA;AACR,CAAC,EAAA;AAKD,YAAe,YAAa,CAAA;AAAA,EAC1B,EAAI,EAAA,eAAA;AAAA,EACJ,UAAA,EAAY,CAAC,gBAAA,EAAkB,eAAe,CAAA;AAAA,EAC9C,MAAQ,EAAA;AAAA,IACN,IAAA,EAAM,sBAAsB,gBAAgB,CAAA;AAAA,GAC9C;AACF,CAAC,CAAA;;;;"}