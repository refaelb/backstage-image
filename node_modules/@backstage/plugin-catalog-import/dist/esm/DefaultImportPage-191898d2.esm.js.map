{"version":3,"file":"DefaultImportPage-191898d2.esm.js","sources":["../../src/hooks/useCatalogFilename.ts","../../src/components/ImportInfoCard/ImportInfoCard.tsx","../../src/components/useImportState.ts","../../src/components/Buttons/index.tsx","../../src/components/EntityListComponent/EntityListComponent.tsx","../../src/components/StepFinishImportLocation/StepFinishImportLocation.tsx","../../src/components/StepInitAnalyzeUrl/StepInitAnalyzeUrl.tsx","../../src/components/StepPrepareCreatePullRequest/AutocompleteTextField.tsx","../../src/components/StepPrepareCreatePullRequest/PreparePullRequestForm.tsx","../../src/components/StepPrepareCreatePullRequest/PreviewCatalogInfoComponent.tsx","../../src/components/StepPrepareCreatePullRequest/PreviewPullRequestComponent.tsx","../../src/components/StepPrepareCreatePullRequest/StepPrepareCreatePullRequest.tsx","../../src/components/StepPrepareSelectLocations/StepPrepareSelectLocations.tsx","../../src/components/StepReviewLocation/StepReviewLocation.tsx","../../src/components/ImportStepper/defaults.tsx","../../src/components/ImportStepper/ImportStepper.tsx","../../src/components/DefaultImportPage/DefaultImportPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport { getCatalogFilename } from '../components/helpers';\n\nexport function useCatalogFilename(): string {\n  const config = useApi(configApiRef);\n\n  return getCatalogFilename(config);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Chip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link ImportInfoCard}.\n *\n * @public\n */\nexport interface ImportInfoCardProps {\n  exampleLocationUrl?: string;\n  exampleRepositoryUrl?: string;\n}\n\n/**\n * Shows information about the import process.\n *\n * @public\n */\nexport const ImportInfoCard = (props: ImportInfoCardProps) => {\n  const {\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n    exampleRepositoryUrl = 'https://github.com/backstage/backstage',\n  } = props;\n\n  const configApi = useApi(configApiRef);\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const hasGithubIntegration = configApi.has('integrations.github');\n\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <InfoCard\n      title=\"Register an existing component\"\n      titleTypographyProps={{ component: 'h3' }}\n      deepLink={{\n        title: 'Learn more about the Software Catalog',\n        link: 'https://backstage.io/docs/features/software-catalog/',\n      }}\n    >\n      <Typography variant=\"body2\" paragraph>\n        Enter the URL to your source code repository to add it to {appTitle}.\n      </Typography>\n      <Typography component=\"h4\" variant=\"h6\">\n        Link to an existing entity file\n      </Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        Example: <code>{exampleLocationUrl}</code>\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        The wizard analyzes the file, previews the entities, and adds them to\n        the {appTitle} catalog.\n      </Typography>\n      {hasGithubIntegration && (\n        <>\n          <Typography component=\"h4\" variant=\"h6\">\n            Link to a repository{' '}\n            <Chip label=\"GitHub only\" variant=\"outlined\" size=\"small\" />\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n            Example: <code>{exampleRepositoryUrl}</code>\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            The wizard discovers all <code>{catalogFilename}</code> files in the\n            repository, previews the entities, and adds them to the {appTitle}{' '}\n            catalog.\n          </Typography>\n          {catalogImportApi.preparePullRequest && (\n            <Typography variant=\"body2\" paragraph>\n              If no entities are found, the wizard will prepare a Pull Request\n              that adds an example <code>{catalogFilename}</code> and prepares\n              the {appTitle} catalog to load all entities as soon as the Pull\n              Request is merged.\n            </Typography>\n          )}\n        </>\n      )}\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, CompoundEntityRef } from '@backstage/catalog-model';\nimport { useReducer } from 'react';\nimport { AnalyzeResult } from '../api';\n\n/**\n * The configuration of the stepper.\n *\n * @public\n */\nexport type ImportFlows =\n  | 'unknown'\n  | 'single-location'\n  | 'multiple-locations'\n  | 'no-location';\n\n// the available states of the stepper\ntype ImportStateTypes = 'analyze' | 'prepare' | 'review' | 'finish';\n\n/**\n * Result of the prepare state.\n *\n * @public\n */\nexport type PrepareResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        exists?: boolean;\n        target: string;\n        entities: CompoundEntityRef[];\n      }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      pullRequest: {\n        url: string;\n      };\n      locations: Array<{\n        target: string;\n        entities: CompoundEntityRef[];\n      }>;\n    };\n\n// result of the review result\nexport type ReviewResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        target: string;\n        entities: Entity[];\n      }>;\n      refreshed: Array<{ target: string }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      pullRequest: {\n        url: string;\n      };\n      locations: Array<{\n        target: string;\n        entities: Entity[];\n      }>;\n    };\n\n// function type for the 'analysis' -> 'prepare'/'review' transition\ntype onAnalysisFn = (\n  flow: ImportFlows,\n  url: string,\n  result: AnalyzeResult,\n  opts?: { prepareResult?: PrepareResult },\n) => void;\n\n// function type for the 'prepare' -> 'review' transition\ntype onPrepareFn = (\n  result: PrepareResult,\n  opts?: { notRepeatable?: boolean },\n) => void;\n\n// function type for the 'review' -> 'finish' transition\ntype onReviewFn = (result: ReviewResult) => void;\n\n// the type interfaces that are available in each state. every state provides\n// already known information and means to go to the next, or the previous step.\ntype State =\n  | {\n      activeState: 'analyze';\n      onAnalysis: onAnalysisFn;\n    }\n  | {\n      activeState: 'prepare';\n      analyzeResult: AnalyzeResult;\n      prepareResult?: PrepareResult;\n      onPrepare: onPrepareFn;\n    }\n  | {\n      activeState: 'review';\n      analyzeResult: AnalyzeResult;\n      prepareResult: PrepareResult;\n      onReview: onReviewFn;\n    }\n  | {\n      activeState: 'finish';\n      analyzeResult: AnalyzeResult;\n      prepareResult: PrepareResult;\n      reviewResult: ReviewResult;\n    };\n\nexport type ImportState = State & {\n  activeFlow: ImportFlows;\n  activeStepNumber: number;\n  analysisUrl?: string;\n\n  onGoBack?: () => void;\n  onReset: () => void;\n};\n\ntype ReducerActions =\n  | { type: 'onAnalysis'; args: Parameters<onAnalysisFn> }\n  | { type: 'onPrepare'; args: Parameters<onPrepareFn> }\n  | { type: 'onReview'; args: Parameters<onReviewFn> }\n  | { type: 'onGoBack' }\n  | { type: 'onReset'; initialUrl?: string };\n\ntype ReducerState = {\n  activeFlow: ImportFlows;\n  activeState: ImportStateTypes;\n  analysisUrl?: string;\n  analyzeResult?: AnalyzeResult;\n  prepareResult?: PrepareResult;\n  reviewResult?: ReviewResult;\n\n  previousStates: ImportStateTypes[];\n};\n\nfunction init(initialUrl?: string): ReducerState {\n  return {\n    activeFlow: 'unknown',\n    activeState: 'analyze',\n    analysisUrl: initialUrl,\n    previousStates: [],\n  };\n}\n\nfunction reducer(state: ReducerState, action: ReducerActions): ReducerState {\n  switch (action.type) {\n    case 'onAnalysis': {\n      if (state.activeState !== 'analyze') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [activeFlow, analysisUrl, analyzeResult, opts] = action.args;\n\n      return {\n        ...state,\n        analysisUrl,\n        activeFlow,\n        analyzeResult,\n        prepareResult: opts?.prepareResult,\n\n        activeState: opts?.prepareResult === undefined ? 'prepare' : 'review',\n        previousStates: previousStates.concat(activeState),\n      };\n    }\n\n    case 'onPrepare': {\n      if (state.activeState !== 'prepare') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [prepareResult, opts] = action.args;\n\n      return {\n        ...state,\n        prepareResult,\n\n        activeState: 'review',\n        previousStates: opts?.notRepeatable\n          ? []\n          : previousStates.concat(activeState),\n      };\n    }\n\n    case 'onReview': {\n      if (state.activeState !== 'review') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [reviewResult] = action.args;\n\n      return {\n        ...state,\n        reviewResult,\n\n        activeState: 'finish',\n        previousStates: previousStates.concat(activeState),\n      };\n    }\n\n    case 'onGoBack': {\n      const { activeState, previousStates } = state;\n\n      return {\n        ...state,\n\n        activeState:\n          previousStates.length > 0\n            ? previousStates[previousStates.length - 1]\n            : activeState,\n        previousStates: previousStates.slice(0, previousStates.length - 1),\n      };\n    }\n\n    case 'onReset':\n      return {\n        ...init(action.initialUrl),\n\n        // we keep the old prepareResult since the form is animated and an\n        // undefined value might crash the last step.\n        prepareResult: state.prepareResult,\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\n/**\n * A hook that manages the state machine of the form. It handles different flows\n * which each can implement up to four states:\n * 1. analyze\n * 2. preview (skippable from analyze->review)\n * 3. review\n * 4. finish\n *\n * @param options - options\n */\nexport const useImportState = (options?: {\n  initialUrl?: string;\n}): ImportState => {\n  const [state, dispatch] = useReducer(reducer, options?.initialUrl, init);\n\n  const { activeFlow, activeState, analysisUrl, previousStates } = state;\n\n  return {\n    activeFlow,\n    activeState,\n    activeStepNumber: ['analyze', 'prepare', 'review', 'finish'].indexOf(\n      activeState,\n    ),\n    analysisUrl: analysisUrl,\n\n    analyzeResult: state.analyzeResult!,\n    prepareResult: state.prepareResult!,\n    reviewResult: state.reviewResult!,\n\n    onAnalysis: (flow, url, result, opts) =>\n      dispatch({\n        type: 'onAnalysis',\n        args: [flow, url, result, opts],\n      }),\n\n    onPrepare: (result, opts) =>\n      dispatch({\n        type: 'onPrepare',\n        args: [result, opts],\n      }),\n\n    onReview: result => dispatch({ type: 'onReview', args: [result] }),\n\n    onGoBack:\n      previousStates.length > 0\n        ? () => dispatch({ type: 'onGoBack' })\n        : undefined,\n\n    onReset: () =>\n      dispatch({ type: 'onReset', initialUrl: options?.initialUrl }),\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LinkButton } from '@backstage/core-components';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { ComponentProps } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport const NextButton = (\n  props: ComponentProps<typeof Button> & { loading?: boolean },\n) => {\n  const { loading, ...buttonProps } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        {...buttonProps}\n        disabled={props.disabled || props.loading}\n      />\n      {props.loading && (\n        <CircularProgress size=\"1.5rem\" className={classes.buttonProgress} />\n      )}\n      {props.loading}\n    </div>\n  );\n};\n\nexport const BackButton = (props: ComponentProps<typeof Button>) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" className={classes.button} {...props}>\n      {props.children || 'Back'}\n    </Button>\n  );\n};\n\nexport const ViewComponentButton = (\n  props: ComponentProps<typeof LinkButton>,\n) => {\n  const classes = useStyles();\n\n  return (\n    <LinkButton\n      color=\"primary\"\n      variant=\"contained\"\n      className={classes.button}\n      {...props}\n    >\n      {props.children}\n    </LinkButton>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, CompoundEntityRef } from '@backstage/catalog-model';\nimport { useApp } from '@backstage/core-plugin-api';\nimport {\n  EntityRefLink,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport WorkIcon from '@material-ui/icons/Work';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nfunction sortEntities(entities: Array<CompoundEntityRef | Entity>) {\n  return entities.sort((a, b) =>\n    humanizeEntityRef(a).localeCompare(humanizeEntityRef(b)),\n  );\n}\n\n/**\n * Props for {@link EntityListComponent}.\n *\n * @public\n */\nexport interface EntityListComponentProps {\n  locations: Array<{\n    target: string;\n    entities: (Entity | CompoundEntityRef)[];\n  }>;\n  locationListItemIcon: (target: string) => React.ReactElement;\n  collapsed?: boolean;\n  firstListItem?: React.ReactElement;\n  onItemClick?: (target: string) => void;\n  withLinks?: boolean;\n}\n\n/**\n * Shows a result list of entities.\n *\n * @public\n */\nexport const EntityListComponent = (props: EntityListComponentProps) => {\n  const {\n    locations,\n    collapsed = false,\n    locationListItemIcon,\n    onItemClick,\n    firstListItem,\n    withLinks = false,\n  } = props;\n\n  const app = useApp();\n  const classes = useStyles();\n\n  const [expandedUrls, setExpandedUrls] = useState<string[]>([]);\n\n  const handleClick = (url: string) => {\n    setExpandedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  return (\n    <List>\n      {firstListItem}\n      {locations.map(r => (\n        <React.Fragment key={r.target}>\n          <ListItem\n            dense\n            button={Boolean(onItemClick) as any}\n            onClick={() => onItemClick?.(r.target)}\n          >\n            <ListItemIcon>{locationListItemIcon(r.target)}</ListItemIcon>\n\n            <ListItemText\n              primary={r.target}\n              secondary={`Entities: ${r.entities.length}`}\n            />\n\n            {collapsed && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={() => handleClick(r.target)}>\n                  {expandedUrls.includes(r.target) ? (\n                    <ExpandLessIcon />\n                  ) : (\n                    <ExpandMoreIcon />\n                  )}\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n\n          <Collapse\n            in={!collapsed || expandedUrls.includes(r.target)}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List component=\"div\" disablePadding dense>\n              {sortEntities(r.entities).map(entity => {\n                const Icon =\n                  app.getSystemIcon(\n                    `kind:${entity.kind.toLocaleLowerCase('en-US')}`,\n                  ) ?? WorkIcon;\n                return (\n                  <ListItem\n                    key={humanizeEntityRef(entity)}\n                    className={classes.nested}\n                    {...(withLinks\n                      ? {\n                          component: EntityRefLink,\n                          entityRef: entity,\n                          button: withLinks as any,\n                        }\n                      : {})}\n                  >\n                    <ListItemIcon>\n                      <Icon />\n                    </ListItemIcon>\n                    <ListItemText primary={humanizeEntityRef(entity)} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Collapse>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Grid, Typography } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React from 'react';\nimport { BackButton, ViewComponentButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport { Link } from '@backstage/core-components';\nimport partition from 'lodash/partition';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { entityRouteRef } from '@backstage/plugin-catalog-react';\nimport { useRouteRef } from '@backstage/core-plugin-api';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReset: () => void;\n};\n\n// Among the newly registered entities, return a software entity (e.g. Component, API, Resource)\nconst filterComponentEntity = (\n  newLocations: Array<{\n    exists?: boolean;\n    target: string;\n    entities: CompoundEntityRef[];\n  }>,\n): CompoundEntityRef | null => {\n  for (const location of newLocations) {\n    for (const entity of location.entities) {\n      if (\n        ['component', 'api', 'resource'].includes(\n          entity.kind.toLocaleLowerCase('en-US'),\n        )\n      ) {\n        return entity;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const StepFinishImportLocation = ({ prepareResult, onReset }: Props) => {\n  const entityRoute = useRouteRef(entityRouteRef);\n\n  if (prepareResult.type === 'repository') {\n    return (\n      <>\n        <Typography paragraph>\n          The following Pull Request has been opened:{' '}\n          <Link\n            to={prepareResult.pullRequest.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {prepareResult.pullRequest.url}\n          </Link>\n        </Typography>\n        <Typography paragraph>\n          Your entities will be imported as soon as the Pull Request is merged.\n        </Typography>\n        <Grid container spacing={0}>\n          <BackButton onClick={onReset}>Register another</BackButton>\n        </Grid>\n        ;\n      </>\n    );\n  }\n\n  const [existingLocations, newLocations] = partition(\n    prepareResult.locations,\n    l => l.exists,\n  );\n  const newComponentEntity = filterComponentEntity(newLocations);\n  return (\n    <>\n      {newLocations.length > 0 && (\n        <>\n          <Typography>\n            The following entities have been added to the catalog:\n          </Typography>\n\n          <EntityListComponent\n            locations={newLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>\n            A refresh was triggered for the following locations:\n          </Typography>\n\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      <Grid container spacing={0}>\n        {newComponentEntity && (\n          <ViewComponentButton to={entityRoute(newComponentEntity)}>\n            View Component\n          </ViewComponentButton>\n        )}\n        <BackButton onClick={onReset}>Register another</BackButton>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { FormHelperText, Grid, TextField } from '@material-ui/core';\nimport React, { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { NextButton } from '../Buttons';\nimport { asInputRef } from '../helpers';\nimport { ImportFlows, PrepareResult } from '../useImportState';\n\ntype FormData = {\n  url: string;\n};\n\n/**\n * Props for {@link StepInitAnalyzeUrl}.\n *\n * @public\n */\nexport interface StepInitAnalyzeUrlProps {\n  onAnalysis: (\n    flow: ImportFlows,\n    url: string,\n    result: AnalyzeResult,\n    opts?: { prepareResult?: PrepareResult },\n  ) => void;\n  disablePullRequest?: boolean;\n  analysisUrl?: string;\n  exampleLocationUrl?: string;\n}\n\n/**\n * A form that lets the user input a url and analyze it for existing locations or potential entities.\n *\n * @param onAnalysis - is called when the analysis was successful\n * @param analysisUrl - a url that can be used as a default value\n * @param disablePullRequest - if true, repositories without entities will abort the wizard\n * @public\n */\nexport const StepInitAnalyzeUrl = (props: StepInitAnalyzeUrlProps) => {\n  const {\n    onAnalysis,\n    analysisUrl = '',\n    disablePullRequest = false,\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n  } = props;\n\n  const errorApi = useApi(errorApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm<FormData>({\n    mode: 'onTouched',\n    defaultValues: {\n      url: analysisUrl,\n    },\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  const handleResult = useCallback(\n    async ({ url }: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const analysisResult = await catalogImportApi.analyzeUrl(url);\n\n        switch (analysisResult.type) {\n          case 'repository':\n            if (\n              !disablePullRequest &&\n              analysisResult.generatedEntities.length > 0\n            ) {\n              onAnalysis('no-location', url, analysisResult);\n            } else {\n              setError(\"Couldn't generate entities for your repository\");\n              setSubmitted(false);\n            }\n            break;\n\n          case 'locations': {\n            if (analysisResult.locations.length === 1) {\n              onAnalysis('single-location', url, analysisResult, {\n                prepareResult: analysisResult,\n              });\n            } else if (analysisResult.locations.length > 1) {\n              onAnalysis('multiple-locations', url, analysisResult);\n            } else {\n              setError('There are no entities at this location');\n              setSubmitted(false);\n            }\n            break;\n          }\n\n          default: {\n            const err = `Received unknown analysis result of type ${\n              (analysisResult as any).type\n            }. Please contact the support team.`;\n            setError(err);\n            setSubmitted(false);\n\n            errorApi.post(new Error(err));\n            break;\n          }\n        }\n      } catch (e: any) {\n        setError(e?.data?.error?.message ?? e.message);\n        setSubmitted(false);\n      }\n    },\n    [catalogImportApi, disablePullRequest, errorApi, onAnalysis],\n  );\n\n  return (\n    <form onSubmit={handleSubmit(handleResult)}>\n      <TextField\n        {...asInputRef(\n          register('url', {\n            required: true,\n            validate: {\n              httpsValidator: (value: any) =>\n                (typeof value === 'string' &&\n                  value.match(/^http[s]?:\\/\\//) !== null) ||\n                'Must start with http:// or https://.',\n            },\n          }),\n        )}\n        fullWidth\n        id=\"url\"\n        label=\"URL\"\n        placeholder={exampleLocationUrl}\n        helperText=\"Enter the full path to your entity file to start tracking your component\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        error={Boolean(errors.url)}\n        required\n      />\n\n      {errors.url && (\n        <FormHelperText error>{errors.url.message}</FormHelperText>\n      )}\n\n      {error && <FormHelperText error>{error}</FormHelperText>}\n\n      <Grid container spacing={0}>\n        <NextButton\n          disabled={Boolean(errors.url) || !watch('url')}\n          loading={submitted}\n          type=\"submit\"\n        >\n          Analyze\n        </NextButton>\n      </Grid>\n    </form>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CircularProgress, TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react';\nimport { Controller, FieldErrors } from 'react-hook-form';\n\n/**\n * Props for {@link AutocompleteTextField}.\n *\n * @public\n */\nexport interface AutocompleteTextFieldProps<TFieldValue extends string> {\n  name: TFieldValue;\n  options: string[];\n  required?: boolean;\n\n  errors?: FieldErrors;\n  rules?: React.ComponentProps<typeof Controller>['rules'];\n\n  loading?: boolean;\n  loadingText?: string;\n\n  helperText?: React.ReactNode;\n  errorHelperText?: string;\n\n  textFieldProps?: Omit<TextFieldProps, 'required' | 'fullWidth'>;\n}\n\n/**\n * An autocompletion text field for the catalog import flows.\n *\n * @public\n */\nexport const AutocompleteTextField = <TFieldValue extends string>(\n  props: AutocompleteTextFieldProps<TFieldValue>,\n) => {\n  const {\n    name,\n    options,\n    required,\n    errors,\n    rules,\n    loading = false,\n    loadingText,\n    helperText,\n    errorHelperText,\n    textFieldProps = {},\n  } = props;\n\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      render={({ field: { onChange } }) => (\n        <Autocomplete\n          loading={loading}\n          loadingText={loadingText}\n          options={options || []}\n          autoSelect\n          freeSolo\n          onChange={(_event: React.ChangeEvent<{}>, value: string | null) =>\n            onChange(value)\n          }\n          renderInput={params => (\n            <TextField\n              {...params}\n              helperText={(errors?.[name] && errorHelperText) || helperText}\n              error={Boolean(errors?.[name])}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required={required}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size=\"1em\" />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n              {...textFieldProps}\n            />\n          )}\n        />\n      )}\n    />\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  FormProvider,\n  SubmitHandler,\n  useForm,\n  UseFormProps,\n  UseFormReturn,\n} from 'react-hook-form';\n\n/**\n * Props for {@link PreparePullRequestForm}.\n *\n * @public\n */\nexport type PreparePullRequestFormProps<\n  TFieldValues extends Record<string, any>,\n> = Pick<UseFormProps<TFieldValues>, 'defaultValues'> & {\n  onSubmit: SubmitHandler<TFieldValues>;\n\n  render: (\n    props: Pick<\n      UseFormReturn<TFieldValues>,\n      'formState' | 'register' | 'control' | 'setValue'\n    > & {\n      values: TFieldValues;\n    },\n  ) => React.ReactNode;\n};\n\n/**\n * A form wrapper that creates a form that is used to prepare a pull request. It\n * hosts the form logic.\n *\n * @param defaultValues - the default values of the form\n * @param onSubmit - a callback that is executed when the form is submitted\n *   (initiated by a button of type=\"submit\")\n * @param render - render the form elements\n * @public\n */\nexport const PreparePullRequestForm = <\n  TFieldValues extends Record<string, any>,\n>(\n  props: PreparePullRequestFormProps<TFieldValues>,\n) => {\n  const { defaultValues, onSubmit, render } = props;\n\n  const methods = useForm<TFieldValues>({ mode: 'onTouched', defaultValues });\n  const { handleSubmit, watch, control, register, formState, setValue } =\n    methods;\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {render({ values: watch(), formState, register, control, setValue })}\n      </form>\n    </FormProvider>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport React from 'react';\nimport YAML from 'yaml';\nimport { CodeSnippet } from '@backstage/core-components';\nimport { trimEnd } from 'lodash';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link PreviewCatalogInfoComponent}.\n *\n * @public\n */\nexport interface PreviewCatalogInfoComponentProps {\n  repositoryUrl: string;\n  entities: Entity[];\n  classes?: { card?: string; cardContent?: string };\n}\n\n/**\n * Previews information about an entity to create.\n *\n * @public\n */\nexport const PreviewCatalogInfoComponent = (\n  props: PreviewCatalogInfoComponentProps,\n) => {\n  const { repositoryUrl, entities, classes } = props;\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <Card variant=\"outlined\" className={classes?.card}>\n      <CardHeader\n        title={\n          <code>{`${trimEnd(repositoryUrl, '/')}/${catalogFilename}`}</code>\n        }\n      />\n\n      <CardContent className={classes?.cardContent}>\n        <CodeSnippet\n          text={entities\n            .map(e => YAML.stringify(e))\n            .join('---\\n')\n            .trim()}\n          language=\"yaml\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport React from 'react';\nimport { MarkdownContent } from '@backstage/core-components';\n\n/**\n * Props for {@link PreviewPullRequestComponent}.\n *\n * @public\n */\nexport interface PreviewPullRequestComponentProps {\n  title: string;\n  description: string;\n  classes?: { card?: string; cardContent?: string };\n}\n\n/**\n * Previews a pull request.\n *\n * @public\n */\nexport const PreviewPullRequestComponent = (\n  props: PreviewPullRequestComponentProps,\n) => {\n  const { title, description, classes } = props;\n  return (\n    <Card variant=\"outlined\" className={classes?.card}>\n      <CardHeader title={title} subheader=\"Create a new Pull Request\" />\n      <CardContent className={classes?.cardContent}>\n        <MarkdownContent content={description} />\n      </CardContent>\n    </Card>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { assertError } from '@backstage/errors';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { Box, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { UnpackNestedValue, UseFormReturn } from 'react-hook-form';\nimport useAsync from 'react-use/lib/useAsync';\nimport YAML from 'yaml';\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\nimport { PartialEntity } from '../../types';\nimport { BackButton, NextButton } from '../Buttons';\nimport { PrepareResult } from '../useImportState';\nimport { PreparePullRequestForm } from './PreparePullRequestForm';\nimport { PreviewCatalogInfoComponent } from './PreviewCatalogInfoComponent';\nimport { PreviewPullRequestComponent } from './PreviewPullRequestComponent';\n\nconst useStyles = makeStyles(theme => ({\n  previewCard: {\n    marginTop: theme.spacing(1),\n  },\n  previewCardContent: {\n    paddingTop: 0,\n  },\n}));\n\ntype FormData = {\n  title: string;\n  body: string;\n  componentName: string;\n  owner: string;\n  useCodeowners: boolean;\n};\n\n/**\n * Props for {@link StepPrepareCreatePullRequest}.\n *\n * @public\n */\nexport interface StepPrepareCreatePullRequestProps {\n  analyzeResult: Extract<AnalyzeResult, { type: 'repository' }>;\n  onPrepare: (\n    result: PrepareResult,\n    opts?: { notRepeatable?: boolean },\n  ) => void;\n  onGoBack?: () => void;\n\n  renderFormFields: (\n    props: Pick<\n      UseFormReturn<FormData>,\n      'register' | 'setValue' | 'formState'\n    > & {\n      values: UnpackNestedValue<FormData>;\n      groups: string[];\n      groupsLoading: boolean;\n    },\n  ) => React.ReactNode;\n}\n\nexport function generateEntities(\n  entities: PartialEntity[],\n  componentName: string,\n  owner?: string,\n): Entity[] {\n  return entities.map(e => ({\n    ...e,\n    apiVersion: e.apiVersion!,\n    kind: e.kind!,\n    metadata: {\n      ...e.metadata,\n      name: componentName,\n    },\n    spec: {\n      ...e.spec,\n      ...(owner ? { owner } : {}),\n    },\n  }));\n}\n\n/**\n * Prepares a pull request.\n *\n * @public\n */\nexport const StepPrepareCreatePullRequest = (\n  props: StepPrepareCreatePullRequestProps,\n) => {\n  const { analyzeResult, onPrepare, onGoBack, renderFormFields } = props;\n\n  const classes = useStyles();\n  const catalogApi = useApi(catalogApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const catalogFilename = useCatalogFilename();\n\n  const {\n    loading: prDefaultsLoading,\n    value: prDefaults,\n    error: prDefaultsError,\n  } = useAsync(\n    () => catalogImportApi.preparePullRequest!(),\n    [catalogImportApi.preparePullRequest],\n  );\n\n  useEffect(() => {\n    if (prDefaultsError) {\n      errorApi.post(prDefaultsError);\n    }\n  }, [prDefaultsError, errorApi]);\n\n  const { loading: groupsLoading, value: groups } = useAsync(async () => {\n    const groupEntities = await catalogApi.getEntities({\n      filter: { kind: 'group' },\n    });\n\n    return groupEntities.items\n      .map(e => humanizeEntityRef(e, { defaultKind: 'group' }))\n      .sort();\n  });\n\n  const handleResult = useCallback(\n    async (data: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const pr = await catalogImportApi.submitPullRequest({\n          repositoryUrl: analyzeResult.url,\n          title: data.title,\n          body: data.body,\n          fileContent: generateEntities(\n            analyzeResult.generatedEntities,\n            data.componentName,\n            data.owner,\n          )\n            .map(e => YAML.stringify(e))\n            .join('---\\n'),\n        });\n\n        onPrepare(\n          {\n            type: 'repository',\n            url: analyzeResult.url,\n            integrationType: analyzeResult.integrationType,\n            pullRequest: {\n              url: pr.link,\n            },\n            locations: [\n              {\n                target: pr.location,\n                entities: generateEntities(\n                  analyzeResult.generatedEntities,\n                  data.componentName,\n                  data.owner,\n                ).map(e => ({\n                  kind: e.kind,\n                  namespace: e.metadata.namespace!,\n                  name: e.metadata.name,\n                })),\n              },\n            ],\n          },\n          { notRepeatable: true },\n        );\n      } catch (e) {\n        assertError(e);\n        setError(e.message);\n        setSubmitted(false);\n      }\n    },\n    [\n      analyzeResult.generatedEntities,\n      analyzeResult.integrationType,\n      analyzeResult.url,\n      catalogImportApi,\n      onPrepare,\n    ],\n  );\n\n  return (\n    <>\n      <Typography>\n        You entered a link to a {analyzeResult.integrationType} repository but a{' '}\n        <code>{catalogFilename}</code> could not be found. Use this form to open\n        a Pull Request that creates one.\n      </Typography>\n\n      {!prDefaultsLoading && (\n        <PreparePullRequestForm<FormData>\n          onSubmit={handleResult}\n          defaultValues={{\n            title: prDefaults?.title ?? '',\n            body: prDefaults?.body ?? '',\n            owner:\n              (analyzeResult.generatedEntities[0]?.spec?.owner as string) || '',\n            componentName:\n              analyzeResult.generatedEntities[0]?.metadata?.name || '',\n            useCodeowners: false,\n          }}\n          render={({ values, formState, register, setValue }) => (\n            <>\n              {renderFormFields({\n                values,\n                formState,\n                register,\n                setValue,\n                groups: groups ?? [],\n                groupsLoading,\n              })}\n\n              <Box marginTop={2}>\n                <Typography variant=\"h6\">Preview Pull Request</Typography>\n              </Box>\n\n              <PreviewPullRequestComponent\n                title={values.title}\n                description={values.body}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              <Box marginTop={2} marginBottom={1}>\n                <Typography variant=\"h6\">Preview Entities</Typography>\n              </Box>\n\n              <PreviewCatalogInfoComponent\n                entities={generateEntities(\n                  analyzeResult.generatedEntities,\n                  values.componentName,\n                  values.owner,\n                )}\n                repositoryUrl={analyzeResult.url}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              {error && <FormHelperText error>{error}</FormHelperText>}\n\n              <Grid container spacing={0}>\n                {onGoBack && (\n                  <BackButton onClick={onGoBack} disabled={submitted} />\n                )}\n                <NextButton\n                  type=\"submit\"\n                  disabled={Boolean(\n                    formState.errors.title ||\n                      formState.errors.body ||\n                      formState.errors.owner,\n                  )}\n                  loading={submitted}\n                >\n                  Create PR\n                </NextButton>\n              </Grid>\n            </>\n          )}\n        />\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Checkbox,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React, { useCallback, useState } from 'react';\nimport { AnalyzeResult } from '../../api';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport partition from 'lodash/partition';\n\ntype Props = {\n  analyzeResult: Extract<AnalyzeResult, { type: 'locations' }>;\n  prepareResult?: PrepareResult;\n  onPrepare: (result: PrepareResult) => void;\n  onGoBack?: () => void;\n};\n\n/**\n * A form that lets a user select one of a list of locations to import\n *\n * @param analyzeResult - the result of the analysis\n * @param prepareResult - the selectected locations from a previous step\n * @param onPrepare - called after the selection\n * @param onGoBack - called to go back to the previous step\n */\nexport const StepPrepareSelectLocations = ({\n  analyzeResult,\n  prepareResult,\n  onPrepare,\n  onGoBack,\n}: Props) => {\n  const [selectedUrls, setSelectedUrls] = useState<string[]>(\n    prepareResult?.locations.map(l => l.target) || [],\n  );\n\n  const [existingLocations, locations] = partition(\n    analyzeResult?.locations,\n    l => l.exists,\n  );\n\n  const handleResult = useCallback(async () => {\n    onPrepare({\n      type: 'locations',\n      locations: locations.filter((l: any) => selectedUrls.includes(l.target)),\n    });\n  }, [locations, onPrepare, selectedUrls]);\n\n  const onItemClick = (url: string) => {\n    setSelectedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  const onSelectAll = () => {\n    setSelectedUrls(urls =>\n      urls.length < locations.length ? locations.map(l => l.target) : [],\n    );\n  };\n\n  return (\n    <>\n      {locations.length > 0 && (\n        <>\n          <Typography>\n            Select one or more locations that are present in your git\n            repository:\n          </Typography>\n          <EntityListComponent\n            firstListItem={\n              <ListItem dense button onClick={onSelectAll}>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={selectedUrls.length === locations.length}\n                    indeterminate={\n                      selectedUrls.length > 0 &&\n                      selectedUrls.length < locations.length\n                    }\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText primary=\"Select All\" />\n              </ListItem>\n            }\n            onItemClick={onItemClick}\n            locations={locations}\n            locationListItemIcon={target => (\n              <Checkbox\n                edge=\"start\"\n                checked={selectedUrls.includes(target)}\n                tabIndex={-1}\n                disableRipple\n              />\n            )}\n            collapsed\n          />\n        </>\n      )}\n\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>These locations already exist in the catalog:</Typography>\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n            collapsed\n          />\n        </>\n      )}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} />}\n        <NextButton disabled={selectedUrls.length === 0} onClick={handleResult}>\n          Review\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { FormHelperText, Grid, Typography } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React, { useCallback, useState } from 'react';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult, ReviewResult } from '../useImportState';\n\nimport { configApiRef, useAnalytics, useApi } from '@backstage/core-plugin-api';\nimport { Link } from '@backstage/core-components';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReview: (result: ReviewResult) => void;\n  onGoBack?: () => void;\n};\n\nexport const StepReviewLocation = ({\n  prepareResult,\n  onReview,\n  onGoBack,\n}: Props) => {\n  const catalogApi = useApi(catalogApiRef);\n  const configApi = useApi(configApiRef);\n  const analytics = useAnalytics();\n\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n  const exists =\n    prepareResult.type === 'locations' &&\n    prepareResult.locations.some(l => l.exists)\n      ? true\n      : false;\n  const handleClick = useCallback(async () => {\n    setSubmitted(true);\n    analytics.captureEvent('click', 'import entity');\n    try {\n      let refreshed = new Array<{ target: string }>();\n      if (prepareResult.type === 'locations') {\n        refreshed = await Promise.all(\n          prepareResult.locations\n            .filter(l => l.exists)\n            .map(async l => {\n              const ref = stringifyEntityRef(l.entities[0] ?? l);\n              await catalogApi.refreshEntity(ref);\n              return { target: l.target };\n            }),\n        );\n      }\n\n      const locations = await Promise.all(\n        prepareResult.locations\n          .filter((l: unknown) => !(l as { exists?: boolean }).exists)\n          .map(async l => {\n            const result = await catalogApi.addLocation({\n              type: 'url',\n              target: l.target,\n            });\n            return {\n              target: result.location.target,\n              entities: result.entities,\n            };\n          }),\n      );\n\n      onReview({\n        ...prepareResult,\n        ...{ refreshed },\n        locations,\n      });\n    } catch (e) {\n      assertError(e);\n      // TODO: this error should be handled differently. We add it as 'optional' and\n      //       it is not uncommon that a PR has not been merged yet.\n      if (\n        prepareResult.type === 'repository' &&\n        e.message.startsWith(\n          'Location was added but has no entities specified yet',\n        )\n      ) {\n        onReview({\n          ...prepareResult,\n          locations: prepareResult.locations.map(l => ({\n            target: l.target,\n            entities: [],\n          })),\n        });\n      } else {\n        setError(e.message);\n        setSubmitted(false);\n      }\n    }\n  }, [prepareResult, onReview, catalogApi, analytics]);\n\n  return (\n    <>\n      {prepareResult.type === 'repository' && (\n        <>\n          <Typography paragraph>\n            The following Pull Request has been opened:{' '}\n            <Link\n              to={prepareResult.pullRequest.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {prepareResult.pullRequest.url}\n            </Link>\n          </Typography>\n\n          <Typography paragraph>\n            You can already import the location and {appTitle} will fetch the\n            entities as soon as the Pull Request is merged.\n          </Typography>\n        </>\n      )}\n\n      <Typography>\n        {exists\n          ? 'The following locations already exist in the catalog:'\n          : 'The following entities will be added to the catalog:'}\n      </Typography>\n\n      <EntityListComponent\n        locations={prepareResult.locations}\n        locationListItemIcon={() => <LocationOnIcon />}\n      />\n\n      {error && <FormHelperText error>{error}</FormHelperText>}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} disabled={submitted} />}\n        <NextButton\n          disabled={submitted}\n          loading={submitted}\n          onClick={() => handleClick()}\n        >\n          {exists ? 'Refresh' : 'Import'}\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n  StepLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { BackButton } from '../Buttons';\nimport { asInputRef } from '../helpers';\nimport { StepFinishImportLocation } from '../StepFinishImportLocation';\nimport { StepInitAnalyzeUrl } from '../StepInitAnalyzeUrl';\nimport {\n  AutocompleteTextField,\n  StepPrepareCreatePullRequest,\n} from '../StepPrepareCreatePullRequest';\nimport { StepPrepareSelectLocations } from '../StepPrepareSelectLocations';\nimport { StepReviewLocation } from '../StepReviewLocation';\nimport { StepperApis } from '../types';\nimport { ImportFlows, ImportState } from '../useImportState';\n\nexport type StepConfiguration = {\n  stepLabel: React.ReactElement;\n  content: React.ReactElement;\n};\n\n/**\n * Defines the details of the stepper.\n *\n * @public\n */\nexport interface StepperProvider {\n  analyze: (\n    s: Extract<ImportState, { activeState: 'analyze' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  prepare: (\n    s: Extract<ImportState, { activeState: 'prepare' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  review: (\n    s: Extract<ImportState, { activeState: 'review' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  finish: (\n    s: Extract<ImportState, { activeState: 'finish' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n}\n\n/**\n * The default stepper generation function.\n *\n * Override this function to customize the import flow. Each flow should at\n * least override the prepare operation.\n *\n * @param flow - the name of the active flow\n * @param defaults - the default steps\n * @public\n */\nexport function defaultGenerateStepper(\n  flow: ImportFlows,\n  defaults: StepperProvider,\n): StepperProvider {\n  switch (flow) {\n    // the prepare step is skipped but the label of the step is updated\n    case 'single-location':\n      return {\n        ...defaults,\n        prepare: () => ({\n          stepLabel: (\n            <StepLabel\n              optional={\n                <Typography variant=\"caption\">\n                  Discovered Locations: 1\n                </Typography>\n              }\n            >\n              Select Locations\n            </StepLabel>\n          ),\n          content: <></>,\n        }),\n      };\n\n    // let the user select one or more of the discovered locations in the prepare step\n    case 'multiple-locations':\n      return {\n        ...defaults,\n        prepare: (state, opts) => {\n          if (state.analyzeResult.type !== 'locations') {\n            return defaults.prepare(state, opts);\n          }\n\n          return {\n            stepLabel: (\n              <StepLabel\n                optional={\n                  <Typography variant=\"caption\">\n                    Discovered Locations: {state.analyzeResult.locations.length}\n                  </Typography>\n                }\n              >\n                Select Locations\n              </StepLabel>\n            ),\n            content: (\n              <StepPrepareSelectLocations\n                analyzeResult={state.analyzeResult}\n                prepareResult={state.prepareResult}\n                onPrepare={state.onPrepare}\n                onGoBack={state.onGoBack}\n              />\n            ),\n          };\n        },\n      };\n\n    case 'no-location':\n      return {\n        ...defaults,\n        prepare: (state, opts) => {\n          if (state.analyzeResult.type !== 'repository') {\n            return defaults.prepare(state, opts);\n          }\n\n          return {\n            stepLabel: <StepLabel>Create Pull Request</StepLabel>,\n            content: (\n              <StepPrepareCreatePullRequest\n                analyzeResult={state.analyzeResult}\n                onPrepare={state.onPrepare}\n                onGoBack={state.onGoBack}\n                renderFormFields={({\n                  values,\n                  setValue,\n                  formState,\n                  groupsLoading,\n                  groups,\n                  register,\n                }) => (\n                  <>\n                    <Box marginTop={2}>\n                      <Typography variant=\"h6\">Pull Request Details</Typography>\n                    </Box>\n\n                    <TextField\n                      {...asInputRef(\n                        register('title', {\n                          required: true,\n                        }),\n                      )}\n                      label=\"Pull Request Title\"\n                      placeholder=\"Add Backstage catalog entity descriptor files\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.title)}\n                      required\n                    />\n\n                    <TextField\n                      {...asInputRef(\n                        register('body', {\n                          required: true,\n                        }),\n                      )}\n                      label=\"Pull Request Body\"\n                      placeholder=\"A describing text with Markdown support\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.body)}\n                      multiline\n                      required\n                    />\n\n                    <Box marginTop={2}>\n                      <Typography variant=\"h6\">Entity Configuration</Typography>\n                    </Box>\n\n                    <TextField\n                      {...asInputRef(\n                        register('componentName', { required: true }),\n                      )}\n                      label=\"Name of the created component\"\n                      placeholder=\"my-component\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.componentName)}\n                      required\n                    />\n\n                    {!values.useCodeowners && (\n                      <AutocompleteTextField\n                        name=\"owner\"\n                        errors={formState.errors}\n                        options={groups || []}\n                        loading={groupsLoading}\n                        loadingText=\"Loading groups…\"\n                        helperText=\"Select an owner from the list or enter a reference to a Group or a User\"\n                        errorHelperText=\"required value\"\n                        textFieldProps={{\n                          label: 'Entity Owner',\n                          placeholder: 'my-group',\n                        }}\n                        rules={{ required: true }}\n                        required\n                      />\n                    )}\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          {...asInputRef(register('useCodeowners'))}\n                          onChange={(_, value) => {\n                            if (value) {\n                              setValue('owner', '');\n                            }\n                          }}\n                        />\n                      }\n                      label={\n                        <>\n                          Use <em>CODEOWNERS</em> file as Entity Owner\n                        </>\n                      }\n                    />\n                    <FormHelperText>\n                      WARNING: This may fail if no CODEOWNERS file is found at\n                      the target location.\n                    </FormHelperText>\n                  </>\n                )}\n              />\n            ),\n          };\n        },\n      };\n\n    default:\n      return defaults;\n  }\n}\n\nexport const defaultStepper: StepperProvider = {\n  analyze: (state, { apis }) => ({\n    stepLabel: <StepLabel>Select URL</StepLabel>,\n    content: (\n      <StepInitAnalyzeUrl\n        key=\"analyze\"\n        analysisUrl={state.analysisUrl}\n        onAnalysis={state.onAnalysis}\n        disablePullRequest={!apis.catalogImportApi.preparePullRequest}\n      />\n    ),\n  }),\n\n  prepare: state => ({\n    stepLabel: (\n      <StepLabel optional={<Typography variant=\"caption\">Optional</Typography>}>\n        Import Actions\n      </StepLabel>\n    ),\n    content: <BackButton onClick={state.onGoBack} />,\n  }),\n\n  review: state => ({\n    stepLabel: <StepLabel>Review</StepLabel>,\n    content: (\n      <StepReviewLocation\n        prepareResult={state.prepareResult}\n        onReview={state.onReview}\n        onGoBack={state.onGoBack}\n      />\n    ),\n  }),\n\n  finish: state => ({\n    stepLabel: <StepLabel>Finish</StepLabel>,\n    content: (\n      <StepFinishImportLocation\n        prepareResult={state.prepareResult}\n        onReset={state.onReset}\n      />\n    ),\n  }),\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { Step, StepContent, Stepper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useMemo } from 'react';\nimport { catalogImportApiRef } from '../../api';\nimport { ImportFlows, ImportState, useImportState } from '../useImportState';\nimport {\n  defaultGenerateStepper,\n  defaultStepper,\n  StepConfiguration,\n  StepperProvider,\n} from './defaults';\n\nconst useStyles = makeStyles(() => ({\n  stepperRoot: {\n    padding: 0,\n  },\n}));\n\n/**\n * Props for {@link ImportStepper}.\n *\n * @public\n */\nexport interface ImportStepperProps {\n  initialUrl?: string;\n  generateStepper?: (\n    flow: ImportFlows,\n    defaults: StepperProvider,\n  ) => StepperProvider;\n  variant?: InfoCardVariants;\n}\n\n/**\n * The stepper that holds the different import stages.\n *\n * @public\n */\nexport const ImportStepper = (props: ImportStepperProps) => {\n  const {\n    initialUrl,\n    generateStepper = defaultGenerateStepper,\n    variant,\n  } = props;\n\n  const catalogImportApi = useApi(catalogImportApiRef);\n  const classes = useStyles();\n  const state = useImportState({ initialUrl });\n\n  const states = useMemo<StepperProvider>(\n    () => generateStepper(state.activeFlow, defaultStepper),\n    [generateStepper, state.activeFlow],\n  );\n\n  const render = (step: StepConfiguration) => {\n    return (\n      <Step>\n        {step.stepLabel}\n        <StepContent>{step.content}</StepContent>\n      </Step>\n    );\n  };\n\n  return (\n    <InfoCard variant={variant}>\n      <Stepper\n        classes={{ root: classes.stepperRoot }}\n        activeStep={state.activeStepNumber}\n        orientation=\"vertical\"\n      >\n        {render(\n          states.analyze(\n            state as Extract<ImportState, { activeState: 'analyze' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.prepare(\n            state as Extract<ImportState, { activeState: 'prepare' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.review(\n            state as Extract<ImportState, { activeState: 'review' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.finish(\n            state as Extract<ImportState, { activeState: 'finish' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n      </Stepper>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  Page,\n  SupportButton,\n} from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Grid, useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { ImportInfoCard } from '../ImportInfoCard';\nimport { ImportStepper } from '../ImportStepper';\n\n/**\n * The default catalog import page.\n *\n * @public\n */\nexport const DefaultImportPage = () => {\n  const theme = useTheme();\n  const configApi = useApi(configApiRef);\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n\n  const contentItems = [\n    <Grid key={0} item xs={12} md={4} lg={6} xl={8}>\n      <ImportInfoCard />\n    </Grid>,\n\n    <Grid key={1} item xs={12} md={8} lg={6} xl={4}>\n      <ImportStepper />\n    </Grid>,\n  ];\n\n  return (\n    <Page themeId=\"home\">\n      <Header title=\"Register an existing component\" />\n      <Content>\n        <ContentHeader title={`Start tracking your component in ${appTitle}`}>\n          <SupportButton>\n            Start tracking your component in {appTitle} by adding it to the\n            software catalog.\n          </SupportButton>\n        </ContentHeader>\n\n        <Grid container spacing={2}>\n          {isMobile ? contentItems : contentItems.reverse()}\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}