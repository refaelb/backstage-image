{"version":3,"file":"plugin-014562a4.esm.js","sources":["../../src/api/CatalogImportApi.ts","../../src/api/GitHub.ts","../../src/components/helpers.ts","../../src/api/CatalogImportClient.ts","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { PartialEntity } from '../types';\n\n/**\n * Utility API reference for the {@link CatalogImportApi}.\n *\n * @public\n */\nexport const catalogImportApiRef = createApiRef<CatalogImportApi>({\n  id: 'plugin.catalog-import.service',\n});\n\n/**\n * Result of the analysis.\n *\n * @public\n */\nexport type AnalyzeResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        target: string;\n        exists?: boolean;\n        entities: CompoundEntityRef[];\n      }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      generatedEntities: PartialEntity[];\n    };\n\n/**\n * API for driving catalog imports.\n *\n * @public\n */\nexport interface CatalogImportApi {\n  analyzeUrl(url: string): Promise<AnalyzeResult>;\n\n  preparePullRequest?(): Promise<{\n    title: string;\n    body: string;\n  }>;\n\n  submitPullRequest(options: {\n    repositoryUrl: string;\n    fileContent: string;\n    title: string;\n    body: string;\n  }): Promise<{ link: string; location: string }>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\n\nexport const getGithubIntegrationConfig = (\n  scmIntegrationsApi: ScmIntegrationRegistry,\n  location: string,\n) => {\n  const integration = scmIntegrationsApi.github.byUrl(location);\n  if (!integration) {\n    return undefined;\n  }\n\n  const { name: repo, owner } = parseGitUrl(location);\n  return {\n    repo,\n    owner,\n    githubIntegrationConfig: integration.config,\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Config } from '@backstage/config';\nimport { UseFormRegisterReturn } from 'react-hook-form';\n\n/**\n * A helper that converts the result of a render('name', opts) to make it compatible with material-ui.\n *\n * See also https://github.com/react-hook-form/react-hook-form/issues/4629#issuecomment-815840872\n * TODO: remove when updating to material-ui v5 (https://github.com/mui-org/material-ui/pull/23174)\n *\n * @param renderResult - the result of a render('name', opts)\n */\nexport function asInputRef(renderResult: UseFormRegisterReturn) {\n  const { ref, ...rest } = renderResult;\n  return {\n    inputRef: ref,\n    ...rest,\n  };\n}\n\nexport function getCatalogFilename(config: Config): string {\n  return (\n    config.getOptionalString('catalog.import.entityFilename') ??\n    'catalog-info.yaml'\n  );\n}\n\nexport function getBranchName(config: Config): string {\n  return (\n    config.getOptionalString('catalog.import.pullRequestBranchName') ??\n    'backstage-integration'\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  ConfigApi,\n  DiscoveryApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport {\n  GithubIntegrationConfig,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport { Octokit } from '@octokit/rest';\nimport { Base64 } from 'js-base64';\nimport { AnalyzeResult, CatalogImportApi } from './CatalogImportApi';\nimport { getGithubIntegrationConfig } from './GitHub';\nimport { getBranchName, getCatalogFilename } from '../components/helpers';\nimport { AnalyzeLocationResponse } from '@backstage/plugin-catalog-common';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\n\n/**\n * The default implementation of the {@link CatalogImportApi}.\n *\n * @public\n */\nexport class CatalogImportClient implements CatalogImportApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly identityApi: IdentityApi;\n  private readonly scmAuthApi: ScmAuthApi;\n  private readonly scmIntegrationsApi: ScmIntegrationRegistry;\n  private readonly catalogApi: CatalogApi;\n  private readonly configApi: ConfigApi;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    scmAuthApi: ScmAuthApi;\n    identityApi: IdentityApi;\n    scmIntegrationsApi: ScmIntegrationRegistry;\n    catalogApi: CatalogApi;\n    configApi: ConfigApi;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.scmAuthApi = options.scmAuthApi;\n    this.identityApi = options.identityApi;\n    this.scmIntegrationsApi = options.scmIntegrationsApi;\n    this.catalogApi = options.catalogApi;\n    this.configApi = options.configApi;\n  }\n\n  async analyzeUrl(url: string): Promise<AnalyzeResult> {\n    if (\n      new URL(url).pathname.match(/\\.ya?ml$/) ||\n      new URL(url).searchParams.get('path')?.match(/.ya?ml$/)\n    ) {\n      const location = await this.catalogApi.addLocation({\n        type: 'url',\n        target: url,\n        dryRun: true,\n      });\n\n      return {\n        type: 'locations',\n        locations: [\n          {\n            exists: location.exists,\n            target: location.location.target,\n            entities: location.entities.map(e => ({\n              kind: e.kind,\n              namespace: e.metadata.namespace ?? 'default',\n              name: e.metadata.name,\n            })),\n          },\n        ],\n      };\n    }\n\n    const ghConfig = getGithubIntegrationConfig(this.scmIntegrationsApi, url);\n    if (!ghConfig) {\n      const other = this.scmIntegrationsApi.byUrl(url);\n      const catalogFilename = getCatalogFilename(this.configApi);\n\n      if (other) {\n        throw new Error(\n          `The ${other.title} integration only supports full URLs to ${catalogFilename} files. Did you try to pass in the URL of a directory instead?`,\n        );\n      }\n      throw new Error(\n        `This URL was not recognized as a valid GitHub URL because there was no configured integration that matched the given host name. You could try to paste the full URL to a ${catalogFilename} file instead.`,\n      );\n    }\n\n    const analyzation = await this.analyzeLocation({\n      repo: url,\n    });\n\n    if (analyzation.existingEntityFiles.length > 0) {\n      const locations = analyzation.existingEntityFiles.reduce<\n        Record<\n          string,\n          {\n            target: string;\n            exists?: boolean;\n            entities: CompoundEntityRef[];\n          }\n        >\n      >((state, curr) => {\n        state[curr.location.target] = {\n          target: curr.location.target,\n          exists: curr.isRegistered,\n          entities: [\n            ...(curr.location.target in state\n              ? state[curr.location.target].entities\n              : []),\n            {\n              name: curr.entity.metadata.name,\n              namespace: curr.entity.metadata.namespace ?? 'default',\n              kind: curr.entity.kind,\n            },\n          ],\n        };\n        return state;\n      }, {});\n      return {\n        type: 'locations',\n        locations: Object.values(locations),\n      };\n    }\n\n    return {\n      type: 'repository',\n      integrationType: 'github',\n      url: url,\n      generatedEntities: analyzation.generateEntities.map(x => x.entity),\n    };\n  }\n\n  async preparePullRequest(): Promise<{\n    title: string;\n    body: string;\n  }> {\n    const appTitle =\n      this.configApi.getOptionalString('app.title') ?? 'Backstage';\n    const appBaseUrl = this.configApi.getString('app.baseUrl');\n    const catalogFilename = getCatalogFilename(this.configApi);\n\n    return {\n      title: `Add ${catalogFilename} config file`,\n      body: `This pull request adds a **Backstage entity metadata file** \\\nto this repository so that the component can be added to the \\\n[${appTitle} software catalog](${appBaseUrl}).\\n\\nAfter this pull request is merged, \\\nthe component will become available.\\n\\nFor more information, read an \\\n[overview of the Backstage software catalog](https://backstage.io/docs/features/software-catalog/).`,\n    };\n  }\n\n  async submitPullRequest(options: {\n    repositoryUrl: string;\n    fileContent: string;\n    title: string;\n    body: string;\n  }): Promise<{ link: string; location: string }> {\n    const { repositoryUrl, fileContent, title, body } = options;\n\n    const ghConfig = getGithubIntegrationConfig(\n      this.scmIntegrationsApi,\n      repositoryUrl,\n    );\n\n    if (ghConfig) {\n      return await this.submitGitHubPrToRepo({\n        ...ghConfig,\n        repositoryUrl,\n        fileContent,\n        title,\n        body,\n      });\n    }\n\n    throw new Error('unimplemented!');\n  }\n\n  // TODO: this could be part of the catalog api\n  private async analyzeLocation(options: {\n    repo: string;\n  }): Promise<AnalyzeLocationResponse> {\n    const { token } = await this.identityApi.getCredentials();\n    const response = await fetch(\n      `${await this.discoveryApi.getBaseUrl('catalog')}/analyze-location`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { Authorization: `Bearer ${token}` }),\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          location: { type: 'url', target: options.repo },\n          ...(this.configApi.getOptionalString(\n            'catalog.import.entityFilename',\n          ) && {\n            catalogFilename: this.configApi.getOptionalString(\n              'catalog.import.entityFilename',\n            ),\n          }),\n        }),\n      },\n    ).catch(e => {\n      throw new Error(`Failed to generate entity definitions, ${e.message}`);\n    });\n    if (!response.ok) {\n      throw new Error(\n        `Failed to generate entity definitions. Received http response ${response.status}: ${response.statusText}`,\n      );\n    }\n\n    const payload = await response.json();\n    return payload;\n  }\n\n  // TODO: extract this function and implement for non-github\n  private async submitGitHubPrToRepo(options: {\n    owner: string;\n    repo: string;\n    title: string;\n    body: string;\n    fileContent: string;\n    repositoryUrl: string;\n    githubIntegrationConfig: GithubIntegrationConfig;\n  }): Promise<{ link: string; location: string }> {\n    const {\n      owner,\n      repo,\n      title,\n      body,\n      fileContent,\n      repositoryUrl,\n      githubIntegrationConfig,\n    } = options;\n\n    const { token } = await this.scmAuthApi.getCredentials({\n      url: repositoryUrl,\n      additionalScope: {\n        repoWrite: true,\n      },\n    });\n\n    const octo = new Octokit({\n      auth: token,\n      baseUrl: githubIntegrationConfig.apiBaseUrl,\n    });\n\n    const branchName = getBranchName(this.configApi);\n    const fileName = getCatalogFilename(this.configApi);\n\n    const repoData = await octo.repos\n      .get({\n        owner,\n        repo,\n      })\n      .catch(e => {\n        throw new Error(formatHttpErrorMessage(\"Couldn't fetch repo data\", e));\n      });\n\n    const parentRef = await octo.git\n      .getRef({\n        owner,\n        repo,\n        ref: `heads/${repoData.data.default_branch}`,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\"Couldn't fetch default branch data\", e),\n        );\n      });\n\n    await octo.git\n      .createRef({\n        owner,\n        repo,\n        ref: `refs/heads/${branchName}`,\n        sha: parentRef.data.object.sha,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a new branch with name '${branchName}'`,\n            e,\n          ),\n        );\n      });\n\n    await octo.repos\n      .createOrUpdateFileContents({\n        owner,\n        repo,\n        path: fileName,\n        message: title,\n        content: Base64.encode(fileContent),\n        branch: branchName,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a commit with ${fileName} file added`,\n            e,\n          ),\n        );\n      });\n\n    const pullRequestResponse = await octo.pulls\n      .create({\n        owner,\n        repo,\n        title,\n        head: branchName,\n        body,\n        base: repoData.data.default_branch,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a pull request for ${branchName} branch`,\n            e,\n          ),\n        );\n      });\n\n    return {\n      link: pullRequestResponse.data.html_url,\n      location: `https://${githubIntegrationConfig.host}/${owner}/${repo}/blob/${repoData.data.default_branch}/${fileName}`,\n    };\n  }\n}\n\nfunction formatHttpErrorMessage(\n  message: string,\n  error: { status: number; message: string },\n) {\n  return `${message}, received http response status code ${error.status}: ${error.message}`;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  createRouteRef,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  scmAuthApiRef,\n  scmIntegrationsApiRef,\n} from '@backstage/integration-react';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { catalogImportApiRef, CatalogImportClient } from './api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'catalog-import',\n});\n\n/**\n * A plugin that helps the user in importing projects and YAML files into the\n * catalog.\n *\n * @public\n */\nexport const catalogImportPlugin = createPlugin({\n  id: 'catalog-import',\n  apis: [\n    createApiFactory({\n      api: catalogImportApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        scmAuthApi: scmAuthApiRef,\n        identityApi: identityApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n        catalogApi: catalogApiRef,\n        configApi: configApiRef,\n      },\n      factory: ({\n        discoveryApi,\n        scmAuthApi,\n        identityApi,\n        scmIntegrationsApi,\n        catalogApi,\n        configApi,\n      }) =>\n        new CatalogImportClient({\n          discoveryApi,\n          scmAuthApi,\n          scmIntegrationsApi,\n          identityApi,\n          catalogApi,\n          configApi,\n        }),\n    }),\n  ],\n  routes: {\n    importPage: rootRouteRef,\n  },\n});\n\n/**\n * The page for importing projects and YAML files into the catalog.\n *\n * @public\n */\nexport const CatalogImportPage = catalogImportPlugin.provide(\n  createRoutableExtension({\n    name: 'CatalogImportPage',\n    component: () => import('./components/ImportPage').then(m => m.ImportPage),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":["_a"],"mappings":"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"}