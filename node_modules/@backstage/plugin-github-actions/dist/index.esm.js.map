{"version":3,"file":"index.esm.js","sources":["../src/api/GithubActionsApi.ts","../src/api/GithubActionsClient.ts","../src/api/types.ts","../src/routes.ts","../src/plugin.ts","../src/components/getProjectNameFromEntity.ts","../src/components/WorkflowRunStatus/WorkflowRunStatus.tsx","../src/components/WorkflowRunDetails/useWorkflowRunJobs.ts","../src/components/WorkflowRunDetails/useWorkflowRunsDetails.ts","../src/components/WorkflowRunLogs/useDownloadWorkflowRunLogs.ts","../src/components/getHostnameFromEntity.ts","../src/components/WorkflowRunLogs/WorkflowRunLogs.tsx","../src/components/WorkflowRunDetails/WorkflowRunDetails.tsx","../src/components/useWorkflowRuns.ts","../src/components/WorkflowRunsCard/WorkflowRunsCard.tsx","../src/components/WorkflowRunsTable/WorkflowRunsTable.tsx","../src/components/Router.tsx","../src/components/Cards/Cards.tsx","../src/components/Cards/RecentWorkflowRunsCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestEndpointMethodTypes } from '@octokit/rest';\nimport { createApiRef } from '@backstage/core-plugin-api';\n\n/** @public */\nexport const githubActionsApiRef = createApiRef<GithubActionsApi>({\n  id: 'plugin.githubactions.service',\n});\n\n/**\n * A client for fetching information about GitHub actions.\n *\n * @public\n */\nexport type GithubActionsApi = {\n  listWorkflowRuns: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  >;\n\n  getWorkflow: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  >;\n\n  getWorkflowRun: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  >;\n\n  reRunWorkflow: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<any>;\n\n  listJobsForWorkflowRun: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n    pageSize?: number;\n    page?: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['listJobsForWorkflowRun']['response']['data']\n  >;\n\n  downloadJobLogsForWorkflowRun: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  >;\n\n  listBranches: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    page: number;\n  }) => Promise<\n    RestEndpointMethodTypes['repos']['listBranches']['response']['data']\n  >;\n\n  getDefaultBranch: (options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n  }) => Promise<\n    RestEndpointMethodTypes['repos']['get']['response']['data']['default_branch']\n  >;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readGithubIntegrationConfigs } from '@backstage/integration';\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport { GithubActionsApi } from './GithubActionsApi';\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\nimport { ConfigApi } from '@backstage/core-plugin-api';\n\n/**\n * A client for fetching information about GitHub actions.\n *\n * @public\n */\nexport class GithubActionsClient implements GithubActionsApi {\n  private readonly configApi: ConfigApi;\n  private readonly scmAuthApi: ScmAuthApi;\n\n  constructor(options: { configApi: ConfigApi; scmAuthApi: ScmAuthApi }) {\n    this.configApi = options.configApi;\n    this.scmAuthApi = options.scmAuthApi;\n  }\n\n  private async getOctokit(hostname: string = 'github.com'): Promise<Octokit> {\n    const { token } = await this.scmAuthApi.getCredentials({\n      url: `https://${hostname}/`,\n      additionalScope: {\n        customScopes: {\n          github: ['repo'],\n        },\n      },\n    });\n    const configs = readGithubIntegrationConfigs(\n      this.configApi.getOptionalConfigArray('integrations.github') ?? [],\n    );\n    const githubIntegrationConfig = configs.find(v => v.host === hostname);\n    const baseUrl = githubIntegrationConfig?.apiBaseUrl;\n    return new Octokit({ auth: token, baseUrl });\n  }\n\n  async reRunWorkflow(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<any> {\n    const { hostname, owner, repo, runId } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    return octokit.actions.reRunWorkflow({\n      owner,\n      repo,\n      run_id: runId,\n    });\n  }\n\n  async listWorkflowRuns(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  > {\n    const { hostname, owner, repo, pageSize = 100, page = 0, branch } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    const workflowRuns = await octokit.actions.listWorkflowRunsForRepo({\n      owner,\n      repo,\n      per_page: pageSize,\n      page,\n      ...(branch ? { branch } : {}),\n    });\n\n    return workflowRuns.data;\n  }\n\n  async getWorkflow(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  > {\n    const { hostname, owner, repo, id } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.getWorkflow({\n      owner,\n      repo,\n      workflow_id: id,\n    });\n\n    return workflow.data;\n  }\n\n  async getWorkflowRun(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  > {\n    const { hostname, owner, repo, id } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    const run = await octokit.actions.getWorkflowRun({\n      owner,\n      repo,\n      run_id: id,\n    });\n\n    return run.data;\n  }\n\n  async listJobsForWorkflowRun(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n    pageSize?: number;\n    page?: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['listJobsForWorkflowRun']['response']['data']\n  > {\n    const { hostname, owner, repo, id, pageSize = 100, page = 0 } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    const jobs = await octokit.actions.listJobsForWorkflowRun({\n      owner,\n      repo,\n      run_id: id,\n      per_page: pageSize,\n      page,\n    });\n\n    return jobs.data;\n  }\n\n  async downloadJobLogsForWorkflowRun(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  > {\n    const { hostname, owner, repo, runId } = options;\n\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.downloadJobLogsForWorkflowRun({\n      owner,\n      repo,\n      job_id: runId,\n    });\n\n    return workflow.data;\n  }\n\n  async listBranches(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    page?: number;\n  }): Promise<\n    RestEndpointMethodTypes['repos']['listBranches']['response']['data']\n  > {\n    const { hostname, owner, repo, page = 0 } = options;\n    const octokit = await this.getOctokit(hostname);\n    const response = await octokit.rest.repos.listBranches({\n      owner,\n      repo,\n      per_page: 100,\n      page,\n    });\n\n    return response.data;\n  }\n\n  async getDefaultBranch(options: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n  }): Promise<\n    RestEndpointMethodTypes['repos']['get']['response']['data']['default_branch']\n  > {\n    const { hostname, owner, repo } = options;\n    const octokit = await this.getOctokit(hostname);\n    const response = await octokit.rest.repos.get({\n      owner,\n      repo,\n    });\n\n    return response.data.default_branch;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @public */\nexport type Step = {\n  name: string;\n  status: string;\n  conclusion?: string;\n  number: number; // starts from 1\n  started_at?: string;\n  completed_at?: string;\n};\n\n/** @public */\nexport type Job = {\n  html_url?: string;\n  status: string;\n  conclusion?: string;\n  started_at: string;\n  completed_at?: string;\n  id: number;\n  name: string;\n  steps?: Step[];\n};\n\n/** @public */\nexport type Jobs = {\n  total_count: number;\n  jobs: Job[];\n};\n\n/** @public */\nexport enum BuildStatus {\n  'success',\n  'failure',\n  'pending',\n  'running',\n}\n\n/** @public */\nexport type Branch = {\n  name: string;\n};\n\n/** @public */\nexport type Branches = {\n  default_branch: string;\n  branches: Branch[];\n};\n\n/** @public */\nexport interface RouterProps {\n  view?: 'cards' | 'table';\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef, createSubRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'github-actions',\n});\n\nexport const buildRouteRef = createSubRouteRef({\n  id: 'github-actions/build',\n  path: '/:id',\n  parent: rootRouteRef,\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { githubActionsApiRef, GithubActionsClient } from './api';\nimport { rootRouteRef } from './routes';\nimport {\n  configApiRef,\n  createPlugin,\n  createApiFactory,\n  createRoutableExtension,\n  createComponentExtension,\n} from '@backstage/core-plugin-api';\nimport { scmAuthApiRef } from '@backstage/integration-react';\n\n/** @public */\nexport const githubActionsPlugin = createPlugin({\n  id: 'github-actions',\n  apis: [\n    createApiFactory({\n      api: githubActionsApiRef,\n      deps: { configApi: configApiRef, scmAuthApi: scmAuthApiRef },\n      factory: ({ configApi, scmAuthApi }) =>\n        new GithubActionsClient({ configApi, scmAuthApi }),\n    }),\n  ],\n  routes: {\n    entityContent: rootRouteRef,\n  },\n});\n\n/** @public */\nexport const EntityGithubActionsContent = githubActionsPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityGithubActionsContent',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/** @public */\nexport const EntityLatestGithubActionRunCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityLatestGithubActionRunCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.LatestWorkflowRunCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityLatestGithubActionsForBranchCard =\n  githubActionsPlugin.provide(\n    createComponentExtension({\n      name: 'EntityLatestGithubActionsForBranchCard',\n      component: {\n        lazy: () =>\n          import('./components/Cards').then(\n            m => m.LatestWorkflowsForBranchCard,\n          ),\n      },\n    }),\n  );\n\n/** @public */\nexport const EntityRecentGithubActionsRunsCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityRecentGithubActionsRunsCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.RecentWorkflowRunsCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\n\n/** @public */\nexport const GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\n\nexport const getProjectNameFromEntity = (entity: Entity) =>\n  entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  StatusPending,\n  StatusRunning,\n  StatusOK,\n  StatusWarning,\n  StatusAborted,\n  StatusError,\n} from '@backstage/core-components';\n\nexport const WorkflowRunStatus = (props: {\n  status?: string;\n  conclusion?: string;\n}) => {\n  return (\n    <>\n      <WorkflowIcon {...props} />\n      {getStatusDescription(props)}\n    </>\n  );\n};\n\nexport function WorkflowIcon({\n  status,\n  conclusion,\n}: {\n  status?: string;\n  conclusion?: string;\n}) {\n  if (status === undefined) return null;\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n      return <StatusPending />;\n\n    case 'in_progress':\n      return <StatusRunning />;\n    case 'completed':\n      switch (conclusion?.toLocaleLowerCase('en-US')) {\n        case 'skipped' || 'canceled':\n          return <StatusAborted />;\n\n        case 'timed_out':\n          return <StatusWarning />;\n        case 'failure':\n          return <StatusError />;\n        default:\n          return <StatusOK />;\n      }\n    default:\n      return <StatusPending />;\n  }\n}\n\nexport function getStatusDescription({\n  status,\n  conclusion,\n}: {\n  status?: string;\n  conclusion?: string;\n}) {\n  if (status === undefined) return '';\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n      return 'Queued';\n    case 'in_progress':\n      return 'In progress';\n    case 'completed':\n      switch (conclusion?.toLocaleLowerCase('en-US')) {\n        case 'skipped' || 'canceled':\n          return 'Aborted';\n        case 'timed_out':\n          return 'Timed out';\n        case 'failure':\n          return 'Error';\n        default:\n          return 'Completed';\n      }\n    default:\n      return 'Pending';\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useAsync, { AsyncState } from 'react-use/lib/useAsync';\nimport { githubActionsApiRef, Job, Jobs, Step } from '../../api';\nimport { buildRouteRef } from '../../routes';\nimport { useApi, useRouteRefParams } from '@backstage/core-plugin-api';\n\nexport const useWorkflowRunJobs = ({\n  hostname,\n  owner,\n  repo,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n}): AsyncState<Jobs> => {\n  const api = useApi(githubActionsApiRef);\n  const { id } = useRouteRefParams(buildRouteRef);\n\n  return useAsync(async () => {\n    if (!repo || !owner) {\n      throw new Error('No repo/owner provided');\n    }\n\n    const jobs = await api.listJobsForWorkflowRun({\n      hostname,\n      owner,\n      repo,\n      id: parseInt(id, 10),\n    });\n\n    return {\n      total_count: jobs.total_count,\n      jobs: jobs.jobs.map<Job>(job => ({\n        html_url: job.html_url ?? undefined,\n        status: job.status,\n        conclusion: job.conclusion ?? undefined,\n        started_at: job.started_at,\n        completed_at: job.completed_at ?? undefined,\n        id: job.id,\n        name: job.name,\n        steps: job.steps?.map<Step>(step => ({\n          name: step.name,\n          status: step.status,\n          conclusion: step.conclusion ?? undefined,\n          number: step.number,\n          started_at: step.started_at ?? undefined,\n          completed_at: step.completed_at ?? undefined,\n        })),\n      })),\n    };\n  }, [repo, owner, id]);\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useAsync from 'react-use/lib/useAsync';\nimport { githubActionsApiRef } from '../../api';\nimport { buildRouteRef } from '../../routes';\nimport { useApi, useRouteRefParams } from '@backstage/core-plugin-api';\n\nexport const useWorkflowRunsDetails = ({\n  hostname,\n  owner,\n  repo,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const { id } = useRouteRefParams(buildRouteRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.getWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          id: parseInt(id, 10),\n        })\n      : Promise.reject(new Error('No repo/owner provided'));\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport useAsync from 'react-use/lib/useAsync';\nimport { githubActionsApiRef } from '../../api';\nimport { useApi } from '@backstage/core-plugin-api';\n\nexport const useDownloadWorkflowRunLogs = ({\n  hostname,\n  owner,\n  repo,\n  id,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  id: number;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.downloadJobLogsForWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          runId: id,\n        })\n      : Promise.reject('No repo/owner provided');\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_LOCATION,\n  ANNOTATION_SOURCE_LOCATION,\n  Entity,\n} from '@backstage/catalog-model';\nimport gitUrlParse from 'git-url-parse';\n\nexport const getHostnameFromEntity = (entity: Entity) => {\n  const location =\n    entity?.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION] ??\n    entity?.metadata.annotations?.[ANNOTATION_LOCATION];\n\n  return location?.startsWith('url:')\n    ? gitUrlParse(location.slice(4)).resource\n    : undefined;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { LogViewer } from '@backstage/core-components';\nimport {\n  Accordion,\n  AccordionSummary,\n  CircularProgress,\n  Fade,\n  makeStyles,\n  Modal,\n  Tooltip,\n  Typography,\n  Zoom,\n} from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React from 'react';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { useDownloadWorkflowRunLogs } from './useDownloadWorkflowRunLogs';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '85%',\n    height: '85%',\n    justifyContent: 'center',\n    margin: 'auto',\n  },\n  normalLogContainer: {\n    height: '75vh',\n    width: '100%',\n  },\n  modalLogContainer: {\n    height: '100%',\n    width: '100%',\n  },\n  log: {\n    background: theme.palette.background.default,\n  },\n}));\n\n/**\n * A component for Run Logs visualization.\n */\nexport const WorkflowRunLogs = ({\n  entity,\n  runId,\n  inProgress,\n}: {\n  entity: Entity;\n  runId: number;\n  inProgress: boolean;\n}) => {\n  const classes = useStyles();\n  const projectName = getProjectNameFromEntity(entity);\n\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (projectName && projectName.split('/')) || [];\n  const jobLogs = useDownloadWorkflowRunLogs({\n    hostname,\n    owner,\n    repo,\n    id: runId,\n  });\n  const logText = jobLogs.value ? String(jobLogs.value) : undefined;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} disabled={inProgress}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {jobLogs.loading ? <CircularProgress /> : 'Job Log'}\n        </Typography>\n        <Tooltip title=\"Open Log\" TransitionComponent={Zoom} arrow>\n          <DescriptionIcon\n            onClick={event => {\n              event.stopPropagation();\n              handleOpen();\n            }}\n            style={{ marginLeft: 'auto' }}\n          />\n        </Tooltip>\n        <Modal\n          className={classes.modal}\n          onClick={event => event.stopPropagation()}\n          open={open}\n          onClose={handleClose}\n        >\n          <Fade in={open}>\n            <div className={classes.modalLogContainer}>\n              <LogViewer\n                text={logText ?? 'No Values Found'}\n                classes={{ root: classes.log }}\n              />\n            </div>\n          </Fade>\n        </Modal>\n      </AccordionSummary>\n      {logText && (\n        <div className={classes.normalLogContainer}>\n          <LogViewer text={logText} classes={{ root: classes.log }} />\n        </div>\n      )}\n    </Accordion>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  CircularProgress,\n  LinearProgress,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { Job, Jobs, Step } from '../../api';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { useWorkflowRunJobs } from './useWorkflowRunJobs';\nimport { useWorkflowRunsDetails } from './useWorkflowRunsDetails';\nimport { WorkflowRunLogs } from '../WorkflowRunLogs';\nimport { Breadcrumbs, Link } from '@backstage/core-components';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    maxWidth: 720,\n    margin: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n  accordionDetails: {\n    padding: 0,\n  },\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n}));\n\nconst getElapsedTime = (start: string | undefined, end: string | undefined) => {\n  if (!start || !end) {\n    return '';\n  }\n  const startDate = DateTime.fromISO(start);\n  const endDate = end ? DateTime.fromISO(end) : DateTime.now();\n  const diff = endDate.diff(startDate);\n  const timeElapsed = diff.toFormat(`m 'minutes' s 'seconds'`);\n  return timeElapsed;\n};\n\nconst StepView = ({ step }: { step: Step }) => {\n  return (\n    <TableRow>\n      <TableCell>\n        <ListItemText\n          primary={step.name}\n          secondary={getElapsedTime(step.started_at, step.completed_at)}\n        />\n      </TableCell>\n      <TableCell>\n        <WorkflowRunStatus\n          status={step.status.toLocaleUpperCase('en-US')}\n          conclusion={step.conclusion?.toLocaleUpperCase('en-US')}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst JobListItem = ({\n  job,\n  className,\n  entity,\n}: {\n  job: Job;\n  className: string;\n  entity: Entity;\n}) => {\n  const classes = useStyles();\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} className={className}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {job.name} ({getElapsedTime(job.started_at, job.completed_at)})\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.accordionDetails}>\n        <TableContainer>\n          <Table>\n            {job.steps?.map(step => (\n              <StepView key={step.number} step={step} />\n            ))}\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n      {job.status === 'queued' || job.status === 'in_progress' ? (\n        <WorkflowRunLogs runId={job.id} inProgress entity={entity} />\n      ) : (\n        <WorkflowRunLogs runId={job.id} inProgress={false} entity={entity} />\n      )}\n    </Accordion>\n  );\n};\n\nconst JobsList = ({ jobs, entity }: { jobs?: Jobs; entity: Entity }) => {\n  const classes = useStyles();\n  return (\n    <Box>\n      {jobs &&\n        jobs.total_count > 0 &&\n        jobs.jobs.map(job => (\n          <JobListItem\n            key={job.id}\n            job={job}\n            className={\n              job.status !== 'success' ? classes.failed : classes.success\n            }\n            entity={entity}\n          />\n        ))}\n    </Box>\n  );\n};\n\nexport const WorkflowRunDetails = ({ entity }: { entity: Entity }) => {\n  const projectName = getProjectNameFromEntity(entity);\n\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (projectName && projectName.split('/')) || [];\n  const details = useWorkflowRunsDetails({ hostname, owner, repo });\n  const jobs = useWorkflowRunJobs({ hostname, owner, repo });\n\n  const classes = useStyles();\n\n  if (details.error && details.error.message) {\n    return (\n      <Typography variant=\"h6\" color=\"error\">\n        Failed to load build, {details.error.message}\n      </Typography>\n    );\n  } else if (details.loading) {\n    return <LinearProgress />;\n  }\n  return (\n    <div className={classes.root}>\n      <Box mb={3}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link to=\"..\">Workflow runs</Link>\n          <Typography>Workflow run details</Typography>\n        </Breadcrumbs>\n      </Box>\n      <TableContainer component={Paper} className={classes.table}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Branch</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_branch}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Message</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.message}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Commit ID</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.id}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Workflow</Typography>\n              </TableCell>\n              <TableCell>{details.value?.name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Status</Typography>\n              </TableCell>\n              <TableCell>\n                <WorkflowRunStatus\n                  status={details.value?.status || undefined}\n                  conclusion={details.value?.conclusion || undefined}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Author</Typography>\n              </TableCell>\n              <TableCell>{`${details.value?.head_commit?.author?.name} (${details.value?.head_commit?.author?.email})`}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Links</Typography>\n              </TableCell>\n              <TableCell>\n                {details.value?.html_url && (\n                  <Link to={details.value.html_url}>\n                    Workflow runs on GitHub{' '}\n                    <ExternalLinkIcon className={classes.externalLinkIcon} />\n                  </Link>\n                )}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <Typography noWrap>Jobs</Typography>\n                {jobs.loading ? (\n                  <CircularProgress />\n                ) : (\n                  <JobsList jobs={jobs.value} entity={entity} />\n                )}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState } from 'react';\nimport useAsyncRetry from 'react-use/lib/useAsyncRetry';\nimport { githubActionsApiRef } from '../api/GithubActionsApi';\nimport { useApi, errorApiRef } from '@backstage/core-plugin-api';\nimport { Branch } from '../api';\n\nexport type WorkflowRun = {\n  workflowName?: string;\n  id: string;\n  message?: string;\n  url?: string;\n  githubUrl?: string;\n  source: {\n    branchName?: string;\n    commit: {\n      hash?: string;\n      url?: string;\n    };\n  };\n  status?: string;\n  conclusion?: string;\n  onReRunClick: () => void;\n};\n\nexport function useWorkflowRuns({\n  hostname,\n  owner,\n  repo,\n  branch,\n  initialPageSize = 6,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  branch?: string | undefined;\n  initialPageSize?: number;\n}) {\n  const api = useApi(githubActionsApiRef);\n\n  const errorApi = useApi(errorApiRef);\n\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [branches, setBranches] = useState<Branch[]>([]);\n  const [defaultBranch, setDefaultBranch] = useState<string>('');\n\n  const {\n    loading,\n    value: runs,\n    retry,\n    error,\n  } = useAsyncRetry<WorkflowRun[]>(async () => {\n    const fetchedDefaultBranch = await api.getDefaultBranch({\n      hostname,\n      owner,\n      repo,\n    });\n\n    setDefaultBranch(fetchedDefaultBranch);\n    let selectedBranch = branch;\n    if (branch === 'default') {\n      selectedBranch = fetchedDefaultBranch;\n    }\n\n    const fetchBranches = async () => {\n      let next = true;\n      let iteratePage = 0;\n      const branchSet: Branch[] = [];\n\n      while (next) {\n        const branchesData = await api.listBranches({\n          hostname,\n          owner,\n          repo,\n          page: iteratePage,\n        });\n        if (branchesData.length === 0) {\n          next = false;\n        }\n        iteratePage++;\n        branchSet.push(...branchesData);\n      }\n\n      return branchSet;\n    };\n\n    const branchSet = await fetchBranches();\n    setBranches(branchSet);\n\n    // GitHub API pagination count starts from 1\n    const workflowRunsData = await api.listWorkflowRuns({\n      hostname,\n      owner,\n      repo,\n      pageSize,\n      page: page + 1,\n      branch: selectedBranch,\n    });\n    setTotal(workflowRunsData.total_count);\n    // Transformation here\n    return workflowRunsData.workflow_runs.map(run => ({\n      workflowName: run.name ?? undefined,\n      message: run.head_commit?.message,\n      id: `${run.id}`,\n      onReRunClick: async () => {\n        try {\n          await api.reRunWorkflow({\n            hostname,\n            owner,\n            repo,\n            runId: run.id,\n          });\n        } catch (e) {\n          errorApi.post(\n            new Error(`Failed to rerun the workflow: ${(e as Error).message}`),\n          );\n        }\n      },\n      source: {\n        branchName: run.head_branch ?? undefined,\n        commit: {\n          hash: run.head_commit?.id,\n          url: run.head_repository?.branches_url?.replace(\n            '{/branch}',\n            run.head_branch ?? '',\n          ),\n        },\n      },\n      status: run.status ?? undefined,\n      conclusion: run.conclusion ?? undefined,\n      url: run.url,\n      githubUrl: run.html_url,\n    }));\n  }, [page, pageSize, repo, owner]);\n\n  return [\n    {\n      page,\n      pageSize,\n      loading,\n      runs,\n      branches,\n      defaultBranch,\n      projectName: `${owner}/${repo}`,\n      total,\n      error,\n    },\n    {\n      runs,\n      setPage,\n      setPageSize,\n      retry,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport {\n  Typography,\n  Box,\n  IconButton,\n  Tooltip,\n  Button,\n  Chip,\n  ButtonGroup,\n  Grid,\n  makeStyles,\n  createStyles,\n  Theme,\n  TablePagination,\n  Select,\n  MenuItem,\n  TextField,\n  CircularProgress,\n} from '@material-ui/core';\nimport {\n  EmptyState,\n  Link,\n  MarkdownContent,\n  InfoCard,\n} from '@backstage/core-components';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { buildRouteRef } from '../../routes';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\n\nimport { Alert, Color } from '@material-ui/lab';\nimport { Entity } from '@backstage/catalog-model';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      overflow: 'visible',\n      position: 'relative',\n      margin: theme.spacing(4, 1, 1),\n      flex: '1',\n      minWidth: '0px',\n    },\n    externalLinkIcon: {\n      fontSize: 'inherit',\n      verticalAlign: 'middle',\n    },\n    bottomline: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginTop: '-5px',\n    },\n    pagination: {\n      width: '100%',\n    },\n  }),\n);\n\ntype WorkflowRunsCardViewProps = {\n  runs?: WorkflowRun[];\n  searchTerm: string;\n  loading: boolean;\n  onChangePageSize: (pageSize: number) => void;\n  onChangePage: (page: number) => void;\n  page: number;\n  total: number;\n  pageSize: number;\n  projectName: string;\n};\n\nconst statusColors: Record<string, string> = {\n  skipped: 'warning',\n  canceled: 'info',\n  timed_out: 'error',\n  failure: 'error',\n  success: 'success',\n};\n\nconst matchesSearchTerm = (run: WorkflowRun, searchTerm: string) => {\n  const lowerCaseSearchTerm = searchTerm.toLocaleLowerCase();\n  return (\n    run.workflowName?.toLocaleLowerCase().includes(lowerCaseSearchTerm) ||\n    run.source.branchName?.toLocaleLowerCase().includes(lowerCaseSearchTerm) ||\n    run.status?.toLocaleLowerCase().includes(lowerCaseSearchTerm) ||\n    run.id?.toLocaleLowerCase().includes(lowerCaseSearchTerm)\n  );\n};\n\nexport const WorkflowRunsCardView = ({\n  runs,\n  searchTerm,\n  loading,\n  onChangePageSize,\n  onChangePage,\n  page,\n  total,\n  pageSize,\n}: WorkflowRunsCardViewProps) => {\n  const classes = useStyles();\n  const routeLink = useRouteRef(buildRouteRef);\n\n  const filteredRuns = runs?.filter(run => matchesSearchTerm(run, searchTerm));\n\n  return (\n    <Grid container spacing={3}>\n      {filteredRuns && runs?.length !== 0 ? (\n        filteredRuns.map(run => (\n          <Grid key={run.id} item container xs={12} sm={4} md={4} xl={4}>\n            <Box className={classes.card}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                m={3}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Box pt={2} sx={{ width: '100%' }} textAlign=\"center\">\n                  <Tooltip\n                    title={run.status ?? 'No Status'}\n                    placement=\"top-start\"\n                  >\n                    <Alert\n                      variant=\"outlined\"\n                      severity={\n                        statusColors[\n                          run.conclusion as keyof typeof statusColors\n                        ] as Color\n                      }\n                      style={{ alignItems: 'center' }}\n                    >\n                      <Typography variant=\"h6\">\n                        <Link to={routeLink({ id: run.id })}>\n                          <Typography color=\"primary\" variant=\"h6\">\n                            {run.workflowName}\n                          </Typography>\n                        </Link>\n                      </Typography>\n                    </Alert>\n                  </Tooltip>\n                  <Tooltip title={run.message ?? 'No run message'}>\n                    <Typography\n                      variant=\"body2\"\n                      component=\"span\"\n                      style={{ fontSize: 'smaller' }}\n                    >\n                      <MarkdownContent\n                        content={`Commit ID : ${run.source.commit.hash!}`}\n                      />\n                    </Typography>\n                  </Tooltip>\n\n                  {run.source.branchName && (\n                    <MarkdownContent\n                      content={`Branch : ${run.source.branchName}`}\n                    />\n                  )}\n                  <Chip\n                    key={run.id}\n                    size=\"small\"\n                    label={`Workflow ID : ${run.id}`}\n                  />\n                  <Chip\n                    size=\"small\"\n                    label={\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <WorkflowRunStatus\n                          status={run.status}\n                          conclusion={run.conclusion}\n                        />\n                      </Box>\n                    }\n                  />\n                  <div className={classes.bottomline}>\n                    {run.githubUrl && (\n                      <Link to={run.githubUrl}>\n                        Workflow runs on GitHub{' '}\n                        <ExternalLinkIcon\n                          className={classes.externalLinkIcon}\n                        />\n                      </Link>\n                    )}\n                    <ButtonGroup>\n                      <Tooltip title=\"Rerun workflow\">\n                        <IconButton\n                          onClick={run.onReRunClick}\n                          style={{ fontSize: '12px' }}\n                        >\n                          <RetryIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </ButtonGroup>\n                  </div>\n                </Box>\n              </Box>\n            </Box>\n          </Grid>\n        ))\n      ) : (\n        <Box p={2}>\n          {loading ? <CircularProgress /> : 'No matching runs found.'}\n        </Box>\n      )}\n      <div className={classes.pagination}>\n        <TablePagination\n          component=\"div\"\n          count={total}\n          page={page}\n          rowsPerPage={pageSize}\n          onPageChange={(_, newPage) => onChangePage(newPage)}\n          onRowsPerPageChange={event =>\n            onChangePageSize(parseInt(event.target.value, 6))\n          }\n          labelRowsPerPage=\"Workflows per page\"\n          rowsPerPageOptions={[6, 12, 18, { label: 'All', value: -1 }]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\ntype WorkflowRunsCardProps = {\n  entity: Entity;\n};\n\nconst WorkflowRunsCardSearch = ({\n  searchTerm,\n  handleSearch,\n  retry,\n}: {\n  searchTerm: string;\n  handleSearch: (event: ChangeEvent<HTMLInputElement>) => void;\n  retry: () => void;\n}) => {\n  return (\n    <>\n      <Box flexGrow={1} />\n      <TextField\n        type=\"search\"\n        label=\"Search\"\n        value={searchTerm}\n        onChange={handleSearch}\n        data-testid=\"search-control\"\n        style={{ marginRight: '20px' }}\n      />\n      <ButtonGroup>\n        <Tooltip title=\"Reload workflow runs\">\n          <IconButton onClick={retry}>\n            <SyncIcon />\n          </IconButton>\n        </Tooltip>\n      </ButtonGroup>\n    </>\n  );\n};\n\nexport const WorkflowRunsCard = ({ entity }: WorkflowRunsCardProps) => {\n  const projectName = getProjectNameFromEntity(entity);\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (projectName ?? '/').split('/');\n  const [branch, setBranch] = useState<string | undefined>('default');\n  const [runs, setRuns] = useState<WorkflowRun[] | undefined>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const [\n    { runs: runsData, branches, defaultBranch, ...cardProps },\n    { retry, setPage, setPageSize },\n  ] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch: branch === 'all' ? undefined : branch,\n  });\n\n  const githubHost = hostname || 'github.com';\n  const hasNoRuns = !cardProps.loading && !runsData;\n\n  const handleMenuChange = (\n    event: ChangeEvent<{ name?: string; value: unknown }>,\n  ) => {\n    const selectedValue = event.target.value as string;\n    setBranch(selectedValue);\n    setPage(0);\n    retry();\n  };\n\n  useEffect(() => {\n    setRuns(runsData);\n  }, [runsData, branch]);\n\n  useEffect(() => {\n    setBranch(defaultBranch);\n  }, [defaultBranch]);\n\n  return (\n    <Grid item>\n      {hasNoRuns ? (\n        <EmptyState\n          missing=\"data\"\n          title=\"No Workflow Data\"\n          description=\"This component has GitHub Actions enabled, but no data was found. Have you created any Workflows? Click the button below to create a new Workflow.\"\n          action={\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              href={`https://${githubHost}/${projectName}/actions/new`}\n            >\n              Create new Workflow\n            </Button>\n          }\n        />\n      ) : (\n        <InfoCard\n          title={\n            <Box display=\"flex\" alignItems=\"center\">\n              <GitHubIcon />\n              <Box mr={1} />\n              <Typography variant=\"h6\">{projectName}</Typography>\n\n              <Select\n                value={branch}\n                key={branch}\n                label=\"Branch\"\n                onChange={handleMenuChange}\n                data-testid=\"menu-control\"\n                style={{\n                  marginLeft: '30px',\n                  marginRight: '20px',\n                  width: '230px',\n                }}\n              >\n                {branches.map(branchItem => (\n                  <MenuItem key={branchItem.name} value={branchItem.name}>\n                    {branchItem.name === defaultBranch ? (\n                      <Typography variant=\"body2\" component=\"span\">\n                        {branchItem.name}{' '}\n                        <Typography\n                          variant=\"body2\"\n                          component=\"span\"\n                          style={{ color: 'lightgray', fontSize: 'x-small' }}\n                        >\n                          (default)\n                        </Typography>\n                      </Typography>\n                    ) : (\n                      branchItem.name\n                    )}\n                  </MenuItem>\n                ))}\n\n                <MenuItem\n                  value=\"all\"\n                  key=\"all\"\n                  style={{ color: 'lightGrey', fontSize: 'small' }}\n                >\n                  select all branches\n                </MenuItem>\n              </Select>\n\n              <WorkflowRunsCardSearch\n                searchTerm={searchTerm}\n                handleSearch={handleSearch}\n                retry={retry}\n              />\n            </Box>\n          }\n        >\n          <WorkflowRunsCardView\n            runs={runs}\n            loading={cardProps.loading}\n            onChangePageSize={setPageSize}\n            onChangePage={setPage}\n            page={cardProps.page}\n            total={cardProps.total}\n            pageSize={cardProps.pageSize}\n            searchTerm={searchTerm}\n            projectName={projectName}\n          />\n        </InfoCard>\n      )}\n    </Grid>\n  );\n};\n\nexport default WorkflowRunsCard;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  Typography,\n  Box,\n  IconButton,\n  Tooltip,\n  Button,\n} from '@material-ui/core';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { buildRouteRef } from '../../routes';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { Entity } from '@backstage/catalog-model';\n\nimport {\n  EmptyState,\n  Table,\n  TableColumn,\n  Link,\n} from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\nimport { getStatusDescription } from '../WorkflowRunStatus/WorkflowRunStatus';\n\nconst generatedColumns: TableColumn<Partial<WorkflowRun>>[] = [\n  {\n    title: 'ID',\n    field: 'id',\n    type: 'numeric',\n    width: '150px',\n  },\n  {\n    title: 'Message',\n    field: 'message',\n    highlight: true,\n    render: row => {\n      const LinkWrapper = () => {\n        const routeLink = useRouteRef(buildRouteRef);\n        return (\n          <Link component={RouterLink} to={routeLink({ id: row.id! })}>\n            {row.message}\n          </Link>\n        );\n      };\n\n      return <LinkWrapper />;\n    },\n  },\n  {\n    title: 'Source',\n    render: row => (\n      <Typography variant=\"body2\" noWrap>\n        <Typography paragraph variant=\"body2\">\n          {row.source?.branchName}\n        </Typography>\n        <Typography paragraph variant=\"body2\">\n          {row.source?.commit.hash}\n        </Typography>\n      </Typography>\n    ),\n  },\n  {\n    title: 'Workflow',\n    field: 'workflowName',\n  },\n  {\n    title: 'Status',\n    customSort: (d1, d2) => {\n      return getStatusDescription(d1).localeCompare(getStatusDescription(d2));\n    },\n    render: row => (\n      <Box display=\"flex\" alignItems=\"center\">\n        <WorkflowRunStatus status={row.status} conclusion={row.conclusion} />\n      </Box>\n    ),\n  },\n  {\n    title: 'Actions',\n    render: (row: Partial<WorkflowRun>) => (\n      <Tooltip title=\"Rerun workflow\">\n        <IconButton onClick={row.onReRunClick}>\n          <RetryIcon />\n        </IconButton>\n      </Tooltip>\n    ),\n    width: '10%',\n  },\n];\n\ntype Props = {\n  loading: boolean;\n  retry: () => void;\n  runs?: WorkflowRun[];\n  projectName: string;\n  page: number;\n  onChangePage: (page: number) => void;\n  total: number;\n  pageSize: number;\n  onChangePageSize: (pageSize: number) => void;\n};\n\nexport const WorkflowRunsTableView = ({\n  projectName,\n  loading,\n  pageSize,\n  page,\n  retry,\n  runs,\n  onChangePage,\n  onChangePageSize,\n  total,\n}: Props) => {\n  return (\n    <Table\n      isLoading={loading}\n      options={{ paging: true, pageSize, padding: 'dense' }}\n      totalCount={total}\n      page={page}\n      actions={[\n        {\n          icon: () => <SyncIcon />,\n          tooltip: 'Reload workflow runs',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n      data={runs ?? []}\n      onPageChange={onChangePage}\n      onRowsPerPageChange={onChangePageSize}\n      style={{ width: '100%' }}\n      title={\n        <Box display=\"flex\" alignItems=\"center\">\n          <GitHubIcon />\n          <Box mr={1} />\n          <Typography variant=\"h6\">{projectName}</Typography>\n        </Box>\n      }\n      columns={generatedColumns}\n    />\n  );\n};\n\nexport const WorkflowRunsTable = ({\n  entity,\n  branch,\n}: {\n  entity: Entity;\n  branch?: string;\n}) => {\n  const projectName = getProjectNameFromEntity(entity);\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (projectName ?? '/').split('/');\n  const [{ runs, ...tableProps }, { retry, setPage, setPageSize }] =\n    useWorkflowRuns({\n      hostname,\n      owner,\n      repo,\n      branch,\n    });\n\n  const githubHost = hostname || 'github.com';\n  const hasNoRuns = !tableProps.loading && !runs;\n\n  return hasNoRuns ? (\n    <EmptyState\n      missing=\"data\"\n      title=\"No Workflow Data\"\n      description=\"This component has GitHub Actions enabled, but no data was found. Have you created any Workflows? Click the button below to create a new Workflow.\"\n      action={\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href={`https://${githubHost}/${projectName}/actions/new`}\n        >\n          Create new Workflow\n        </Button>\n      }\n    />\n  ) : (\n    <WorkflowRunsTableView\n      {...tableProps}\n      runs={runs}\n      loading={tableProps.loading}\n      retry={retry}\n      onChangePageSize={setPageSize}\n      onChangePage={setPage}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  useEntity,\n  MissingAnnotationEmptyState,\n} from '@backstage/plugin-catalog-react';\nimport { Routes, Route } from 'react-router-dom';\nimport { buildRouteRef } from '../routes';\nimport { WorkflowRunDetails } from './WorkflowRunDetails';\nimport { WorkflowRunsCard } from './WorkflowRunsCard';\nimport { WorkflowRunsTable } from './WorkflowRunsTable';\nimport { GITHUB_ACTIONS_ANNOTATION } from './getProjectNameFromEntity';\nimport { RouterProps } from '../api/types';\n\n/** @public */\nexport const isGithubActionsAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION]);\n\n/** @public */\nexport const Router = (props: RouterProps) => {\n  const { view = 'table' } = props;\n  const { entity } = useEntity();\n\n  if (!isGithubActionsAvailable(entity)) {\n    return (\n      <MissingAnnotationEmptyState annotation={GITHUB_ACTIONS_ANNOTATION} />\n    );\n  }\n\n  const workflowRunsComponent =\n    view === 'cards' ? (\n      <WorkflowRunsCard entity={entity} />\n    ) : (\n      <WorkflowRunsTable entity={entity} />\n    );\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={workflowRunsComponent} />\n      <Route\n        path={`${buildRouteRef.path}`}\n        element={<WorkflowRunDetails entity={entity} />}\n      />\n    </Routes>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport React, { useEffect } from 'react';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunsTable } from '../WorkflowRunsTable';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  StructuredMetadataTable,\n} from '@backstage/core-components';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\n\nconst useStyles = makeStyles({\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n});\n\nconst WidgetContent = (props: {\n  error?: Error;\n  loading?: boolean;\n  lastRun: WorkflowRun;\n  branch: string;\n}) => {\n  const { error, loading, lastRun, branch } = props;\n  const classes = useStyles();\n\n  if (error) return <Typography>Couldn't fetch latest {branch} run</Typography>;\n  if (loading) return <LinearProgress />;\n\n  return (\n    <StructuredMetadataTable\n      metadata={{\n        status: (\n          <>\n            <WorkflowRunStatus\n              status={lastRun.status}\n              conclusion={lastRun.conclusion}\n            />\n          </>\n        ),\n        message: lastRun.message,\n        url: (\n          <Link to={lastRun.githubUrl ?? ''}>\n            See more on GitHub{' '}\n            <ExternalLinkIcon className={classes.externalLinkIcon} />\n          </Link>\n        ),\n      }}\n    />\n  );\n};\n\n/** @public */\nexport const LatestWorkflowRunCard = (props: {\n  branch: string;\n  variant?: InfoCardVariants;\n}) => {\n  const { branch = 'master', variant } = props;\n  const { entity } = useEntity();\n  const errorApi = useApi(errorApiRef);\n  const hostname = getHostnameFromEntity(entity);\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n  const [{ runs, loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n  });\n  const lastRun = runs?.[0] ?? ({} as WorkflowRun);\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WidgetContent\n        error={error}\n        loading={loading}\n        branch={branch}\n        lastRun={lastRun}\n      />\n    </InfoCard>\n  );\n};\n\n/** @public */\nexport const LatestWorkflowsForBranchCard = (props: {\n  branch: string;\n  variant?: InfoCardVariants;\n}) => {\n  const { branch = 'master', variant } = props;\n  const { entity } = useEntity();\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WorkflowRunsTable branch={branch} entity={entity} />\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport React, { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { Typography } from '@material-ui/core';\n\nimport { errorApiRef, useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  ErrorPanel,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Table,\n} from '@backstage/core-components';\nimport { buildRouteRef } from '../../routes';\nimport { getHostnameFromEntity } from '../getHostnameFromEntity';\n\nconst firstLine = (message: string): string => message.split('\\n')[0];\n\n/** @public */\nexport const RecentWorkflowRunsCard = (props: {\n  branch?: string;\n  dense?: boolean;\n  limit?: number;\n  variant?: InfoCardVariants;\n}) => {\n  const { branch, dense = false, limit = 5, variant } = props;\n\n  const { entity } = useEntity();\n  const errorApi = useApi(errorApiRef);\n\n  const hostname = getHostnameFromEntity(entity);\n\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n\n  const [{ runs = [], loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n    initialPageSize: limit,\n  });\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  const githubHost = hostname || 'github.com';\n  const routeLink = useRouteRef(buildRouteRef);\n\n  if (error) {\n    return <ErrorPanel title={error.message} error={error} />;\n  }\n\n  return (\n    <InfoCard\n      title=\"Recent Workflow Runs\"\n      subheader={branch ? `Branch: ${branch}` : 'All Branches'}\n      noPadding\n      variant={variant}\n    >\n      {!runs.length ? (\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This component has GitHub Actions enabled, but no workflows were\n            found.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to={`https://${githubHost}/${owner}/${repo}/actions/new`}>\n              Create a new workflow\n            </Link>\n          </Typography>\n        </div>\n      ) : (\n        <Table<WorkflowRun>\n          isLoading={loading}\n          options={{\n            search: false,\n            paging: false,\n            padding: dense ? 'dense' : 'default',\n            toolbar: false,\n          }}\n          columns={[\n            {\n              title: 'Commit Message',\n              field: 'message',\n              render: data => (\n                <Link component={RouterLink} to={routeLink({ id: data.id! })}>\n                  {firstLine(data.message ?? '')}\n                </Link>\n              ),\n            },\n            { title: 'Branch', field: 'source.branchName' },\n            { title: 'Status', field: 'status', render: WorkflowRunStatus },\n          ]}\n          data={runs}\n        />\n      )}\n    </InfoCard>\n  );\n};\n"],"names":["BuildStatus","_a","_b","_c","useStyles","branchSet","RouterLink","Table"],"mappings":"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"}