{"version":3,"file":"OngoingTask-87c6761c.esm.js","sources":["../../src/api.ts","../../src/components/fields/utils.ts","../../src/components/fields/EntityPicker/schema.ts","../../src/components/fields/EntityPicker/EntityPicker.tsx","../../src/components/fields/EntityNamePicker/validation.ts","../../src/components/fields/EntityNamePicker/schema.ts","../../src/components/fields/EntityNamePicker/EntityNamePicker.tsx","../../src/components/fields/OwnerPicker/schema.ts","../../src/components/fields/OwnerPicker/OwnerPicker.tsx","../../src/components/fields/RepoUrlPicker/schema.ts","../../src/components/fields/RepoUrlPicker/validation.ts","../../src/components/fields/RepoUrlPicker/GithubRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/GiteaRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/GitlabRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/AzureRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/BitbucketRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/GerritRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/RepoUrlPickerHost.tsx","../../src/components/fields/RepoUrlPicker/RepoUrlPickerRepoName.tsx","../../src/components/fields/RepoUrlPicker/utils.ts","../../src/components/fields/RepoUrlPicker/RepoUrlPicker.tsx","../../src/components/fields/OwnedEntityPicker/schema.ts","../../src/components/fields/OwnedEntityPicker/OwnedEntityPicker.tsx","../../src/components/fields/EntityTagsPicker/schema.ts","../../src/components/fields/EntityTagsPicker/EntityTagsPicker.tsx","../../src/routes.ts","../../src/components/fields/MyGroupsPicker/schema.ts","../../src/components/fields/MyGroupsPicker/MyGroupsPicker.tsx","../../src/plugin.tsx","../../src/components/TemplateTypePicker/TemplateTypePicker.tsx","../../src/components/OngoingTask/ContextMenu.tsx","../../src/components/OngoingTask/OngoingTask.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  DiscoveryApi,\n  FetchApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { Observable } from '@backstage/types';\nimport qs from 'qs';\nimport ObservableImpl from 'zen-observable';\nimport {\n  ListActionsResponse,\n  LogEvent,\n  ScaffolderApi,\n  ScaffolderScaffoldOptions,\n  ScaffolderScaffoldResponse,\n  ScaffolderStreamLogsOptions,\n  ScaffolderGetIntegrationsListOptions,\n  ScaffolderGetIntegrationsListResponse,\n  ScaffolderTask,\n  ScaffolderDryRunOptions,\n  ScaffolderDryRunResponse,\n  TemplateParameterSchema,\n} from '@backstage/plugin-scaffolder-react';\n\nimport queryString from 'qs';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\n\n/**\n * An API to interact with the scaffolder backend.\n *\n * @public\n */\nexport class ScaffolderClient implements ScaffolderApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly scmIntegrationsApi: ScmIntegrationRegistry;\n  private readonly fetchApi: FetchApi;\n  private readonly identityApi?: IdentityApi;\n  private readonly useLongPollingLogs: boolean;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    fetchApi: FetchApi;\n    identityApi?: IdentityApi;\n    scmIntegrationsApi: ScmIntegrationRegistry;\n    useLongPollingLogs?: boolean;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.fetchApi = options.fetchApi ?? { fetch };\n    this.scmIntegrationsApi = options.scmIntegrationsApi;\n    this.useLongPollingLogs = options.useLongPollingLogs ?? false;\n    this.identityApi = options.identityApi;\n  }\n\n  async listTasks(options: {\n    filterByOwnership: 'owned' | 'all';\n  }): Promise<{ tasks: ScaffolderTask[] }> {\n    if (!this.identityApi) {\n      throw new Error(\n        'IdentityApi is not available in the ScaffolderClient, please pass through the IdentityApi to the ScaffolderClient constructor in order to use the listTasks method',\n      );\n    }\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const { userEntityRef } = await this.identityApi.getBackstageIdentity();\n\n    const query = queryString.stringify(\n      options.filterByOwnership === 'owned' ? { createdBy: userEntityRef } : {},\n    );\n\n    const response = await this.fetchApi.fetch(`${baseUrl}/v2/tasks?${query}`);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n\n  async getIntegrationsList(\n    options: ScaffolderGetIntegrationsListOptions,\n  ): Promise<ScaffolderGetIntegrationsListResponse> {\n    const integrations = [\n      ...this.scmIntegrationsApi.azure.list(),\n      ...this.scmIntegrationsApi.bitbucket\n        .list()\n        .filter(\n          item =>\n            !this.scmIntegrationsApi.bitbucketCloud.byHost(item.config.host) &&\n            !this.scmIntegrationsApi.bitbucketServer.byHost(item.config.host),\n        ),\n      ...this.scmIntegrationsApi.bitbucketCloud.list(),\n      ...this.scmIntegrationsApi.bitbucketServer.list(),\n      ...this.scmIntegrationsApi.gerrit.list(),\n      ...this.scmIntegrationsApi.gitea.list(),\n      ...this.scmIntegrationsApi.github.list(),\n      ...this.scmIntegrationsApi.gitlab.list(),\n    ]\n      .map(c => ({ type: c.type, title: c.title, host: c.config.host }))\n      .filter(c => options.allowedHosts.includes(c.host));\n\n    return {\n      integrations,\n    };\n  }\n\n  async getTemplateParameterSchema(\n    templateRef: string,\n  ): Promise<TemplateParameterSchema> {\n    const { namespace, kind, name } = parseEntityRef(templateRef, {\n      defaultKind: 'template',\n    });\n\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const templatePath = [namespace, kind, name]\n      .map(s => encodeURIComponent(s))\n      .join('/');\n\n    const url = `${baseUrl}/v2/templates/${templatePath}/parameter-schema`;\n\n    const response = await this.fetchApi.fetch(url);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    const schema: TemplateParameterSchema = await response.json();\n    return schema;\n  }\n\n  async scaffold(\n    options: ScaffolderScaffoldOptions,\n  ): Promise<ScaffolderScaffoldResponse> {\n    const { templateRef, values, secrets = {} } = options;\n    const url = `${await this.discoveryApi.getBaseUrl('scaffolder')}/v2/tasks`;\n    const response = await this.fetchApi.fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        templateRef,\n        values: { ...values },\n        secrets,\n      }),\n    });\n\n    if (response.status !== 201) {\n      const status = `${response.status} ${response.statusText}`;\n      const body = await response.text();\n      throw new Error(`Backend request failed, ${status} ${body.trim()}`);\n    }\n\n    const { id } = (await response.json()) as { id: string };\n    return { taskId: id };\n  }\n\n  async getTask(taskId: string): Promise<ScaffolderTask> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const url = `${baseUrl}/v2/tasks/${encodeURIComponent(taskId)}`;\n\n    const response = await this.fetchApi.fetch(url);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n\n  streamLogs(options: ScaffolderStreamLogsOptions): Observable<LogEvent> {\n    if (this.useLongPollingLogs) {\n      return this.streamLogsPolling(options);\n    }\n\n    return this.streamLogsEventStream(options);\n  }\n\n  async dryRun(\n    options: ScaffolderDryRunOptions,\n  ): Promise<ScaffolderDryRunResponse> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const response = await this.fetchApi.fetch(`${baseUrl}/v2/dry-run`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        template: options.template,\n        values: options.values,\n        secrets: options.secrets,\n        directoryContents: options.directoryContents,\n      }),\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return response.json();\n  }\n\n  private streamLogsEventStream({\n    taskId,\n    after,\n  }: {\n    taskId: string;\n    after?: number;\n  }): Observable<LogEvent> {\n    return new ObservableImpl(subscriber => {\n      const params = new URLSearchParams();\n      if (after !== undefined) {\n        params.set('after', String(Number(after)));\n      }\n\n      Promise.all([\n        this.discoveryApi.getBaseUrl('scaffolder'),\n        this.identityApi?.getCredentials(),\n      ]).then(\n        ([baseUrl, credentials]) => {\n          const url = `${baseUrl}/v2/tasks/${encodeURIComponent(\n            taskId,\n          )}/eventstream`;\n\n          const processEvent = (event: any) => {\n            if (event.data) {\n              try {\n                subscriber.next(JSON.parse(event.data));\n              } catch (ex) {\n                subscriber.error(ex);\n              }\n            }\n          };\n\n          const eventSource = new EventSourcePolyfill(url, {\n            withCredentials: true,\n            headers: credentials?.token\n              ? { Authorization: `Bearer ${credentials.token}` }\n              : {},\n          });\n          eventSource.addEventListener('log', processEvent);\n          eventSource.addEventListener('cancelled', processEvent);\n          eventSource.addEventListener('completion', (event: any) => {\n            processEvent(event);\n            eventSource.close();\n            subscriber.complete();\n          });\n          eventSource.addEventListener('error', event => {\n            subscriber.error(event);\n          });\n        },\n        error => {\n          subscriber.error(error);\n        },\n      );\n    });\n  }\n\n  private streamLogsPolling({\n    taskId,\n    after: inputAfter,\n  }: {\n    taskId: string;\n    after?: number;\n  }): Observable<LogEvent> {\n    let after = inputAfter;\n\n    return new ObservableImpl(subscriber => {\n      this.discoveryApi.getBaseUrl('scaffolder').then(async baseUrl => {\n        while (!subscriber.closed) {\n          const url = `${baseUrl}/v2/tasks/${encodeURIComponent(\n            taskId,\n          )}/events?${qs.stringify({ after })}`;\n          const response = await this.fetchApi.fetch(url);\n\n          if (!response.ok) {\n            // wait for one second to not run into an\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            continue;\n          }\n\n          const logs = (await response.json()) as LogEvent[];\n\n          for (const event of logs) {\n            after = Number(event.id);\n\n            subscriber.next(event);\n\n            if (event.type === 'completion') {\n              subscriber.complete();\n              return;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async listActions(): Promise<ListActionsResponse> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const response = await this.fetchApi.fetch(`${baseUrl}/v2/actions`);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n\n  async cancelTask(taskId: string): Promise<void> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const url = `${baseUrl}/v2/tasks/${encodeURIComponent(taskId)}/cancel`;\n\n    const response = await this.fetchApi.fetch(url, {\n      method: 'POST',\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport {\n  CustomFieldExtensionSchema,\n  FieldExtensionComponentProps,\n} from '@backstage/plugin-scaffolder-react';\n\n/**\n * @public\n * FieldSchema encapsulates a JSONSchema7 along with the\n * matching FieldExtensionComponentProps type for a field extension.\n */\nexport interface FieldSchema<TReturn, TUiOptions> {\n  readonly schema: CustomFieldExtensionSchema;\n  readonly type: FieldExtensionComponentProps<TReturn, TUiOptions>;\n  readonly uiOptionsType: TUiOptions;\n}\n\n/**\n * @public\n * Utility function to convert zod return and UI options schemas to a\n * CustomFieldExtensionSchema with FieldExtensionComponentProps type inference\n */\nexport function makeFieldSchemaFromZod<\n  TReturnSchema extends z.ZodType,\n  TUiOptionsSchema extends z.ZodType = z.ZodType<any, any, {}>,\n>(\n  returnSchema: TReturnSchema,\n  uiOptionsSchema?: TUiOptionsSchema,\n): FieldSchema<\n  TReturnSchema extends z.ZodType<any, any, infer IReturn> ? IReturn : never,\n  TUiOptionsSchema extends z.ZodType<any, any, infer IUiOptions>\n    ? IUiOptions\n    : never\n> {\n  return {\n    schema: {\n      returnValue: zodToJsonSchema(returnSchema) as JSONSchema7,\n      uiOptions: uiOptionsSchema\n        ? (zodToJsonSchema(uiOptionsSchema) as JSONSchema7)\n        : undefined,\n    },\n    type: null as any,\n    uiOptionsType: null as any,\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\n\n/**\n * @public\n */\nexport const entityQueryFilterExpressionSchema = z.record(\n  z\n    .string()\n    .or(z.object({ exists: z.boolean().optional() }))\n    .or(z.array(z.string())),\n);\n\n/**\n * @public\n */\nexport const EntityPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    /**\n     * @deprecated Use `catalogFilter` instead.\n     */\n    allowedKinds: z\n      .array(z.string())\n      .optional()\n      .describe(\n        'DEPRECATED: Use `catalogFilter` instead. List of kinds of entities to derive options from',\n      ),\n    defaultKind: z\n      .string()\n      .optional()\n      .describe(\n        'The default entity kind. Options of this kind will not be prefixed.',\n      ),\n    allowArbitraryValues: z\n      .boolean()\n      .optional()\n      .describe('Whether to allow arbitrary user input. Defaults to true'),\n    defaultNamespace: z\n      .union([z.string(), z.literal(false)])\n      .optional()\n      .describe(\n        'The default namespace. Options with this namespace will not be prefixed.',\n      ),\n    catalogFilter: z\n      .array(entityQueryFilterExpressionSchema)\n      .or(entityQueryFilterExpressionSchema)\n      .optional()\n      .describe('List of key-value filter expression for entities'),\n  }),\n);\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `EntityPicker` field extension.\n *\n * @public\n */\nexport type EntityPickerUiOptions =\n  typeof EntityPickerFieldSchema.uiOptionsType;\n\nexport type EntityPickerProps = typeof EntityPickerFieldSchema.type;\n\nexport const EntityPickerSchema = EntityPickerFieldSchema.schema;\n\nexport type EntityPickerFilterQuery = z.TypeOf<\n  typeof entityQueryFilterExpressionSchema\n>;\n\nexport type EntityPickerFilterQueryValue =\n  EntityPickerFilterQuery[keyof EntityPickerFilterQuery];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  type EntityFilterQuery,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/catalog-client';\nimport {\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete, {\n  AutocompleteChangeReason,\n} from '@material-ui/lab/Autocomplete';\nimport React, { useCallback, useEffect } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport {\n  EntityPickerFilterQueryValue,\n  EntityPickerProps,\n  EntityPickerUiOptions,\n  EntityPickerFilterQuery,\n} from './schema';\n\nexport { EntityPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `EntityPicker`\n * field extension.\n *\n * @public\n */\nexport const EntityPicker = (props: EntityPickerProps) => {\n  const {\n    onChange,\n    schema: { title = 'Entity', description = 'An entity from the catalog' },\n    required,\n    uiSchema,\n    rawErrors,\n    formData,\n    idSchema,\n  } = props;\n  const catalogFilter = buildCatalogFilter(uiSchema);\n  const defaultKind = uiSchema['ui:options']?.defaultKind;\n  const defaultNamespace =\n    uiSchema['ui:options']?.defaultNamespace || undefined;\n\n  const catalogApi = useApi(catalogApiRef);\n\n  const { value: entities, loading } = useAsync(async () => {\n    const { items } = await catalogApi.getEntities(\n      catalogFilter ? { filter: catalogFilter } : undefined,\n    );\n    return items;\n  });\n  const allowArbitraryValues =\n    uiSchema['ui:options']?.allowArbitraryValues ?? true;\n\n  const getLabel = useCallback(\n    (ref: string) => {\n      try {\n        return humanizeEntityRef(\n          parseEntityRef(ref, { defaultKind, defaultNamespace }),\n          {\n            defaultKind,\n            defaultNamespace,\n          },\n        );\n      } catch (err) {\n        return ref;\n      }\n    },\n    [defaultKind, defaultNamespace],\n  );\n\n  const onSelect = useCallback(\n    (_: any, ref: string | Entity | null, reason: AutocompleteChangeReason) => {\n      // ref can either be a string from free solo entry or\n      if (typeof ref !== 'string') {\n        // if ref does not exist: pass 'undefined' to trigger validation for required value\n        onChange(ref ? stringifyEntityRef(ref as Entity) : undefined);\n      } else {\n        if (reason === 'blur' || reason === 'create-option') {\n          // Add in default namespace, etc.\n          let entityRef = ref;\n          try {\n            // Attempt to parse the entity ref into it's full form.\n            entityRef = stringifyEntityRef(\n              parseEntityRef(ref as string, {\n                defaultKind,\n                defaultNamespace,\n              }),\n            );\n          } catch (err) {\n            // If the passed in value isn't an entity ref, do nothing.\n          }\n          // We need to check against formData here as that's the previous value for this field.\n          if (formData !== ref || allowArbitraryValues) {\n            onChange(entityRef);\n          }\n        }\n      }\n    },\n    [onChange, formData, defaultKind, defaultNamespace, allowArbitraryValues],\n  );\n\n  // Since free solo can be enabled, attempt to parse as a full entity ref first, then fall\n  // back to the given value.\n  const selectedEntity =\n    entities?.find(e => stringifyEntityRef(e) === formData) ??\n    (allowArbitraryValues && formData ? getLabel(formData) : '');\n\n  useEffect(() => {\n    if (entities?.length === 1 && selectedEntity === '') {\n      onChange(stringifyEntityRef(entities[0]));\n    }\n  }, [entities, onChange, selectedEntity]);\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0 && !formData}\n    >\n      <Autocomplete\n        disabled={entities?.length === 1}\n        id={idSchema?.$id}\n        value={selectedEntity}\n        loading={loading}\n        onChange={onSelect}\n        options={entities || []}\n        getOptionLabel={option =>\n          // option can be a string due to freeSolo.\n          typeof option === 'string'\n            ? option\n            : humanizeEntityRef(option, { defaultKind, defaultNamespace })!\n        }\n        autoSelect\n        freeSolo={allowArbitraryValues}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"dense\"\n            helperText={description}\n            FormHelperTextProps={{ margin: 'dense', style: { marginLeft: 0 } }}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n\n/**\n * Converts a especial `{exists: true}` value to the `CATALOG_FILTER_EXISTS` symbol.\n *\n * @param value - The value to convert.\n * @returns The converted value.\n */\nfunction convertOpsValues(\n  value: Exclude<EntityPickerFilterQueryValue, Array<any>>,\n): string | symbol {\n  if (typeof value === 'object' && value.exists) {\n    return CATALOG_FILTER_EXISTS;\n  }\n  return value?.toString();\n}\n\n/**\n * Converts schema filters to entity filter query, replacing `{exists:true}` values\n * with the constant `CATALOG_FILTER_EXISTS`.\n *\n * @param schemaFilters - An object containing schema filters with keys as filter names\n * and values as filter values.\n * @returns An object with the same keys as the input object, but with `{exists:true}` values\n * transformed to `CATALOG_FILTER_EXISTS` symbol.\n */\nfunction convertSchemaFiltersToQuery(\n  schemaFilters: EntityPickerFilterQuery,\n): Exclude<EntityFilterQuery, Array<any>> {\n  const query: EntityFilterQuery = {};\n\n  for (const [key, value] of Object.entries(schemaFilters)) {\n    if (Array.isArray(value)) {\n      query[key] = value;\n    } else {\n      query[key] = convertOpsValues(value);\n    }\n  }\n\n  return query;\n}\n\n/**\n * Builds an `EntityFilterQuery` based on the `uiSchema` passed in.\n * If `catalogFilter` is specified in the `uiSchema`, it is converted to a `EntityFilterQuery`.\n * If `allowedKinds` is specified in the `uiSchema` will support the legacy `allowedKinds` option.\n *\n * @param uiSchema The `uiSchema` of an `EntityPicker` component.\n * @returns An `EntityFilterQuery` based on the `uiSchema`, or `undefined` if `catalogFilter` is not specified in the `uiSchema`.\n */\nfunction buildCatalogFilter(\n  uiSchema: EntityPickerProps['uiSchema'],\n): EntityFilterQuery | undefined {\n  const allowedKinds = uiSchema['ui:options']?.allowedKinds;\n\n  const catalogFilter: EntityPickerUiOptions['catalogFilter'] | undefined =\n    uiSchema['ui:options']?.catalogFilter ||\n    (allowedKinds && { kind: allowedKinds });\n\n  if (!catalogFilter) {\n    return undefined;\n  }\n\n  if (Array.isArray(catalogFilter)) {\n    return catalogFilter.map(convertSchemaFiltersToQuery);\n  }\n\n  return convertSchemaFiltersToQuery(catalogFilter);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldValidation } from '@rjsf/utils';\nimport { KubernetesValidatorFunctions } from '@backstage/catalog-model';\n\nexport const entityNamePickerValidation = (\n  value: string,\n  validation: FieldValidation,\n) => {\n  if (!KubernetesValidatorFunctions.isValidObjectName(value)) {\n    validation.addError(\n      'Must start and end with an alphanumeric character, and contain only alphanumeric characters, hyphens, underscores, and periods. Maximum length is 63 characters.',\n    );\n  }\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\n\nconst EntityNamePickerFieldSchema = makeFieldSchemaFromZod(z.string());\n\nexport const EntityNamePickerSchema = EntityNamePickerFieldSchema.schema;\n\nexport type EntityNamePickerProps = typeof EntityNamePickerFieldSchema.type;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { EntityNamePickerProps } from './schema';\nimport { TextField } from '@material-ui/core';\n\nexport { EntityNamePickerSchema } from './schema';\n\n/**\n * EntityName Picker\n */\nexport const EntityNamePicker = (props: EntityNamePickerProps) => {\n  const {\n    onChange,\n    required,\n    schema: { title = 'Name', description = 'Unique name of the component' },\n    rawErrors,\n    formData,\n    uiSchema: { 'ui:autofocus': autoFocus },\n    idSchema,\n    placeholder,\n  } = props;\n\n  return (\n    <TextField\n      id={idSchema?.$id}\n      label={title}\n      placeholder={placeholder}\n      helperText={description}\n      required={required}\n      value={formData ?? ''}\n      onChange={({ target: { value } }) => onChange(value)}\n      margin=\"normal\"\n      error={rawErrors?.length > 0 && !formData}\n      inputProps={{ autoFocus }}\n    />\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\nimport { entityQueryFilterExpressionSchema } from '../EntityPicker/schema';\n\n/**\n * @public\n */\nexport const OwnerPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    /**\n     * @deprecated Use `catalogFilter` instead.\n     */\n    allowedKinds: z\n      .array(z.string())\n      .default(['Group', 'User'])\n      .optional()\n      .describe(\n        'DEPRECATED: Use `catalogFilter` instead. List of kinds of entities to derive options from. Defaults to Group and User',\n      ),\n    allowArbitraryValues: z\n      .boolean()\n      .optional()\n      .describe('Whether to allow arbitrary user input. Defaults to true'),\n    defaultNamespace: z\n      .union([z.string(), z.literal(false)])\n      .optional()\n      .describe(\n        'The default namespace. Options with this namespace will not be prefixed.',\n      ),\n    catalogFilter: z\n      .array(entityQueryFilterExpressionSchema)\n      .or(entityQueryFilterExpressionSchema)\n      .optional()\n      .describe('List of key-value filter expression for entities'),\n  }),\n);\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnerPicker` field extension.\n *\n * @public\n */\nexport type OwnerPickerUiOptions = typeof OwnerPickerFieldSchema.uiOptionsType;\n\nexport type OwnerPickerProps = typeof OwnerPickerFieldSchema.type;\n\nexport const OwnerPickerSchema = OwnerPickerFieldSchema.schema;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { EntityPicker } from '../EntityPicker/EntityPicker';\nimport { OwnerPickerProps } from './schema';\n\nexport { OwnerPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `OwnerPicker`\n * field extension.\n *\n * @public\n */\nexport const OwnerPicker = (props: OwnerPickerProps) => {\n  const {\n    schema: { title = 'Owner', description = 'The owner of the component' },\n    uiSchema,\n    ...restProps\n  } = props;\n\n  const defaultNamespace = uiSchema['ui:options']?.defaultNamespace;\n  const allowedKinds = uiSchema['ui:options']?.allowedKinds;\n\n  const catalogFilter = uiSchema['ui:options']?.catalogFilter || {\n    kind: allowedKinds || ['Group', 'User'],\n  };\n\n  const ownerUiSchema = {\n    ...uiSchema,\n    'ui:options': {\n      catalogFilter,\n      defaultKind: 'Group',\n      allowArbitraryValues:\n        uiSchema['ui:options']?.allowArbitraryValues ?? true,\n      ...(defaultNamespace !== undefined ? { defaultNamespace } : {}),\n    },\n  };\n\n  return (\n    <EntityPicker\n      {...restProps}\n      schema={{ title, description }}\n      uiSchema={ownerUiSchema}\n    />\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\n\n/**\n * @public\n */\nexport const RepoUrlPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    allowedHosts: z\n      .array(z.string())\n      .optional()\n      .describe('List of allowed SCM platform hosts'),\n    allowedOrganizations: z\n      .array(z.string())\n      .optional()\n      .describe('List of allowed organizations in the given SCM platform'),\n    allowedOwners: z\n      .array(z.string())\n      .optional()\n      .describe('List of allowed owners in the given SCM platform'),\n    allowedProjects: z\n      .array(z.string())\n      .optional()\n      .describe('List of allowed projects in the given SCM platform'),\n    allowedRepos: z\n      .array(z.string())\n      .optional()\n      .describe('List of allowed repos in the given SCM platform'),\n    requestUserCredentials: z\n      .object({\n        secretsKey: z\n          .string()\n          .describe(\n            'Key used within the template secrets context to store the credential',\n          ),\n        additionalScopes: z\n          .object({\n            gitea: z\n              .array(z.string())\n              .optional()\n              .describe('Additional Gitea scopes to request'),\n            gerrit: z\n              .array(z.string())\n              .optional()\n              .describe('Additional Gerrit scopes to request'),\n            github: z\n              .array(z.string())\n              .optional()\n              .describe('Additional GitHub scopes to request'),\n            gitlab: z\n              .array(z.string())\n              .optional()\n              .describe('Additional GitLab scopes to request'),\n            bitbucket: z\n              .array(z.string())\n              .optional()\n              .describe('Additional BitBucket scopes to request'),\n            azure: z\n              .array(z.string())\n              .optional()\n              .describe('Additional Azure scopes to request'),\n          })\n          .optional()\n          .describe('Additional permission scopes to request'),\n      })\n      .optional()\n      .describe(\n        'If defined will request user credentials to auth against the given SCM platform',\n      ),\n  }),\n);\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `RepoUrlPicker` field extension.\n *\n * @public\n */\nexport type RepoUrlPickerUiOptions =\n  typeof RepoUrlPickerFieldSchema.uiOptionsType;\n\nexport type RepoUrlPickerProps = typeof RepoUrlPickerFieldSchema.type;\n\n// NOTE: There is a bug with this failing validation in the custom field explorer due\n// to https://github.com/rjsf-team/react-jsonschema-form/issues/675 even if\n// requestUserCredentials is not defined\nexport const RepoUrlPickerSchema = RepoUrlPickerFieldSchema.schema;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldValidation } from '@rjsf/utils';\nimport { ApiHolder } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\n\n/**\n * The validation function for the `repoUrl` that is returned from the\n * field extension. Ensures that you have all the required fields filled for\n * the different providers that exist.\n *\n * @public\n */\nexport const repoPickerValidation = (\n  value: string,\n  validation: FieldValidation,\n  context: { apiHolder: ApiHolder },\n) => {\n  try {\n    const { host, searchParams } = new URL(`https://${value}`);\n\n    const integrationApi = context.apiHolder.get(scmIntegrationsApiRef);\n\n    if (!host) {\n      validation.addError(\n        'Incomplete repository location provided, host not provided',\n      );\n    } else {\n      if (integrationApi?.byHost(host)?.type === 'bitbucket') {\n        // workspace is only applicable for bitbucket cloud\n        if (host === 'bitbucket.org' && !searchParams.get('workspace')) {\n          validation.addError(\n            'Incomplete repository location provided, workspace not provided',\n          );\n        }\n\n        if (!searchParams.get('project')) {\n          validation.addError(\n            'Incomplete repository location provided, project not provided',\n          );\n        }\n      }\n      // For anything other than bitbucket and gerrit\n      else if (integrationApi?.byHost(host)?.type !== 'gerrit') {\n        if (!searchParams.get('owner')) {\n          validation.addError(\n            'Incomplete repository location provided, owner not provided',\n          );\n        }\n      }\n\n      // Do this for all hosts\n      if (!searchParams.get('repo')) {\n        validation.addError(\n          'Incomplete repository location provided, repo not provided',\n        );\n      }\n    }\n  } catch {\n    validation.addError('Unable to parse the Repository URL');\n  }\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\nexport const GithubRepoPicker = (props: {\n  allowedOwners?: string[];\n  rawErrors: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n}) => {\n  const { allowedOwners = [], rawErrors, state, onChange } = props;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner Available\"\n            onChange={s =>\n              onChange({ owner: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The organization, user or project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\nexport const GiteaRepoPicker = (props: {\n  allowedOwners?: string[];\n  allowedRepos?: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n  rawErrors: string[];\n}) => {\n  const { allowedOwners = [], state, onChange, rawErrors } = props;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner Available\"\n            onChange={selected =>\n              onChange({\n                owner: String(Array.isArray(selected) ? selected[0] : selected),\n              })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          Gitea namespace where this repository will belong to. It can be the\n          name of organization, group, subgroup, user, or the project.\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\nexport const GitlabRepoPicker = (props: {\n  allowedOwners?: string[];\n  allowedRepos?: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n  rawErrors: string[];\n}) => {\n  const { allowedOwners = [], state, onChange, rawErrors } = props;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner Available\"\n            onChange={selected =>\n              onChange({\n                owner: String(Array.isArray(selected) ? selected[0] : selected),\n              })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          GitLab namespace where this repository will belong to. It can be the\n          name of organization, group, subgroup, user, or the project.\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { RepoUrlPickerState } from './types';\nimport { Select, SelectItem } from '@backstage/core-components';\n\nexport const AzureRepoPicker = (props: {\n  allowedOrganizations?: string[];\n  allowedOwners?: string[];\n  rawErrors: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n}) => {\n  const {\n    allowedOrganizations = [],\n    allowedOwners = [],\n    rawErrors,\n    state,\n    onChange,\n  } = props;\n\n  const organizationItems: SelectItem[] = allowedOrganizations\n    ? allowedOrganizations.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { organization, owner } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !organization}\n      >\n        {allowedOrganizations?.length ? (\n          <Select\n            native\n            label=\"Organization\"\n            onChange={s =>\n              onChange({ organization: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedOrganizations.length === 1}\n            selected={organization}\n            items={organizationItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"orgInput\">Organization</InputLabel>\n            <Input\n              id=\"orgInput\"\n              onChange={e => onChange({ organization: e.target.value })}\n              value={organization}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The Organization that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner\"\n            onChange={s =>\n              onChange({ owner: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Project</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The Project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\n/**\n * The underlying component that is rendered in the form for the `BitbucketRepoPicker`\n * field extension.\n *\n * @public\n * @param allowedOwners - Allowed workspaces for the Bitbucket cloud repository\n * @param allowedProjects - Allowed projects for the Bitbucket cloud repository\n *\n */\nexport const BitbucketRepoPicker = (props: {\n  allowedOwners?: string[];\n  allowedProjects?: string[];\n  onChange: (state: RepoUrlPickerState) => void;\n  state: RepoUrlPickerState;\n  rawErrors: string[];\n}) => {\n  const {\n    allowedOwners = [],\n    allowedProjects = [],\n    onChange,\n    rawErrors,\n    state,\n  } = props;\n  const { host, workspace, project } = state;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners?.map(i => ({ label: i, value: i }))\n    : [];\n  const projectItems: SelectItem[] = allowedProjects\n    ? allowedProjects?.map(i => ({ label: i, value: i }))\n    : [];\n\n  useEffect(() => {\n    if (host === 'bitbucket.org' && allowedOwners.length) {\n      onChange({ workspace: allowedOwners[0] });\n    }\n  }, [allowedOwners, host, onChange]);\n\n  return (\n    <>\n      {host === 'bitbucket.org' && (\n        <FormControl\n          margin=\"normal\"\n          required\n          error={rawErrors?.length > 0 && !workspace}\n        >\n          {allowedOwners?.length ? (\n            <Select\n              native\n              label=\"Allowed Workspaces\"\n              onChange={s =>\n                onChange({ workspace: String(Array.isArray(s) ? s[0] : s) })\n              }\n              disabled={allowedOwners.length === 1}\n              selected={workspace}\n              items={ownerItems}\n            />\n          ) : (\n            <>\n              <InputLabel htmlFor=\"workspaceInput\">Workspace</InputLabel>\n              <Input\n                id=\"workspaceInput\"\n                onChange={e => onChange({ workspace: e.target.value })}\n                value={workspace}\n              />\n            </>\n          )}\n          <FormHelperText>\n            The Workspace that this repo will belong to\n          </FormHelperText>\n        </FormControl>\n      )}\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !project}\n      >\n        {allowedProjects?.length ? (\n          <Select\n            native\n            label=\"Allowed Projects\"\n            onChange={s =>\n              onChange({ project: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedProjects.length === 1}\n            selected={project}\n            items={projectItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"projectInput\">Project</InputLabel>\n            <Input\n              id=\"projectInput\"\n              onChange={e => onChange({ project: e.target.value })}\n              value={project}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The Project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { RepoUrlPickerState } from './types';\n\nexport const GerritRepoPicker = (props: {\n  onChange: (state: RepoUrlPickerState) => void;\n  state: RepoUrlPickerState;\n  rawErrors: string[];\n}) => {\n  const { onChange, rawErrors, state } = props;\n  const { workspace, owner } = state;\n  return (\n    <>\n      <FormControl margin=\"normal\" error={rawErrors?.length > 0 && !workspace}>\n        <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n        <Input\n          id=\"ownerInput\"\n          onChange={e => onChange({ owner: e.target.value })}\n          value={owner}\n        />\n        <FormHelperText>The owner of the project (optional)</FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !workspace}\n      >\n        <InputLabel htmlFor=\"parentInput\">Parent</InputLabel>\n        <Input\n          id=\"parentInput\"\n          onChange={e => onChange({ workspace: e.target.value })}\n          value={workspace}\n        />\n        <FormHelperText>\n          The project parent that the repo will belong to\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport { Progress, Select, SelectItem } from '@backstage/core-components';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport useAsync from 'react-use/lib/useAsync';\n\nexport const RepoUrlPickerHost = (props: {\n  host?: string;\n  hosts?: string[];\n  onChange: (host: string) => void;\n  rawErrors: string[];\n}) => {\n  const { host, hosts, onChange, rawErrors } = props;\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const { value: { integrations } = { integrations: [] }, loading } = useAsync(\n    async () => {\n      return await scaffolderApi.getIntegrationsList({\n        allowedHosts: hosts ?? [],\n      });\n    },\n  );\n\n  useEffect(() => {\n    // If there is no host chosen currently\n    if (!host) {\n      // Set the first of the allowedHosts option if that available\n      if (hosts?.length) {\n        onChange(hosts[0]);\n        // if there's no hosts provided, fallback to using the first integration\n      } else if (integrations?.length) {\n        onChange(integrations[0].host);\n      }\n    }\n  }, [hosts, host, onChange, integrations]);\n\n  // If there are no allowedHosts provided, then show all integrations. Otherwise, only show integrations\n  // that are provided in the dropdown for the user to choose from.\n  const hostsOptions: SelectItem[] = integrations\n    ? integrations\n        .filter(i => (hosts?.length ? hosts?.includes(i.host) : true))\n        .map(i => ({ label: i.title, value: i.host }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !host}\n      >\n        <Select\n          native\n          disabled={hosts?.length === 1}\n          label=\"Host\"\n          onChange={s => onChange(String(Array.isArray(s) ? s[0] : s))}\n          selected={host}\n          items={hostsOptions}\n          data-testid=\"host-select\"\n        />\n\n        <FormHelperText>\n          The host where the repository will be created\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport const RepoUrlPickerRepoName = (props: {\n  repoName?: string;\n  allowedRepos?: string[];\n  onChange: (host: string) => void;\n  rawErrors: string[];\n}) => {\n  const { repoName, allowedRepos, onChange, rawErrors } = props;\n\n  useEffect(() => {\n    // If there is no repoName chosen currently\n    if (!repoName) {\n      // Set the first of the allowedRepos option if that available\n      if (allowedRepos?.length) {\n        onChange(allowedRepos[0]);\n      }\n    }\n  }, [allowedRepos, repoName, onChange]);\n\n  const repoItems: SelectItem[] = allowedRepos\n    ? allowedRepos.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        {allowedRepos?.length ? (\n          <Select\n            native\n            label=\"Repositories Available\"\n            onChange={selected =>\n              onChange(String(Array.isArray(selected) ? selected[0] : selected))\n            }\n            disabled={allowedRepos.length === 1}\n            selected={repoName}\n            items={repoItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"repoNameInput\">Repository</InputLabel>\n            <Input\n              id=\"repoNameInput\"\n              onChange={e => onChange(String(e.target.value))}\n              value={repoName}\n            />\n          </>\n        )}\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoUrlPickerState } from './types';\n\nexport function serializeRepoPickerUrl(data: RepoUrlPickerState) {\n  if (!data.host) {\n    return undefined;\n  }\n\n  const params = new URLSearchParams();\n  if (data.owner) {\n    params.set('owner', data.owner);\n  }\n  if (data.repoName) {\n    params.set('repo', data.repoName);\n  }\n  if (data.organization) {\n    params.set('organization', data.organization);\n  }\n  if (data.workspace) {\n    params.set('workspace', data.workspace);\n  }\n  if (data.project) {\n    params.set('project', data.project);\n  }\n\n  return `${data.host}?${params.toString()}`;\n}\n\nexport function parseRepoPickerUrl(\n  url: string | undefined,\n): RepoUrlPickerState {\n  let host = '';\n  let owner = '';\n  let repoName = '';\n  let organization = '';\n  let workspace = '';\n  let project = '';\n\n  try {\n    if (url) {\n      const parsed = new URL(`https://${url}`);\n      host = parsed.host;\n      owner = parsed.searchParams.get('owner') || '';\n      repoName = parsed.searchParams.get('repo') || '';\n      organization = parsed.searchParams.get('organization') || '';\n      workspace = parsed.searchParams.get('workspace') || '';\n      project = parsed.searchParams.get('project') || '';\n    }\n  } catch {\n    /* ok */\n  }\n  return { host, owner, repoName, organization, workspace, project };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  scmIntegrationsApiRef,\n  scmAuthApiRef,\n} from '@backstage/integration-react';\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { GithubRepoPicker } from './GithubRepoPicker';\nimport { GiteaRepoPicker } from './GiteaRepoPicker';\nimport { GitlabRepoPicker } from './GitlabRepoPicker';\nimport { AzureRepoPicker } from './AzureRepoPicker';\nimport { BitbucketRepoPicker } from './BitbucketRepoPicker';\nimport { GerritRepoPicker } from './GerritRepoPicker';\nimport { RepoUrlPickerHost } from './RepoUrlPickerHost';\nimport { RepoUrlPickerRepoName } from './RepoUrlPickerRepoName';\nimport { parseRepoPickerUrl, serializeRepoPickerUrl } from './utils';\nimport { RepoUrlPickerProps } from './schema';\nimport { RepoUrlPickerState } from './types';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { useTemplateSecrets } from '@backstage/plugin-scaffolder-react';\nimport { Box, Divider, Typography } from '@material-ui/core';\n\nexport { RepoUrlPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `RepoUrlPicker`\n * field extension.\n *\n * @public\n */\nexport const RepoUrlPicker = (props: RepoUrlPickerProps) => {\n  const { uiSchema, onChange, rawErrors, formData, schema } = props;\n  const [state, setState] = useState<RepoUrlPickerState>(\n    parseRepoPickerUrl(formData),\n  );\n  const integrationApi = useApi(scmIntegrationsApiRef);\n  const scmAuthApi = useApi(scmAuthApiRef);\n  const { setSecrets } = useTemplateSecrets();\n  const allowedHosts = useMemo(\n    () => uiSchema?.['ui:options']?.allowedHosts ?? [],\n    [uiSchema],\n  );\n  const allowedOrganizations = useMemo(\n    () => uiSchema?.['ui:options']?.allowedOrganizations ?? [],\n    [uiSchema],\n  );\n  const allowedOwners = useMemo(\n    () => uiSchema?.['ui:options']?.allowedOwners ?? [],\n    [uiSchema],\n  );\n  const allowedProjects = useMemo(\n    () => uiSchema?.['ui:options']?.allowedProjects ?? [],\n    [uiSchema],\n  );\n  const allowedRepos = useMemo(\n    () => uiSchema?.['ui:options']?.allowedRepos ?? [],\n    [uiSchema],\n  );\n\n  const { owner, organization, project, repoName } = state;\n\n  useEffect(() => {\n    onChange(serializeRepoPickerUrl(state));\n  }, [state, onChange]);\n\n  /* we deal with calling the repo setting here instead of in each components for ease */\n  useEffect(() => {\n    if (allowedOrganizations.length > 0 && !organization) {\n      setState(prevState => ({\n        ...prevState,\n        organization: allowedOrganizations[0],\n      }));\n    }\n  }, [setState, allowedOrganizations, organization]);\n\n  useEffect(() => {\n    if (allowedOwners.length > 0 && !owner) {\n      setState(prevState => ({\n        ...prevState,\n        owner: allowedOwners[0],\n      }));\n    }\n  }, [setState, allowedOwners, owner]);\n\n  useEffect(() => {\n    if (allowedProjects.length > 0 && !project) {\n      setState(prevState => ({\n        ...prevState,\n        project: allowedProjects[0],\n      }));\n    }\n  }, [setState, allowedProjects, project]);\n\n  useEffect(() => {\n    if (allowedRepos.length > 0 && !repoName) {\n      setState(prevState => ({ ...prevState, repoName: allowedRepos[0] }));\n    }\n  }, [setState, allowedRepos, repoName]);\n\n  const updateLocalState = useCallback(\n    (newState: RepoUrlPickerState) => {\n      setState(prevState => ({ ...prevState, ...newState }));\n    },\n    [setState],\n  );\n\n  useDebounce(\n    async () => {\n      const { requestUserCredentials } = uiSchema?.['ui:options'] ?? {};\n\n      const workspace = state.owner ? state.owner : state.project;\n      if (\n        !requestUserCredentials ||\n        !(state.host && workspace && state.repoName)\n      ) {\n        return;\n      }\n\n      // previously, we were encodeURI for state.host, workspace and state.repoName separately.\n      // That created an issue where GitLab workspace can be nested like groupA/subgroupB\n      // when we encodeURi separately and then join, the URL will be malformed and\n      // resulting in 400 request error from GitLab API\n      const [encodedHost, encodedRepoName] = [state.host, state.repoName].map(\n        encodeURIComponent,\n      );\n\n      // user has requested that we use the users credentials\n      // so lets grab them using the scmAuthApi and pass through\n      // any additional scopes from the ui:options\n      const { token } = await scmAuthApi.getCredentials({\n        url: `https://${encodedHost}/${workspace}/${encodedRepoName}`,\n        additionalScope: {\n          repoWrite: true,\n          customScopes: requestUserCredentials.additionalScopes,\n        },\n      });\n\n      // set the secret using the key provided in the ui:options for use\n      // in the templating the manifest with ${{ secrets[secretsKey] }}\n      setSecrets({ [requestUserCredentials.secretsKey]: token });\n    },\n    500,\n    [state, uiSchema],\n  );\n\n  const hostType =\n    (state.host && integrationApi.byHost(state.host)?.type) ?? null;\n  return (\n    <>\n      {schema.title && (\n        <Box my={1}>\n          <Typography variant=\"h5\">{schema.title}</Typography>\n          <Divider />\n        </Box>\n      )}\n      {schema.description && (\n        <Typography variant=\"body1\">{schema.description}</Typography>\n      )}\n      <RepoUrlPickerHost\n        host={state.host}\n        hosts={allowedHosts}\n        onChange={host => setState(prevState => ({ ...prevState, host }))}\n        rawErrors={rawErrors}\n      />\n      {hostType === 'github' && (\n        <GithubRepoPicker\n          allowedOwners={allowedOwners}\n          onChange={updateLocalState}\n          rawErrors={rawErrors}\n          state={state}\n        />\n      )}\n      {hostType === 'gitea' && (\n        <GiteaRepoPicker\n          allowedOwners={allowedOwners}\n          allowedRepos={allowedRepos}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'gitlab' && (\n        <GitlabRepoPicker\n          allowedOwners={allowedOwners}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'bitbucket' && (\n        <BitbucketRepoPicker\n          allowedOwners={allowedOwners}\n          allowedProjects={allowedProjects}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'azure' && (\n        <AzureRepoPicker\n          allowedOrganizations={allowedOrganizations}\n          allowedOwners={allowedOwners}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'gerrit' && (\n        <GerritRepoPicker\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      <RepoUrlPickerRepoName\n        repoName={state.repoName}\n        allowedRepos={allowedRepos}\n        onChange={repo =>\n          setState(prevState => ({ ...prevState, repoName: repo }))\n        }\n        rawErrors={rawErrors}\n      />\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\nimport { entityQueryFilterExpressionSchema } from '../EntityPicker/schema';\n\n/**\n * @public\n */\nexport const OwnedEntityPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    allowedKinds: z\n      .array(z.string())\n      .optional()\n      .describe(\n        'DEPRECATED: Use `catalogFilter` instead. List of kinds of entities to derive options from',\n      ),\n    defaultKind: z\n      .string()\n      .optional()\n      .describe(\n        'The default entity kind. Options of this kind will not be prefixed.',\n      ),\n    allowArbitraryValues: z\n      .boolean()\n      .optional()\n      .describe('Whether to allow arbitrary user input. Defaults to true'),\n    defaultNamespace: z\n      .union([z.string(), z.literal(false)])\n      .optional()\n      .describe(\n        'The default namespace. Options with this namespace will not be prefixed.',\n      ),\n    catalogFilter: z\n      .array(entityQueryFilterExpressionSchema)\n      .or(entityQueryFilterExpressionSchema)\n      .optional()\n      .describe('List of key-value filter expression for entities'),\n  }),\n);\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnedEntityPicker` field extension.\n *\n * @public\n */\nexport type OwnedEntityPickerUiOptions =\n  typeof OwnedEntityPickerFieldSchema.uiOptionsType;\n\nexport type OwnedEntityPickerProps = typeof OwnedEntityPickerFieldSchema.type;\n\nexport const OwnedEntityPickerSchema = OwnedEntityPickerFieldSchema.schema;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core-plugin-api';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { EntityPicker } from '../EntityPicker/EntityPicker';\n\nimport { OwnedEntityPickerProps } from './schema';\nimport { EntityPickerProps } from '../EntityPicker/schema';\n\nexport { OwnedEntityPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `OwnedEntityPicker`\n * field extension.\n *\n * @public\n */\nexport const OwnedEntityPicker = (props: OwnedEntityPickerProps) => {\n  const {\n    schema: { title = 'Entity', description = 'An entity from the catalog' },\n    uiSchema,\n    required,\n  } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const { loading, value: identityRefs } = useAsync(async () => {\n    const identity = await identityApi.getBackstageIdentity();\n    return identity.ownershipEntityRefs;\n  });\n\n  if (loading)\n    return (\n      <Autocomplete\n        loading={loading}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"dense\"\n            helperText={description}\n            FormHelperTextProps={{ margin: 'dense', style: { marginLeft: 0 } }}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n        options={[]}\n      />\n    );\n\n  const entityPickerUISchema = buildEntityPickerUISchema(\n    uiSchema,\n    identityRefs,\n  );\n\n  return <EntityPicker {...props} uiSchema={entityPickerUISchema} />;\n};\n\n/**\n * Builds a `uiSchema` for an `EntityPicker` from a parent `OwnedEntityPicker`.\n * Migrates deprecated parameters such as `allowedKinds` to `catalogFilter` structure.\n *\n * @param uiSchema The `uiSchema` of an `OwnedEntityPicker` component.\n * @param identityRefs The user and group entities that the user claims ownership through.\n * @returns The `uiSchema` for an `EntityPicker` component.\n */\nfunction buildEntityPickerUISchema(\n  uiSchema: OwnedEntityPickerProps['uiSchema'],\n  identityRefs: string[] | undefined,\n): EntityPickerProps['uiSchema'] {\n  // Note: This is typed to avoid es-lint rule TS2698\n  const uiOptions: EntityPickerProps['uiSchema']['ui:options'] =\n    uiSchema?.['ui:options'] || {};\n  const allowedKinds = uiOptions.allowedKinds;\n\n  const catalogFilter = {\n    ...uiOptions.catalogFilter,\n    ...(allowedKinds\n      ? {\n          kind: allowedKinds,\n          [`relations.${RELATION_OWNED_BY}`]: identityRefs || [],\n        }\n      : {\n          [`relations.${RELATION_OWNED_BY}`]: identityRefs || [],\n        }),\n  };\n\n  return {\n    'ui:options': {\n      catalogFilter,\n    },\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\n\n/**\n * @public\n */\nexport const EntityTagsPickerFieldSchema = makeFieldSchemaFromZod(\n  z.array(z.string()),\n  z.object({\n    kinds: z\n      .array(z.string())\n      .optional()\n      .describe('List of kinds of entities to derive tags from'),\n    showCounts: z\n      .boolean()\n      .optional()\n      .describe('Whether to show usage counts per tag'),\n    helperText: z.string().optional().describe('Helper text to display'),\n  }),\n);\n\nexport const EntityTagsPickerSchema = EntityTagsPickerFieldSchema.schema;\n\nexport type EntityTagsPickerProps = typeof EntityTagsPickerFieldSchema.type;\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `EntityTagsPicker` field extension.\n *\n * @public\n */\nexport type EntityTagsPickerUiOptions =\n  typeof EntityTagsPickerFieldSchema.uiOptionsType;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport useEffectOnce from 'react-use/lib/useEffectOnce';\nimport { GetEntityFacetsRequest } from '@backstage/catalog-client';\nimport { makeValidator } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { FormControl, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { EntityTagsPickerProps } from './schema';\n\nexport { EntityTagsPickerSchema } from './schema';\n\n/**\n * The underlying component that is rendered in the form for the `EntityTagsPicker`\n * field extension.\n *\n * @public\n */\nexport const EntityTagsPicker = (props: EntityTagsPickerProps) => {\n  const { formData, onChange, uiSchema } = props;\n  const catalogApi = useApi(catalogApiRef);\n  const [tagOptions, setTagOptions] = useState<string[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const tagValidator = makeValidator().isValidTag;\n  const kinds = uiSchema['ui:options']?.kinds;\n  const showCounts = uiSchema['ui:options']?.showCounts;\n  const helperText = uiSchema['ui:options']?.helperText;\n\n  const { loading, value: existingTags } = useAsync(async () => {\n    const facet = 'metadata.tags';\n    const tagsRequest: GetEntityFacetsRequest = { facets: [facet] };\n    if (kinds) {\n      tagsRequest.filter = { kind: kinds };\n    }\n\n    const { facets } = await catalogApi.getEntityFacets(tagsRequest);\n\n    const tagFacets = Object.fromEntries(\n      facets[facet].map(({ value, count }) => [value, count]),\n    );\n\n    setTagOptions(\n      Object.keys(tagFacets).sort((a, b) =>\n        showCounts ? tagFacets[b] - tagFacets[a] : a.localeCompare(b),\n      ),\n    );\n\n    return tagFacets;\n  });\n\n  const setTags = (_: React.ChangeEvent<{}>, values: string[] | null) => {\n    // Reset error state in case all tags were removed\n    let hasError = false;\n    let addDuplicate = false;\n    const currentTags = formData || [];\n\n    // If adding a new tag\n    if (values?.length && currentTags.length < values.length) {\n      const newTag = (values[values.length - 1] = values[values.length - 1]\n        .toLocaleLowerCase('en-US')\n        .trim());\n      hasError = !tagValidator(newTag);\n      addDuplicate = currentTags.indexOf(newTag) !== -1;\n    }\n\n    setInputError(hasError);\n    setInputValue(!hasError ? '' : inputValue);\n    if (!hasError && !addDuplicate) {\n      onChange(values || []);\n    }\n  };\n\n  // Initialize field to always return an array\n  useEffectOnce(() => onChange(formData || []));\n\n  return (\n    <FormControl margin=\"normal\">\n      <Autocomplete\n        multiple\n        freeSolo\n        filterSelectedOptions\n        onChange={setTags}\n        value={formData || []}\n        inputValue={inputValue}\n        loading={loading}\n        options={tagOptions}\n        ChipProps={{ size: 'small' }}\n        renderOption={option =>\n          showCounts ? `${option} (${existingTags?.[option]})` : option\n        }\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Tags\"\n            onChange={e => setInputValue(e.target.value)}\n            error={inputError}\n            helperText={\n              helperText ??\n              \"Add any relevant tags, hit 'Enter' to add new tags. Valid format: [a-z0-9+#] separated by [-], at most 63 characters\"\n            }\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createExternalRouteRef,\n  createRouteRef,\n  createSubRouteRef,\n} from '@backstage/core-plugin-api';\n\nexport const registerComponentRouteRef = createExternalRouteRef({\n  id: 'register-component',\n  optional: true,\n});\n\nexport const viewTechDocRouteRef = createExternalRouteRef({\n  id: 'view-techdoc',\n  optional: true,\n  params: ['namespace', 'kind', 'name'],\n});\n\n/**\n * @public\n */\nexport const rootRouteRef = createRouteRef({\n  id: 'scaffolder',\n});\n\n/**\n * @deprecated This is the old template route, can be deleted before next major release\n * @public\n */\nexport const legacySelectedTemplateRouteRef = createSubRouteRef({\n  id: 'scaffolder/legacy/selected-template',\n  parent: rootRouteRef,\n  path: '/templates/:templateName',\n});\n\nexport const selectedTemplateRouteRef = createSubRouteRef({\n  id: 'scaffolder/selected-template',\n  parent: rootRouteRef,\n  path: '/templates/:namespace/:templateName',\n});\n\nexport const scaffolderTaskRouteRef = createSubRouteRef({\n  id: 'scaffolder/task',\n  parent: rootRouteRef,\n  path: '/tasks/:taskId',\n});\n\nexport const scaffolderListTaskRouteRef = createSubRouteRef({\n  id: 'scaffolder/list-tasks',\n  parent: rootRouteRef,\n  path: '/tasks',\n});\n\nexport const actionsRouteRef = createSubRouteRef({\n  id: 'scaffolder/actions',\n  parent: rootRouteRef,\n  path: '/actions',\n});\n\nexport const editRouteRef = createSubRouteRef({\n  id: 'scaffolder/edit',\n  parent: rootRouteRef,\n  path: '/edit',\n});\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '../utils';\n\n/**\n * Field schema for the MyGroupsPicker.\n * @public\n */\n\nexport const MyGroupsPickerFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    title: z.string().default('Group').describe('Group'),\n    description: z\n      .string()\n      .default('A group you are part of')\n      .describe('The group to which the entity belongs'),\n  }),\n);\n\n/**\n * UI options for the MyGroupsPicker.\n * @public\n */\n\nexport type MyGroupsPickerUiOptions =\n  typeof MyGroupsPickerFieldSchema.uiOptionsType;\n/**\n * Props for the MyGroupsPicker.\n * @public\n */\n\nexport type MyGroupsPickerProps = typeof MyGroupsPickerFieldSchema.type;\n\n/**\n * Schema for the MyGroupsPicker.\n * @public\n */\n\nexport const MyGroupsPickerSchema = MyGroupsPickerFieldSchema.schema;\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n  errorApiRef,\n  identityApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport { TextField, FormControl } from '@material-ui/core';\nimport { MyGroupsPickerProps, MyGroupsPickerSchema } from './schema';\nimport { Autocomplete } from '@material-ui/lab';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { NotFoundError } from '@backstage/errors';\nimport useAsync from 'react-use/lib/useAsync';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\n\nexport { MyGroupsPickerSchema };\n\nexport const MyGroupsPicker = (props: MyGroupsPickerProps) => {\n  const {\n    schema: { title, description },\n    required,\n    rawErrors,\n    onChange,\n  } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const catalogApi = useApi(catalogApiRef);\n  const errorApi = useApi(errorApiRef);\n  const [groups, setGroups] = useState<\n    {\n      label: string;\n      ref: string;\n    }[]\n  >([]);\n  const [selectedGroup, setSelectedGroup] = useState<null | {\n    label: string;\n    ref: string;\n  }>(null);\n\n  useAsync(async () => {\n    const { userEntityRef } = await identityApi.getBackstageIdentity();\n\n    if (!userEntityRef) {\n      errorApi.post(new NotFoundError('No user entity ref found'));\n      return;\n    }\n\n    const { items } = await catalogApi.getEntities({\n      filter: {\n        kind: 'Group',\n        ['relations.hasMember']: [userEntityRef],\n      },\n    });\n\n    const groupValues = items\n      .filter((e): e is Entity => Boolean(e))\n      .map(item => ({\n        label: item.metadata.title ?? item.metadata.name,\n        ref: stringifyEntityRef(item),\n      }));\n\n    setGroups(groupValues);\n  });\n\n  const updateChange = (\n    _: React.ChangeEvent<{}>,\n    value: { label: string; ref: string } | null,\n  ) => {\n    setSelectedGroup(value);\n    onChange(value?.ref ?? '');\n  };\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0}\n    >\n      <Autocomplete\n        id=\"OwnershipEntityRefPicker-dropdown\"\n        options={groups || []}\n        value={selectedGroup}\n        onChange={updateChange}\n        getOptionLabel={group => group.label}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"dense\"\n            helperText={description}\n            FormHelperTextProps={{ margin: 'dense', style: { marginLeft: 0 } }}\n            variant=\"outlined\"\n            required={required}\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport {\n  createScaffolderFieldExtension,\n  scaffolderApiRef,\n} from '@backstage/plugin-scaffolder-react';\nimport { ScaffolderClient } from './api';\nimport {\n  EntityPicker,\n  EntityPickerSchema,\n} from './components/fields/EntityPicker/EntityPicker';\nimport { entityNamePickerValidation } from './components/fields/EntityNamePicker';\nimport {\n  EntityNamePicker,\n  EntityNamePickerSchema,\n} from './components/fields/EntityNamePicker/EntityNamePicker';\nimport {\n  OwnerPicker,\n  OwnerPickerSchema,\n} from './components/fields/OwnerPicker/OwnerPicker';\nimport { repoPickerValidation } from './components/fields/RepoUrlPicker';\nimport {\n  RepoUrlPicker,\n  RepoUrlPickerSchema,\n} from './components/fields/RepoUrlPicker/RepoUrlPicker';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  fetchApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  OwnedEntityPicker,\n  OwnedEntityPickerSchema,\n} from './components/fields/OwnedEntityPicker/OwnedEntityPicker';\nimport {\n  EntityTagsPicker,\n  EntityTagsPickerSchema,\n} from './components/fields/EntityTagsPicker/EntityTagsPicker';\nimport {\n  registerComponentRouteRef,\n  rootRouteRef,\n  viewTechDocRouteRef,\n  selectedTemplateRouteRef,\n  scaffolderTaskRouteRef,\n  scaffolderListTaskRouteRef,\n  actionsRouteRef,\n  editRouteRef,\n} from './routes';\nimport {\n  MyGroupsPicker,\n  MyGroupsPickerSchema,\n} from './components/fields/MyGroupsPicker/MyGroupsPicker';\n\n/**\n * The main plugin export for the scaffolder.\n * @public\n */\nexport const scaffolderPlugin = createPlugin({\n  id: 'scaffolder',\n  apis: [\n    createApiFactory({\n      api: scaffolderApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n        fetchApi: fetchApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ discoveryApi, scmIntegrationsApi, fetchApi, identityApi }) =>\n        new ScaffolderClient({\n          discoveryApi,\n          scmIntegrationsApi,\n          fetchApi,\n          identityApi,\n        }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n    selectedTemplate: selectedTemplateRouteRef,\n    ongoingTask: scaffolderTaskRouteRef,\n    actions: actionsRouteRef,\n    listTasks: scaffolderListTaskRouteRef,\n    edit: editRouteRef,\n  },\n  externalRoutes: {\n    registerComponent: registerComponentRouteRef,\n    viewTechDoc: viewTechDocRouteRef,\n  },\n});\n\n/**\n * A field extension for selecting an Entity that exists in the Catalog.\n *\n * @public\n */\nexport const EntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityPicker,\n    name: 'EntityPicker',\n    schema: EntityPickerSchema,\n  }),\n);\n\n/**\n * The field extension for selecting a name for a new Entity in the Catalog.\n *\n * @public\n */\nexport const EntityNamePickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityNamePicker,\n    name: 'EntityNamePicker',\n    validation: entityNamePickerValidation,\n    schema: EntityNamePickerSchema,\n  }),\n);\n\n/**\n * The field extension which provides the ability to select a RepositoryUrl.\n * Currently, this is an encoded URL that looks something like the following `github.com?repo=myRepoName&owner=backstage`.\n *\n * @public\n */\nexport const RepoUrlPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: RepoUrlPicker,\n    name: 'RepoUrlPicker',\n    validation: repoPickerValidation,\n    schema: RepoUrlPickerSchema,\n  }),\n);\n\n/**\n * A field extension for picking users and groups out of the Catalog.\n *\n * @public\n */\nexport const OwnerPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnerPicker,\n    name: 'OwnerPicker',\n    schema: OwnerPickerSchema,\n  }),\n);\n\n/**\n * A field extension for picking groups a user belongs to out of the catalog.\n *\n * @public\n */\nexport const MyGroupsPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: MyGroupsPicker,\n    name: 'MyGroupsPicker',\n    schema: MyGroupsPickerSchema,\n  }),\n);\n\n/**\n * The Router and main entrypoint to the Scaffolder plugin.\n *\n * @public\n */\nexport const ScaffolderPage = scaffolderPlugin.provide(\n  createRoutableExtension({\n    name: 'ScaffolderPage',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * A field extension to show all the Entities that are owned by the current logged-in User for use in templates.\n *\n * @public\n */\nexport const OwnedEntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnedEntityPicker,\n    name: 'OwnedEntityPicker',\n    schema: OwnedEntityPickerSchema,\n  }),\n);\n\n/**\n * EntityTagsPickerFieldExtension\n * @public\n */\nexport const EntityTagsPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityTagsPicker,\n    name: 'EntityTagsPicker',\n    schema: EntityTagsPickerSchema,\n  }),\n);\n\n/**\n * @alpha\n * The Router and main entrypoint to the Alpha Scaffolder plugin.\n */\nexport const LegacyScaffolderPage = scaffolderPlugin.provide(\n  createRoutableExtension({\n    name: 'LegacyScaffolderPage',\n    component: () => import('./legacy/Router').then(m => m.LegacyRouter),\n    mountPoint: rootRouteRef,\n  }),\n);\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport capitalize from 'lodash/capitalize';\nimport { Progress } from '@backstage/core-components';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useEntityTypeFilter } from '@backstage/plugin-catalog-react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/**\n * The component to select the `type` of `Template` that you will see in the table.\n *\n * @public\n */\nexport const TemplateTypePicker = () => {\n  const alertApi = useApi(alertApiRef);\n  const { error, loading, availableTypes, selectedTypes, setSelectedTypes } =\n    useEntityTypeFilter();\n\n  if (loading) return <Progress />;\n\n  if (!availableTypes) return null;\n\n  if (error) {\n    alertApi.post({\n      message: `Failed to load entity types`,\n      severity: 'error',\n    });\n    return null;\n  }\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography\n        variant=\"button\"\n        component=\"label\"\n        htmlFor=\"categories-picker\"\n      >\n        Categories\n      </Typography>\n      <Autocomplete<string, true>\n        id=\"categories-picker\"\n        multiple\n        options={availableTypes}\n        value={selectedTypes}\n        onChange={(_: object, value: string[]) => setSelectedTypes(value)}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                checked={selected}\n              />\n            }\n            label={capitalize(option)}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"categories-picker-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  MenuList,\n  Popover,\n  Theme,\n  useTheme,\n} from '@material-ui/core';\nimport { useAsync } from '@react-hookz/web';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Retry from '@material-ui/icons/Repeat';\nimport Toc from '@material-ui/icons/Toc';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport React, { useState } from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\n\ntype ContextMenuProps = {\n  cancelEnabled?: boolean;\n  logsVisible?: boolean;\n  buttonBarVisible?: boolean;\n  onStartOver?: () => void;\n  onToggleLogs?: (state: boolean) => void;\n  onToggleButtonBar?: (state: boolean) => void;\n  taskId?: string;\n};\n\nconst useStyles = makeStyles<Theme, { fontColor: string }>(() => ({\n  button: {\n    color: ({ fontColor }) => fontColor,\n  },\n}));\n\nexport const ContextMenu = (props: ContextMenuProps) => {\n  const {\n    cancelEnabled,\n    logsVisible,\n    buttonBarVisible,\n    onStartOver,\n    onToggleLogs,\n    onToggleButtonBar,\n    taskId,\n  } = props;\n  const { getPageTheme } = useTheme();\n  const pageTheme = getPageTheme({ themeId: 'website' });\n  const classes = useStyles({ fontColor: pageTheme.fontColor });\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement>();\n\n  const [{ status: cancelStatus }, { execute: cancel }] = useAsync(async () => {\n    if (taskId) {\n      await scaffolderApi.cancelTask(taskId);\n    }\n  });\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={(event: React.SyntheticEvent<HTMLButtonElement>) => {\n          setAnchorEl(event.currentTarget);\n        }}\n        data-testid=\"menu-button\"\n        className={classes.button}\n      >\n        <MoreVert />\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(undefined)}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuList>\n          <MenuItem onClick={() => onToggleLogs?.(!logsVisible)}>\n            <ListItemIcon>\n              <Toc fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary={logsVisible ? 'Hide Logs' : 'Show Logs'} />\n          </MenuItem>\n          <MenuItem onClick={() => onToggleButtonBar?.(!buttonBarVisible)}>\n            <ListItemIcon>\n              <ControlPointIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={buttonBarVisible ? 'Hide Button Bar' : 'Show Button Bar'}\n            />\n          </MenuItem>\n          <MenuItem onClick={onStartOver}>\n            <ListItemIcon>\n              <Retry fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Start Over\" />\n          </MenuItem>\n          <MenuItem\n            onClick={cancel}\n            disabled={!cancelEnabled || cancelStatus !== 'not-executed'}\n            data-testid=\"cancel-task\"\n          >\n            <ListItemIcon>\n              <Cancel fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Cancel\" />\n          </MenuItem>\n        </MenuList>\n      </Popover>\n    </>\n  );\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Content, ErrorPanel, Header, Page } from '@backstage/core-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Box, Button, makeStyles, Paper } from '@material-ui/core';\nimport {\n  ScaffolderTaskOutput,\n  scaffolderApiRef,\n  useTaskEventStream,\n} from '@backstage/plugin-scaffolder-react';\nimport { selectedTemplateRouteRef } from '../../routes';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport qs from 'qs';\nimport { ContextMenu } from './ContextMenu';\nimport {\n  DefaultTemplateOutputs,\n  TaskLogStream,\n  TaskSteps,\n} from '@backstage/plugin-scaffolder-react/alpha';\nimport { useAsync } from '@react-hookz/web';\n\nconst useStyles = makeStyles(theme => ({\n  contentWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  buttonBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'right',\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1),\n  },\n  logsVisibilityButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n/**\n * @public\n */\nexport const OngoingTask = (props: {\n  TemplateOutputsComponent?: React.ComponentType<{\n    output?: ScaffolderTaskOutput;\n  }>;\n}) => {\n  // todo(blam): check that task Id actually exists, and that it's valid. otherwise redirect to something more useful.\n  const { taskId } = useParams();\n  const templateRouteRef = useRouteRef(selectedTemplateRouteRef);\n  const navigate = useNavigate();\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const taskStream = useTaskEventStream(taskId!);\n  const classes = useStyles();\n  const steps = useMemo(\n    () =>\n      taskStream.task?.spec.steps.map(step => ({\n        ...step,\n        ...taskStream?.steps?.[step.id],\n      })) ?? [],\n    [taskStream],\n  );\n\n  const [logsVisible, setLogVisibleState] = useState(false);\n  const [buttonBarVisible, setButtonBarVisibleState] = useState(true);\n\n  useEffect(() => {\n    if (taskStream.error) {\n      setLogVisibleState(true);\n    }\n  }, [taskStream.error]);\n\n  useEffect(() => {\n    if (taskStream.completed && !taskStream.error) {\n      setButtonBarVisibleState(false);\n    }\n  }, [taskStream.error, taskStream.completed]);\n\n  const activeStep = useMemo(() => {\n    for (let i = steps.length - 1; i >= 0; i--) {\n      if (steps[i].status !== 'open') {\n        return i;\n      }\n    }\n\n    return 0;\n  }, [steps]);\n\n  const startOver = useCallback(() => {\n    const { namespace, name } =\n      taskStream.task?.spec.templateInfo?.entity?.metadata ?? {};\n\n    const formData = taskStream.task?.spec.parameters ?? {};\n\n    if (!namespace || !name) {\n      return;\n    }\n\n    navigate({\n      pathname: templateRouteRef({\n        namespace,\n        templateName: name,\n      }),\n      search: `?${qs.stringify({ formData: JSON.stringify(formData) })}`,\n    });\n  }, [\n    navigate,\n    taskStream.task?.spec.parameters,\n    taskStream.task?.spec.templateInfo?.entity?.metadata,\n    templateRouteRef,\n  ]);\n\n  const [{ status: cancelStatus }, { execute: triggerCancel }] = useAsync(\n    async () => {\n      if (taskId) {\n        await scaffolderApi.cancelTask(taskId);\n      }\n    },\n  );\n\n  const Outputs = props.TemplateOutputsComponent ?? DefaultTemplateOutputs;\n\n  const templateName =\n    taskStream.task?.spec.templateInfo?.entity?.metadata.name;\n\n  const cancelEnabled = !(taskStream.cancelled || taskStream.completed);\n\n  return (\n    <Page themeId=\"website\">\n      <Header\n        pageTitleOverride={`Run of ${templateName}`}\n        title={\n          <div>\n            Run of <code>{templateName}</code>\n          </div>\n        }\n        subtitle={`Task ${taskId}`}\n      >\n        <ContextMenu\n          cancelEnabled={cancelEnabled}\n          logsVisible={logsVisible}\n          buttonBarVisible={buttonBarVisible}\n          onStartOver={startOver}\n          onToggleLogs={setLogVisibleState}\n          onToggleButtonBar={setButtonBarVisibleState}\n          taskId={taskId}\n        />\n      </Header>\n      <Content className={classes.contentWrapper}>\n        {taskStream.error ? (\n          <Box paddingBottom={2}>\n            <ErrorPanel\n              error={taskStream.error}\n              titleFormat=\"markdown\"\n              title={taskStream.error.message}\n            />\n          </Box>\n        ) : null}\n\n        <Box paddingBottom={2}>\n          <TaskSteps\n            steps={steps}\n            activeStep={activeStep}\n            isComplete={taskStream.completed}\n            isError={Boolean(taskStream.error)}\n          />\n        </Box>\n\n        <Outputs output={taskStream.output} />\n\n        {buttonBarVisible ? (\n          <Box paddingBottom={2}>\n            <Paper>\n              <Box padding={2}>\n                <div className={classes.buttonBar}>\n                  <Button\n                    className={classes.cancelButton}\n                    disabled={!cancelEnabled || cancelStatus !== 'not-executed'}\n                    onClick={triggerCancel}\n                    data-testid=\"cancel-button\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    className={classes.logsVisibilityButton}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() => setLogVisibleState(!logsVisible)}\n                  >\n                    {logsVisible ? 'Hide Logs' : 'Show Logs'}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={cancelEnabled}\n                    onClick={startOver}\n                  >\n                    Start Over\n                  </Button>\n                </div>\n              </Box>\n            </Paper>\n          </Box>\n        ) : null}\n\n        {logsVisible ? (\n          <Box paddingBottom={2} height=\"100%\">\n            <Paper style={{ height: '100%' }}>\n              <Box padding={2} height=\"100%\">\n                <TaskLogStream logs={taskStream.stepLogs} />\n              </Box>\n            </Paper>\n          </Box>\n        ) : null}\n      </Content>\n    </Page>\n  );\n};\n"],"names":["queryString","_a","_b","FormControl","Autocomplete","useStyles","useAsync","_c","_d","_e","_f"],"mappings":"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"}