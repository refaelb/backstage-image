import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';
import { UserTransformer, GroupTransformer, OrganizationTransformer } from '@backstage/plugin-catalog-backend-module-msgraph';

/**
 * Interface for {@link microsoftGraphOrgEntityProviderTransformExtensionPoint}.
 *
 * @alpha
 */
interface MicrosoftGraphOrgEntityProviderTransformsExtensionPoint {
    /**
     * Set the function that transforms a user entry in msgraph to an entity.
     * Optionally, you can pass separate transformers per provider ID.
     */
    setUserTransformer(transformer: UserTransformer | Record<string, UserTransformer>): void;
    /**
     * Set the function that transforms a group entry in msgraph to an entity.
     * Optionally, you can pass separate transformers per provider ID.
     */
    setGroupTransformer(transformer: GroupTransformer | Record<string, GroupTransformer>): void;
    /**
     * Set the function that transforms an organization entry in msgraph to an entity.
     * Optionally, you can pass separate transformers per provider ID.
     */
    setOrganizationTransformer(transformer: OrganizationTransformer | Record<string, OrganizationTransformer>): void;
}
/**
 * Extension point used to customize the transforms used by the module.
 *
 * @alpha
 */
declare const microsoftGraphOrgEntityProviderTransformExtensionPoint: _backstage_backend_plugin_api.ExtensionPoint<MicrosoftGraphOrgEntityProviderTransformsExtensionPoint>;
/**
 * Registers the MicrosoftGraphOrgEntityProvider with the catalog processing extension point.
 *
 * @alpha
 */
declare const catalogModuleMicrosoftGraphOrgEntityProvider: () => _backstage_backend_plugin_api.BackendFeature;

export { MicrosoftGraphOrgEntityProviderTransformsExtensionPoint, catalogModuleMicrosoftGraphOrgEntityProvider as default, microsoftGraphOrgEntityProviderTransformExtensionPoint };
