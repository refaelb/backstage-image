{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiFactory } from '@backstage/core-plugin-api';\nimport {\n  createApiExtension,\n  createPageExtension,\n  createPlugin,\n  createSchemaFromZod,\n} from '@backstage/frontend-plugin-api';\nimport React from 'react';\nimport { techRadarApiRef } from './api';\nimport { SampleTechRadarApi } from './sample';\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\nimport { rootRouteRef } from './plugin';\n\n/** @alpha */\nexport const techRadarPage = createPageExtension({\n  defaultPath: '/tech-radar',\n  routeRef: convertLegacyRouteRef(rootRouteRef),\n  configSchema: createSchemaFromZod(z =>\n    z.object({\n      title: z.string().default('Tech Radar'),\n      subtitle: z\n        .string()\n        .default('Pick the recommended technologies for your projects'),\n      pageTitle: z.string().default('Company Radar'),\n      path: z.string().default('/tech-radar'),\n      width: z.number().default(1500),\n      height: z.number().default(800),\n    }),\n  ),\n  loader: ({ config }) =>\n    import('./components').then(m =>\n      compatWrapper(<m.RadarPage {...config} />),\n    ),\n});\n\n/** @alpha */\nexport const techRadarApi = createApiExtension({\n  factory: createApiFactory(techRadarApiRef, new SampleTechRadarApi()),\n});\n\n/** @alpha */\nexport default createPlugin({\n  id: 'tech-radar',\n  extensions: [techRadarPage, techRadarApi],\n  routes: {\n    root: convertLegacyRouteRef(rootRouteRef),\n  },\n});\n"],"names":[],"mappings":";;;;;;AAiCO,MAAM,gBAAgB,mBAAoB,CAAA;AAAA,EAC/C,WAAa,EAAA,aAAA;AAAA,EACb,QAAA,EAAU,sBAAsB,YAAY,CAAA;AAAA,EAC5C,YAAc,EAAA,mBAAA;AAAA,IAAoB,CAAA,CAAA,KAChC,EAAE,MAAO,CAAA;AAAA,MACP,KAAO,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,YAAY,CAAA;AAAA,MACtC,QAAU,EAAA,CAAA,CACP,MAAO,EAAA,CACP,QAAQ,qDAAqD,CAAA;AAAA,MAChE,SAAW,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,eAAe,CAAA;AAAA,MAC7C,IAAM,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,aAAa,CAAA;AAAA,MACtC,KAAO,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,IAAI,CAAA;AAAA,MAC9B,MAAQ,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,GAAG,CAAA;AAAA,KAC/B,CAAA;AAAA,GACH;AAAA,EACA,QAAQ,CAAC,EAAE,QACT,KAAA,OAAO,6BAAc,CAAE,CAAA,IAAA;AAAA,IAAK,CAAA,CAAA,KAC1B,8BAAe,KAAA,CAAA,aAAA,CAAA,CAAA,CAAE,WAAF,EAAa,GAAG,QAAQ,CAAE,CAAA;AAAA,GAC3C;AACJ,CAAC,EAAA;AAGM,MAAM,eAAe,kBAAmB,CAAA;AAAA,EAC7C,OAAS,EAAA,gBAAA,CAAiB,eAAiB,EAAA,IAAI,oBAAoB,CAAA;AACrE,CAAC,EAAA;AAGD,YAAe,YAAa,CAAA;AAAA,EAC1B,EAAI,EAAA,YAAA;AAAA,EACJ,UAAA,EAAY,CAAC,aAAA,EAAe,YAAY,CAAA;AAAA,EACxC,MAAQ,EAAA;AAAA,IACN,IAAA,EAAM,sBAAsB,YAAY,CAAA;AAAA,GAC1C;AACF,CAAC,CAAA;;;;"}