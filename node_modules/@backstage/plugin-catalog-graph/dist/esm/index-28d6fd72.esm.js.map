{"version":3,"file":"index-28d6fd72.esm.js","sources":["../../src/components/CatalogGraphPage/CurveFilter.tsx","../../src/components/CatalogGraphPage/DirectionFilter.tsx","../../src/components/CatalogGraphPage/MaxDepthFilter.tsx","../../src/components/CatalogGraphPage/SelectedKindsFilter.tsx","../../src/components/CatalogGraphPage/SelectedRelationsFilter.tsx","../../src/components/CatalogGraphPage/SwitchFilter.tsx","../../src/components/CatalogGraphPage/useCatalogGraphPage.ts","../../src/components/CatalogGraphPage/CatalogGraphPage.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectedItems } from '@backstage/core-components';\nimport { Box } from '@material-ui/core';\nimport React, { useCallback } from 'react';\n\ntype Curve = 'curveStepBefore' | 'curveMonotoneX';\nconst CURVE_DISPLAY_NAMES: Record<Curve, string> = {\n  curveMonotoneX: 'Monotone X',\n  curveStepBefore: 'Step Before',\n};\n\nexport type Props = {\n  value: Curve;\n  onChange: (value: 'curveStepBefore' | 'curveMonotoneX') => void;\n};\n\nconst curves: Array<Curve> = ['curveMonotoneX', 'curveStepBefore'];\n\nexport const CurveFilter = ({ value, onChange }: Props) => {\n  const handleChange = useCallback(\n    (v: SelectedItems) => onChange(v as Curve),\n    [onChange],\n  );\n\n  return (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Curve\"\n        selected={value}\n        items={curves.map(v => ({\n          label: CURVE_DISPLAY_NAMES[v],\n          value: v,\n        }))}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectedItems } from '@backstage/core-components';\nimport { Box } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport { Direction } from '../EntityRelationsGraph';\n\nconst DIRECTION_DISPLAY_NAMES = {\n  [Direction.LEFT_RIGHT]: 'Left to right',\n  [Direction.RIGHT_LEFT]: 'Right to left',\n  [Direction.TOP_BOTTOM]: 'Top to bottom',\n  [Direction.BOTTOM_TOP]: 'Bottom to top',\n};\n\nexport type Props = {\n  value: Direction;\n  onChange: (value: Direction) => void;\n};\n\nexport const DirectionFilter = ({ value, onChange }: Props) => {\n  const handleChange = useCallback(\n    (v: SelectedItems) => onChange(v as Direction),\n    [onChange],\n  );\n\n  return (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Direction\"\n        selected={value}\n        items={Object.values(Direction).map(v => ({\n          label: DIRECTION_DISPLAY_NAMES[v],\n          value: v,\n        }))}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  OutlinedInput,\n  Typography,\n} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nexport type Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      width: '100%',\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphMaxDepthFilter' },\n);\n\nexport const MaxDepthFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const onChangeRef = useRef(onChange);\n  const [currentValue, setCurrentValue] = useState(value);\n\n  // Keep a fresh reference to the latest callback\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  // If the value changes externally, update ourselves\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  // When the entered text changes, update ourselves and communicate externally\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValueNumeric = Number(event.target.value);\n      const newValue =\n        Number.isFinite(newValueNumeric) && newValueNumeric > 0\n          ? newValueNumeric\n          : Number.POSITIVE_INFINITY;\n      setCurrentValue(newValue);\n      onChangeRef.current(newValue);\n    },\n    [],\n  );\n\n  const reset = useCallback(() => {\n    setCurrentValue(Number.POSITIVE_INFINITY);\n    onChangeRef.current(Number.POSITIVE_INFINITY);\n  }, [onChangeRef]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Typography variant=\"button\">Max Depth</Typography>\n        <OutlinedInput\n          type=\"number\"\n          placeholder=\"âˆž Infinite\"\n          value={Number.isFinite(currentValue) ? String(currentValue) : ''}\n          onChange={handleChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear max depth\"\n                onClick={reset}\n                edge=\"end\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          inputProps={{\n            'aria-label': 'maxp',\n          }}\n          labelWidth={0}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphSelectedKindsFilter' },\n);\n\nexport type Props = {\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedKindsFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const alertApi = useApi(alertApiRef);\n  const catalogApi = useApi(catalogApiRef);\n\n  const { error, value: kinds } = useAsync(async () => {\n    return await catalogApi\n      .getEntityFacets({ facets: ['kind'] })\n      .then(response => response.facets.kind?.map(f => f.value).sort() || []);\n  });\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: `Failed to load entity kinds`,\n        severity: 'error',\n      });\n    }\n  }, [error, alertApi]);\n\n  const normalizedKinds = useMemo(\n    () => (kinds ? kinds.map(k => k.toLocaleLowerCase('en-US')) : kinds),\n    [kinds],\n  );\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(\n        normalizedKinds && normalizedKinds.every(r => v.includes(r))\n          ? undefined\n          : v,\n      );\n    },\n    [normalizedKinds, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  if (!kinds?.length || !normalizedKinds?.length || error) {\n    return <></>;\n  }\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Kinds</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Kinds\"\n        options={normalizedKinds}\n        value={value ?? normalizedKinds}\n        getOptionLabel={k => kinds[normalizedKinds.indexOf(k)] ?? k}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={kinds[normalizedKinds.indexOf(option)] ?? option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-kinds-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useMemo } from 'react';\nimport { RelationPairs } from '../EntityRelationsGraph';\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphSelectedRelationsFilter' },\n);\n\nexport type Props = {\n  relationPairs: RelationPairs;\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedRelationsFilter = ({\n  relationPairs,\n  value,\n  onChange,\n}: Props) => {\n  const classes = useStyles();\n  const relations = useMemo(() => relationPairs.flat(), [relationPairs]);\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(relations.every(r => v.includes(r)) ? undefined : v);\n    },\n    [relations, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Relations</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Relations\"\n        options={relations}\n        value={value ?? relations}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-relations-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Box, FormControlLabel, makeStyles, Switch } from '@material-ui/core';\nimport React, { useCallback } from 'react';\n\nexport type Props = {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n};\n\nconst useStyles = makeStyles(\n  {\n    root: {\n      width: '100%',\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphSwitchFilter' },\n);\n\nexport const SwitchFilter = ({ label, value, onChange }: Props) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.checked);\n    },\n    [onChange],\n  );\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={value}\n            onChange={handleChange}\n            name={label}\n            color=\"primary\"\n          />\n        }\n        label={label}\n        className={classes.root}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport qs from 'qs';\nimport {\n  Dispatch,\n  DispatchWithoutAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { Direction } from '../EntityRelationsGraph';\n\nexport type CatalogGraphPageValue = {\n  rootEntityNames: CompoundEntityRef[];\n  setRootEntityNames: Dispatch<React.SetStateAction<CompoundEntityRef[]>>;\n  maxDepth: number;\n  setMaxDepth: Dispatch<React.SetStateAction<number>>;\n  selectedRelations: string[] | undefined;\n  setSelectedRelations: Dispatch<React.SetStateAction<string[] | undefined>>;\n  selectedKinds: string[] | undefined;\n  setSelectedKinds: Dispatch<React.SetStateAction<string[] | undefined>>;\n  unidirectional: boolean;\n  setUnidirectional: Dispatch<React.SetStateAction<boolean>>;\n  mergeRelations: boolean;\n  setMergeRelations: Dispatch<React.SetStateAction<boolean>>;\n  direction: Direction;\n  setDirection: Dispatch<React.SetStateAction<Direction>>;\n  curve: 'curveStepBefore' | 'curveMonotoneX';\n  setCurve: Dispatch<\n    React.SetStateAction<'curveStepBefore' | 'curveMonotoneX'>\n  >;\n  showFilters: boolean;\n  toggleShowFilters: DispatchWithoutAction;\n};\n\nexport function useCatalogGraphPage({\n  initialState = {},\n}: {\n  initialState?: {\n    selectedRelations?: string[] | undefined;\n    selectedKinds?: string[] | undefined;\n    rootEntityRefs?: string[];\n    maxDepth?: number;\n    unidirectional?: boolean;\n    mergeRelations?: boolean;\n    direction?: Direction;\n    showFilters?: boolean;\n    curve?: 'curveStepBefore' | 'curveMonotoneX';\n  };\n}): CatalogGraphPageValue {\n  const location = useLocation();\n  const query = useMemo(\n    () =>\n      (qs.parse(location.search, { arrayLimit: 0, ignoreQueryPrefix: true }) ||\n        {}) as {\n        selectedRelations?: string[] | string;\n        selectedKinds?: string[] | string;\n        rootEntityRefs?: string[] | string;\n        maxDepth?: string[] | string;\n        unidirectional?: string[] | string;\n        mergeRelations?: string[] | string;\n        direction?: string[] | Direction;\n        showFilters?: string[] | string;\n        curve?: string[] | 'curveStepBefore' | 'curveMonotoneX';\n      },\n    [location.search],\n  );\n\n  // Initial state\n  const [rootEntityNames, setRootEntityNames] = useState<CompoundEntityRef[]>(\n    () =>\n      (Array.isArray(query.rootEntityRefs)\n        ? query.rootEntityRefs\n        : initialState?.rootEntityRefs ?? []\n      ).map(r => parseEntityRef(r)),\n  );\n  const [maxDepth, setMaxDepth] = useState<number>(() =>\n    typeof query.maxDepth === 'string'\n      ? parseMaxDepth(query.maxDepth)\n      : initialState?.maxDepth ?? Number.POSITIVE_INFINITY,\n  );\n  const [selectedRelations, setSelectedRelations] = useState<\n    string[] | undefined\n  >(() =>\n    Array.isArray(query.selectedRelations)\n      ? query.selectedRelations\n      : initialState?.selectedRelations,\n  );\n  const [selectedKinds, setSelectedKinds] = useState<string[] | undefined>(() =>\n    (Array.isArray(query.selectedKinds)\n      ? query.selectedKinds\n      : initialState?.selectedKinds\n    )?.map(k => k.toLocaleLowerCase('en-US')),\n  );\n  const [unidirectional, setUnidirectional] = useState<boolean>(() =>\n    typeof query.unidirectional === 'string'\n      ? query.unidirectional === 'true'\n      : initialState?.unidirectional ?? true,\n  );\n  const [mergeRelations, setMergeRelations] = useState<boolean>(() =>\n    typeof query.mergeRelations === 'string'\n      ? query.mergeRelations === 'true'\n      : initialState?.mergeRelations ?? true,\n  );\n  const [direction, setDirection] = useState<Direction>(() =>\n    typeof query.direction === 'string'\n      ? query.direction\n      : initialState?.direction ?? Direction.LEFT_RIGHT,\n  );\n  const [curve, setCurve] = useState<'curveStepBefore' | 'curveMonotoneX'>(() =>\n    typeof query.curve === 'string'\n      ? query.curve\n      : initialState?.curve ?? 'curveMonotoneX',\n  );\n  const [showFilters, setShowFilters] = useState<boolean>(() =>\n    typeof query.showFilters === 'string'\n      ? query.showFilters === 'true'\n      : initialState?.showFilters ?? true,\n  );\n  const toggleShowFilters = useCallback(\n    () => setShowFilters(s => !s),\n    [setShowFilters],\n  );\n\n  // Update from query parameters\n  const prevQueryParams = usePrevious(location.search);\n  useEffect(() => {\n    // Only respond to changes to url query params\n    if (location.search === prevQueryParams) {\n      return;\n    }\n\n    if (Array.isArray(query.rootEntityRefs)) {\n      setRootEntityNames(query.rootEntityRefs.map(r => parseEntityRef(r)));\n    }\n\n    if (typeof query.maxDepth === 'string') {\n      setMaxDepth(parseMaxDepth(query.maxDepth));\n    }\n\n    if (Array.isArray(query.selectedKinds)) {\n      setSelectedKinds(query.selectedKinds);\n    }\n\n    if (Array.isArray(query.selectedRelations)) {\n      setSelectedRelations(query.selectedRelations);\n    }\n\n    if (typeof query.unidirectional === 'string') {\n      setUnidirectional(query.unidirectional === 'true');\n    }\n\n    if (typeof query.mergeRelations === 'string') {\n      setMergeRelations(query.mergeRelations === 'true');\n    }\n\n    if (typeof query.direction === 'string') {\n      setDirection(query.direction);\n    }\n\n    if (typeof query.showFilters === 'string') {\n      setShowFilters(query.showFilters === 'true');\n    }\n  }, [\n    prevQueryParams,\n    location.search,\n    query,\n    setRootEntityNames,\n    setMaxDepth,\n    setSelectedKinds,\n    setSelectedRelations,\n    setUnidirectional,\n    setMergeRelations,\n    setDirection,\n    setShowFilters,\n  ]);\n\n  // Update query parameters\n  const previousRootEntityRefs = usePrevious(\n    rootEntityNames.map(e => stringifyEntityRef(e)),\n  );\n\n  useEffect(() => {\n    const rootEntityRefs = rootEntityNames.map(e => stringifyEntityRef(e));\n    const newParams = qs.stringify(\n      {\n        rootEntityRefs,\n        maxDepth: isFinite(maxDepth) ? maxDepth : 'âˆž',\n        selectedKinds,\n        selectedRelations,\n        unidirectional,\n        mergeRelations,\n        direction,\n        showFilters,\n      },\n      { arrayFormat: 'brackets', addQueryPrefix: true },\n    );\n    const newUrl = `${window.location.pathname}${newParams}`;\n\n    // We directly manipulate window history here in order to not re-render\n    // infinitely (state => location => state => etc). The intention of this\n    // code is just to ensure the right query/filters are loaded when a user\n    // clicks the \"back\" button after clicking a result.\n    // Only push a new history entry if we switched to another entity, but not\n    // if we just changed a viewer setting.\n    if (\n      !previousRootEntityRefs ||\n      (rootEntityRefs.length === previousRootEntityRefs.length &&\n        rootEntityRefs.every((v, i) => v === previousRootEntityRefs[i]))\n    ) {\n      window.history.replaceState(null, document.title, newUrl);\n    } else {\n      window.history.pushState(null, document.title, newUrl);\n    }\n  }, [\n    rootEntityNames,\n    maxDepth,\n    selectedKinds,\n    selectedRelations,\n    unidirectional,\n    mergeRelations,\n    direction,\n    showFilters,\n    previousRootEntityRefs,\n  ]);\n\n  return {\n    rootEntityNames,\n    setRootEntityNames,\n    maxDepth,\n    setMaxDepth,\n    selectedRelations,\n    setSelectedRelations,\n    selectedKinds,\n    setSelectedKinds,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    curve,\n    setCurve,\n    showFilters,\n    toggleShowFilters,\n  };\n}\n\nfunction parseMaxDepth(value: string): number {\n  return value === 'âˆž' ? Number.POSITIVE_INFINITY : Number(value);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  Page,\n  SupportButton,\n} from '@backstage/core-components';\nimport { useAnalytics, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  entityRouteRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport { ToggleButton } from '@material-ui/lab';\nimport React, { MouseEvent, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  ALL_RELATION_PAIRS,\n  Direction,\n  EntityNode,\n  EntityRelationsGraph,\n  EntityRelationsGraphProps,\n} from '../EntityRelationsGraph';\nimport { CurveFilter } from './CurveFilter';\nimport { DirectionFilter } from './DirectionFilter';\nimport { MaxDepthFilter } from './MaxDepthFilter';\nimport { SelectedKindsFilter } from './SelectedKindsFilter';\nimport { SelectedRelationsFilter } from './SelectedRelationsFilter';\nimport { SwitchFilter } from './SwitchFilter';\nimport { useCatalogGraphPage } from './useCatalogGraphPage';\n\nconst useStyles = makeStyles(\n  theme => ({\n    content: {\n      minHeight: 0,\n    },\n    container: {\n      height: '100%',\n      maxHeight: '100%',\n      minHeight: 0,\n    },\n    fullHeight: {\n      maxHeight: '100%',\n      display: 'flex',\n      minHeight: 0,\n    },\n    graphWrapper: {\n      position: 'relative',\n      flex: 1,\n      minHeight: 0,\n      display: 'flex',\n    },\n    graph: {\n      flex: 1,\n      minHeight: 0,\n    },\n    legend: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      padding: theme.spacing(1),\n      '& .icon': {\n        verticalAlign: 'bottom',\n      },\n    },\n    filters: {\n      display: 'grid',\n      gridGap: theme.spacing(1),\n      gridAutoRows: 'auto',\n      [theme.breakpoints.up('lg')]: {\n        display: 'block',\n      },\n      [theme.breakpoints.only('md')]: {\n        gridTemplateColumns: 'repeat(3, 1fr)',\n      },\n      [theme.breakpoints.only('sm')]: {\n        gridTemplateColumns: 'repeat(2, 1fr)',\n      },\n      [theme.breakpoints.down('xs')]: {\n        gridTemplateColumns: 'repeat(1, 1fr)',\n      },\n    },\n  }),\n  { name: 'PluginCatalogGraphCatalogGraphPage' },\n);\n\nexport const CatalogGraphPage = (\n  props: {\n    initialState?: {\n      selectedRelations?: string[];\n      selectedKinds?: string[];\n      rootEntityRefs?: string[];\n      maxDepth?: number;\n      unidirectional?: boolean;\n      mergeRelations?: boolean;\n      direction?: Direction;\n      showFilters?: boolean;\n      curve?: 'curveStepBefore' | 'curveMonotoneX';\n    };\n  } & Partial<EntityRelationsGraphProps>,\n) => {\n  const { relationPairs = ALL_RELATION_PAIRS, initialState } = props;\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const {\n    maxDepth,\n    setMaxDepth,\n    selectedKinds,\n    setSelectedKinds,\n    selectedRelations,\n    setSelectedRelations,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    curve,\n    setCurve,\n    rootEntityNames,\n    setRootEntityNames,\n    showFilters,\n    toggleShowFilters,\n  } = useCatalogGraphPage({ initialState });\n  const analytics = useAnalytics();\n  const onNodeClick = useCallback(\n    (node: EntityNode, event: MouseEvent<unknown>) => {\n      const nodeEntityName = parseEntityRef(node.id);\n\n      if (event.shiftKey) {\n        const path = catalogEntityRoute({\n          kind: nodeEntityName.kind.toLocaleLowerCase('en-US'),\n          namespace: nodeEntityName.namespace.toLocaleLowerCase('en-US'),\n          name: nodeEntityName.name,\n        });\n\n        analytics.captureEvent(\n          'click',\n          node.entity.metadata.title ?? humanizeEntityRef(nodeEntityName),\n          { attributes: { to: path } },\n        );\n        navigate(path);\n      } else {\n        analytics.captureEvent(\n          'click',\n          node.entity.metadata.title ?? humanizeEntityRef(nodeEntityName),\n        );\n        setRootEntityNames([nodeEntityName]);\n      }\n    },\n    [catalogEntityRoute, navigate, setRootEntityNames, analytics],\n  );\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        title=\"Catalog Graph\"\n        subtitle={rootEntityNames.map(e => humanizeEntityRef(e)).join(', ')}\n      />\n      <Content stretch className={classes.content}>\n        <ContentHeader\n          titleComponent={\n            <ToggleButton\n              value=\"show filters\"\n              selected={showFilters}\n              onChange={() => toggleShowFilters()}\n            >\n              <FilterListIcon /> Filters\n            </ToggleButton>\n          }\n        >\n          <SupportButton>\n            Start tracking your component in by adding it to the software\n            catalog.\n          </SupportButton>\n        </ContentHeader>\n        <Grid container alignItems=\"stretch\" className={classes.container}>\n          {showFilters && (\n            <Grid item xs={12} lg={2} className={classes.filters}>\n              <MaxDepthFilter value={maxDepth} onChange={setMaxDepth} />\n              <SelectedKindsFilter\n                value={selectedKinds}\n                onChange={setSelectedKinds}\n              />\n              <SelectedRelationsFilter\n                value={selectedRelations}\n                onChange={setSelectedRelations}\n                relationPairs={relationPairs}\n              />\n              <DirectionFilter value={direction} onChange={setDirection} />\n              <CurveFilter value={curve} onChange={setCurve} />\n              <SwitchFilter\n                value={unidirectional}\n                onChange={setUnidirectional}\n                label=\"Simplified\"\n              />\n              <SwitchFilter\n                value={mergeRelations}\n                onChange={setMergeRelations}\n                label=\"Merge Relations\"\n              />\n            </Grid>\n          )}\n          <Grid item xs className={classes.fullHeight}>\n            <Paper className={classes.graphWrapper}>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                display=\"block\"\n                className={classes.legend}\n              >\n                <ZoomOutMap className=\"icon\" /> Use pinch &amp; zoom to move\n                around the diagram. Click to change active node, shift click to\n                navigate to entity.\n              </Typography>\n              <EntityRelationsGraph\n                {...props}\n                rootEntityNames={rootEntityNames}\n                maxDepth={maxDepth}\n                kinds={\n                  selectedKinds && selectedKinds.length > 0\n                    ? selectedKinds\n                    : undefined\n                }\n                relations={\n                  selectedRelations && selectedRelations.length > 0\n                    ? selectedRelations\n                    : undefined\n                }\n                mergeRelations={mergeRelations}\n                unidirectional={unidirectional}\n                onNodeClick={onNodeClick}\n                direction={direction}\n                relationPairs={relationPairs}\n                className={classes.graph}\n                zoom=\"enabled\"\n                curve={curve}\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}