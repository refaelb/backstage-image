{"version":3,"file":"index.cjs.js","sources":["../src/collators/defaultCatalogCollatorEntityTransformer.ts","../src/collators/DefaultCatalogCollatorFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, isGroupEntity, isUserEntity } from '@backstage/catalog-model';\nimport { CatalogCollatorEntityTransformer } from './CatalogCollatorEntityTransformer';\n\nconst getDocumentText = (entity: Entity): string => {\n  const documentTexts: string[] = [];\n  documentTexts.push(entity.metadata.description || '');\n\n  if (isUserEntity(entity) || isGroupEntity(entity)) {\n    if (entity.spec?.profile?.displayName) {\n      documentTexts.push(entity.spec.profile.displayName);\n    }\n  }\n\n  if (isUserEntity(entity)) {\n    if (entity.spec?.profile?.email) {\n      documentTexts.push(entity.spec.profile.email);\n    }\n  }\n\n  return documentTexts.join(' : ');\n};\n\n/** @public */\nexport const defaultCatalogCollatorEntityTransformer: CatalogCollatorEntityTransformer =\n  (entity: Entity) => {\n    return {\n      title: entity.metadata.title ?? entity.metadata.name,\n      text: getDocumentText(entity),\n      componentType: entity.spec?.type?.toString() || 'other',\n      type: entity.spec?.type?.toString() || 'other',\n      namespace: entity.metadata.namespace || 'default',\n      kind: entity.kind,\n      lifecycle: (entity.spec?.lifecycle as string) || '',\n      owner: (entity.spec?.owner as string) || '',\n    };\n  };\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PluginEndpointDiscovery,\n  TokenManager,\n} from '@backstage/backend-common';\nimport {\n  CatalogApi,\n  CatalogClient,\n  GetEntitiesRequest,\n} from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { CatalogEntityDocument } from '@backstage/plugin-catalog-common';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport { Readable } from 'stream';\nimport { CatalogCollatorEntityTransformer } from './CatalogCollatorEntityTransformer';\nimport { readCollatorConfigOptions } from './config';\nimport { defaultCatalogCollatorEntityTransformer } from './defaultCatalogCollatorEntityTransformer';\n\n/** @public */\nexport type DefaultCatalogCollatorFactoryOptions = {\n  discovery: PluginEndpointDiscovery;\n  tokenManager: TokenManager;\n  /**\n   * @deprecated Use the config key `search.collators.catalog.locationTemplate` instead.\n   */\n  locationTemplate?: string;\n  /**\n   * @deprecated Use the config key `search.collators.catalog.filter` instead.\n   */\n  filter?: GetEntitiesRequest['filter'];\n  /**\n   * @deprecated Use the config key `search.collators.catalog.batchSize` instead.\n   */\n  batchSize?: number;\n  catalogClient?: CatalogApi;\n  /**\n   * Allows you to customize how entities are shaped into documents.\n   */\n  entityTransformer?: CatalogCollatorEntityTransformer;\n};\n\n/**\n * Collates entities from the Catalog into documents for the search backend.\n *\n * @public\n */\nexport class DefaultCatalogCollatorFactory implements DocumentCollatorFactory {\n  public readonly type = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private locationTemplate: string;\n  private filter?: GetEntitiesRequest['filter'];\n  private batchSize: number;\n  private readonly catalogClient: CatalogApi;\n  private tokenManager: TokenManager;\n  private entityTransformer: CatalogCollatorEntityTransformer;\n\n  static fromConfig(\n    configRoot: Config,\n    options: DefaultCatalogCollatorFactoryOptions,\n  ) {\n    const configOptions = readCollatorConfigOptions(configRoot);\n    return new DefaultCatalogCollatorFactory({\n      locationTemplate:\n        options.locationTemplate ?? configOptions.locationTemplate,\n      filter: options.filter ?? configOptions.filter,\n      batchSize: options.batchSize ?? configOptions.batchSize,\n      entityTransformer: options.entityTransformer,\n      discovery: options.discovery,\n      tokenManager: options.tokenManager,\n      catalogClient: options.catalogClient,\n    });\n  }\n\n  private constructor(options: {\n    locationTemplate: string;\n    filter: GetEntitiesRequest['filter'];\n    batchSize: number;\n    entityTransformer?: CatalogCollatorEntityTransformer;\n    discovery: PluginEndpointDiscovery;\n    tokenManager: TokenManager;\n    catalogClient?: CatalogApi;\n  }) {\n    const {\n      batchSize,\n      discovery,\n      locationTemplate,\n      filter,\n      catalogClient,\n      tokenManager,\n      entityTransformer,\n    } = options;\n\n    this.locationTemplate = locationTemplate;\n    this.filter = filter;\n    this.batchSize = batchSize;\n    this.catalogClient =\n      catalogClient || new CatalogClient({ discoveryApi: discovery });\n    this.tokenManager = tokenManager;\n    this.entityTransformer =\n      entityTransformer ?? defaultCatalogCollatorEntityTransformer;\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private async *execute(): AsyncGenerator<CatalogEntityDocument> {\n    const { token } = await this.tokenManager.getToken();\n    let entitiesRetrieved = 0;\n    let moreEntitiesToGet = true;\n\n    // Offset/limit pagination is used on the Catalog Client in order to\n    // limit (and allow some control over) memory used by the search backend\n    // at index-time.\n    while (moreEntitiesToGet) {\n      const entities = (\n        await this.catalogClient.getEntities(\n          {\n            filter: this.filter,\n            limit: this.batchSize,\n            offset: entitiesRetrieved,\n          },\n          { token },\n        )\n      ).items;\n\n      // Control looping through entity batches.\n      moreEntitiesToGet = entities.length === this.batchSize;\n      entitiesRetrieved += entities.length;\n\n      for (const entity of entities) {\n        yield {\n          ...this.entityTransformer(entity),\n          authorization: {\n            resourceRef: stringifyEntityRef(entity),\n          },\n          location: this.applyArgsToFormat(this.locationTemplate, {\n            namespace: entity.metadata.namespace || 'default',\n            kind: entity.kind,\n            name: entity.metadata.name,\n          }),\n        };\n      }\n    }\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n\n    return formatted.toLowerCase();\n  }\n}\n"],"names":["isUserEntity","isGroupEntity","catalogEntityReadPermission","catalogClient","CatalogClient","readCollatorConfigOptions","Readable","stringifyEntityRef"],"mappings":"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"}