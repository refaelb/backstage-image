{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/plugin.ts","../src/helpers/helpers.ts","../src/components/Cards/Group/MembersList/MembersListCard.tsx","../src/components/Cards/Meta/LinksGroup.tsx","../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx","../src/components/Cards/User/UserProfileCard/UserProfileCard.tsx","../src/components/Cards/OwnershipCard/useGetEntities.ts","../src/components/Cards/OwnershipCard/ComponentsGrid.tsx","../src/components/Cards/OwnershipCard/OwnershipCard.tsx","../src/components/MyGroupsSidebarItem/MyGroupsSidebarItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExternalRouteRef } from '@backstage/core-plugin-api';\n\nexport const catalogIndexRouteRef = createExternalRouteRef({\n  id: 'catalog-index',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createComponentExtension,\n  createPlugin,\n} from '@backstage/core-plugin-api';\nimport { catalogIndexRouteRef } from './routes';\n\n/** @public */\nexport const orgPlugin = createPlugin({\n  id: 'org',\n  externalRoutes: {\n    catalogIndex: catalogIndexRouteRef,\n  },\n});\n\n/** @public */\nexport const EntityGroupProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityGroupProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.GroupProfileCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityMembersListCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityMembersListCard',\n    component: {\n      lazy: () => import('./components').then(m => m.MembersListCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityOwnershipCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityOwnershipCard',\n    component: {\n      lazy: () => import('./components').then(m => m.OwnershipCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityUserProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityUserProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.UserProfileCard),\n    },\n  }),\n);\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  Entity,\n  GroupEntity,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport {\n  CatalogApi,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\n\nexport const getMembersFromGroups = async (\n  groups: CompoundEntityRef[],\n  catalogApi: CatalogApi,\n) => {\n  const membersList =\n    groups.length === 0\n      ? { items: [] }\n      : await catalogApi.getEntities({\n          filter: {\n            kind: 'User',\n            'relations.memberof': groups.map(group =>\n              stringifyEntityRef({\n                kind: 'group',\n                namespace: group.namespace.toLocaleLowerCase('en-US'),\n                name: group.name.toLocaleLowerCase('en-US'),\n              }),\n            ),\n          },\n        });\n\n  return membersList.items as UserEntity[];\n};\n\nexport const getDescendantGroupsFromGroup = async (\n  group: GroupEntity,\n  catalogApi: CatalogApi,\n) => {\n  const alreadyQueuedOrExpandedGroupNames = new Map<string, boolean>();\n  const groupRef: CompoundEntityRef = {\n    kind: group.kind,\n    namespace: group.metadata.namespace ?? DEFAULT_NAMESPACE,\n    name: group.metadata.name,\n  };\n\n  const groupQueue = [groupRef];\n  const resultantGroupRefs: CompoundEntityRef[] = [];\n\n  // Continue expanding groups until there are no more\n  while (groupQueue.length > 0) {\n    const activeGroupRef = groupQueue.shift() as CompoundEntityRef;\n    const activeGroup = await catalogApi.getEntityByRef(activeGroupRef);\n    alreadyQueuedOrExpandedGroupNames.set(\n      stringifyEntityRef(activeGroupRef),\n      true,\n    );\n\n    const childGroups = getEntityRelations(activeGroup, RELATION_PARENT_OF, {\n      kind: 'Group',\n    }).filter(\n      currentGroup =>\n        !alreadyQueuedOrExpandedGroupNames.has(\n          stringifyEntityRef(currentGroup),\n        ),\n    );\n    childGroups.forEach(childGroup =>\n      alreadyQueuedOrExpandedGroupNames.set(\n        stringifyEntityRef(childGroup),\n        true,\n      ),\n    );\n\n    groupQueue.push(...childGroups);\n    resultantGroupRefs.push(...childGroups);\n  }\n\n  return resultantGroupRefs;\n};\n\nexport const getAllDesendantMembersForGroupEntity = async (\n  groupEntity: GroupEntity,\n  catalogApi: CatalogApi,\n) =>\n  getMembersFromGroups(\n    await getDescendantGroupsFromGroup(groupEntity, catalogApi),\n    catalogApi,\n  );\n\nexport const removeDuplicateEntitiesFrom = (entityArray: Entity[]) => {\n  const seenEntities = new Map<string, boolean>();\n\n  return entityArray.filter(entity => {\n    const stringifiedEntity = stringifyEntityRef(entity);\n    const isDuplicate = seenEntities.has(stringifiedEntity);\n\n    seenEntities.set(stringifiedEntity, true);\n    return !isDuplicate;\n  });\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_NAMESPACE,\n  GroupEntity,\n  UserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Switch,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React, { useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  Link,\n  OverflowTooltip,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  getAllDesendantMembersForGroupEntity,\n  removeDuplicateEntitiesFrom,\n} from '../../../../helpers/helpers';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      overflow: 'visible',\n      position: 'relative',\n      margin: theme.spacing(4, 1, 1),\n      flex: '1',\n      minWidth: '0px',\n    },\n  }),\n);\n\nconst MemberComponent = (props: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName, description },\n    spec: { profile },\n  } = props.member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Box className={classes.card}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        m={3}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Avatar\n          displayName={displayName}\n          picture={profile?.picture}\n          customStyles={{\n            position: 'absolute',\n            top: '-2rem',\n          }}\n        />\n        <Box\n          pt={2}\n          sx={{\n            width: '100%',\n          }}\n          textAlign=\"center\"\n        >\n          <Typography variant=\"h6\">\n            <EntityRefLink\n              data-testid=\"user-link\"\n              entityRef={props.member}\n              title={displayName}\n            />\n          </Typography>\n          {profile?.email && (\n            <Link to={`mailto:${profile.email}`}>\n              <OverflowTooltip text={profile.email} />\n            </Link>\n          )}\n          {description && (\n            <Typography variant=\"subtitle2\">{description}</Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst useListStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n  },\n  cardContent: {\n    overflow: 'auto',\n  },\n  memberList: {\n    display: 'grid',\n    gap: theme.spacing(1.5),\n    gridTemplateColumns: `repeat(auto-fit, minmax(auto, ${theme.spacing(\n      34,\n    )}px))`,\n  },\n}));\n\n/** @public */\nexport const MembersListCard = (props: {\n  memberDisplayTitle?: string;\n  pageSize?: number;\n  showAggregateMembersToggle?: boolean;\n}) => {\n  const {\n    memberDisplayTitle = 'Members',\n    pageSize = 50,\n    showAggregateMembersToggle,\n  } = props;\n  const classes = useListStyles();\n\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || DEFAULT_NAMESPACE;\n\n  const [page, setPage] = React.useState(1);\n  const pageChange = (_: React.ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n\n  const [showAggregateMembers, setShowAggregateMembers] = useState(false);\n\n  const { loading: loadingDescendantMembers, value: descendantMembers } =\n    useAsync(async () => {\n      if (!showAggregateMembersToggle) {\n        return [] as UserEntity[];\n      }\n\n      return await getAllDesendantMembersForGroupEntity(\n        groupEntity,\n        catalogApi,\n      );\n    }, [catalogApi, groupEntity, showAggregateMembersToggle]);\n  const {\n    loading,\n    error,\n    value: directMembers,\n  } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: {\n        kind: 'User',\n        'relations.memberof': [\n          stringifyEntityRef({\n            kind: 'group',\n            namespace: groupNamespace.toLocaleLowerCase('en-US'),\n            name: groupName.toLocaleLowerCase('en-US'),\n          }),\n        ],\n      },\n    });\n\n    return membersList.items as UserEntity[];\n  }, [catalogApi, groupEntity]);\n\n  const members = removeDuplicateEntitiesFrom(\n    [\n      ...(directMembers ?? []),\n      ...(descendantMembers && showAggregateMembers ? descendantMembers : []),\n    ].sort((a, b) =>\n      stringifyEntityRef(a).localeCompare(stringifyEntityRef(b)),\n    ),\n  ) as UserEntity[];\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel = nbPages < 2 ? '' : `, page ${page} of ${nbPages}`;\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  let memberList: React.JSX.Element;\n  if (members && members.length > 0) {\n    memberList = (\n      <Box className={classes.memberList}>\n        {members.slice(pageSize * (page - 1), pageSize * page).map(member => (\n          <MemberComponent member={member} key={member.metadata.uid} />\n        ))}\n      </Box>\n    );\n  } else {\n    memberList = (\n      <Box p={2}>\n        <Typography>\n          This group has no {memberDisplayTitle.toLocaleLowerCase()}.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid item className={classes.root}>\n      <InfoCard\n        title={`${memberDisplayTitle} (${\n          members?.length || 0\n        }${paginationLabel})`}\n        subheader={`of ${displayName}`}\n        {...(nbPages <= 1 ? {} : { actions: pagination })}\n        className={classes.root}\n        cardClassName={classes.cardContent}\n      >\n        {showAggregateMembersToggle && (\n          <>\n            Direct Members\n            <Switch\n              color=\"primary\"\n              checked={showAggregateMembers}\n              onChange={() => {\n                setShowAggregateMembers(!showAggregateMembers);\n              }}\n              inputProps={{ 'aria-label': 'Users Type Switch' }}\n            />\n            Aggregated Members\n          </>\n        )}\n        {showAggregateMembers && loadingDescendantMembers ? (\n          <Progress />\n        ) : (\n          memberList\n        )}\n      </InfoCard>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityLink } from '@backstage/catalog-model';\nimport { IconComponent, useApp } from '@backstage/core-plugin-api';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Link } from '@backstage/core-components';\n\nconst WebLink = ({\n  href,\n  Icon,\n  text,\n}: {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n}) => (\n  <ListItem key={href}>\n    <ListItemIcon>{Icon ? <Icon /> : <LanguageIcon />}</ListItemIcon>\n    <ListItemText>\n      <Link to={href}>{text}</Link>\n    </ListItemText>\n  </ListItem>\n);\n\nexport const LinksGroup = ({ links }: { links?: EntityLink[] }) => {\n  const app = useApp();\n  const iconResolver = (key?: string): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  if (links === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Divider />\n      {links.map(link => {\n        return (\n          <WebLink\n            key={link.url}\n            href={link.url}\n            text={link.title}\n            Icon={iconResolver(link.icon)}\n          />\n        );\n      })}\n    </>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport {\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EntityRefLinks,\n  catalogApiRef,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport React, { useCallback } from 'react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Alert from '@material-ui/lab/Alert';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { LinksGroup } from '../../Meta';\nimport { useEntityPermission } from '@backstage/plugin-catalog-react/alpha';\nimport { catalogEntityRefreshPermission } from '@backstage/plugin-catalog-common/alpha';\n\nconst CardTitle = (props: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{props.title}</Box>\n  </Box>\n);\n\n/** @public */\nexport const GroupProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n  const { allowed: canRefresh } = useEntityPermission(\n    catalogEntityRefreshPermission,\n  );\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({\n      message: 'Refresh scheduled',\n      severity: 'info',\n      display: 'transient',\n    });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return <Alert severity=\"error\">Group not found</Alert>;\n  }\n\n  const {\n    metadata: { name, description, title, annotations, links },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? title ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label=\"Edit\"\n      title=\"Edit Metadata\"\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton aria-label=\"Edit\" disabled title=\"Edit Metadata\">\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {allowRefresh && canRefresh && (\n            <IconButton\n              aria-label=\"Refresh\"\n              title=\"Schedule entity refresh\"\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText\n                  primary={<Link to={emailHref}>{profile.email}</Link>}\n                  secondary=\"Email\"\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Parent Group\">\n                  <AccountTreeIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  parentRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={parentRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Parent Group\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Child Groups\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  childRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={childRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Child Groups\"\n              />\n            </ListItem>\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  RELATION_MEMBER_OF,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport {\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\n\nimport Alert from '@material-ui/lab/Alert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { LinksGroup } from '../../Meta';\nimport PersonIcon from '@material-ui/icons/Person';\nimport React from 'react';\n\nconst CardTitle = (props: { title?: string }) =>\n  props.title ? (\n    <Box display=\"flex\" alignItems=\"center\">\n      <PersonIcon fontSize=\"inherit\" />\n      <Box ml={1}>{props.title}</Box>\n    </Box>\n  ) : null;\n\n/** @public */\nexport const UserProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const { entity: user } = useEntity<UserEntity>();\n  if (!user) {\n    return <Alert severity=\"error\">User not found</Alert>;\n  }\n\n  const entityMetadataEditUrl =\n    user.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const {\n    metadata: { name: metaName, description, links },\n    spec: { profile },\n  } = user;\n  const displayName = profile?.displayName ?? metaName;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : undefined;\n  const memberOfRelations = getEntityRelations(user, RELATION_MEMBER_OF, {\n    kind: 'Group',\n  });\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {entityMetadataEditUrl && (\n            <IconButton\n              aria-label=\"Edit\"\n              title=\"Edit Metadata\"\n              component={Link}\n              to={entityMetadataEditUrl}\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n        </>\n      }\n    >\n      <Grid container spacing={3} alignItems=\"flex-start\">\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link to={emailHref ?? ''}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Member of\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText>\n                <EntityRefLinks\n                  entityRefs={memberOfRelations}\n                  defaultKind=\"Group\"\n                />\n              </ListItemText>\n            </ListItem>\n\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  parseEntityRef,\n  RELATION_MEMBER_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  CatalogApi,\n  catalogApiRef,\n  getEntityRelations,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport limiterFactory from 'p-limit';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/lib/useAsync';\nimport qs from 'qs';\nimport { EntityRelationAggregation as EntityRelationsAggregation } from './types';\nimport { uniq } from 'lodash';\n\nconst limiter = limiterFactory(10);\n\ntype EntityTypeProps = {\n  kind: string;\n  type?: string;\n  count: number;\n};\n\nconst getQueryParams = (\n  ownersEntityRef: string[],\n  selectedEntity: EntityTypeProps,\n): string => {\n  const { kind, type } = selectedEntity;\n  const owners = ownersEntityRef.map(owner =>\n    humanizeEntityRef(parseEntityRef(owner), { defaultKind: 'group' }),\n  );\n  const filters = {\n    kind: kind.toLocaleLowerCase('en-US'),\n    type,\n    owners,\n    user: 'all',\n  };\n  return qs.stringify({ filters }, { arrayFormat: 'repeat' });\n};\n\nconst getMemberOfEntityRefs = (owner: Entity): string[] => {\n  const parentGroups = getEntityRelations(owner, RELATION_MEMBER_OF, {\n    kind: 'Group',\n  });\n\n  const ownerGroupsNames = parentGroups.map(({ kind, namespace, name }) =>\n    stringifyEntityRef({\n      kind,\n      namespace,\n      name,\n    }),\n  );\n\n  return [...ownerGroupsNames, stringifyEntityRef(owner)];\n};\n\nconst isEntity = (entity: Entity | undefined): entity is Entity =>\n  entity !== undefined;\n\nconst getChildOwnershipEntityRefs = async (\n  entity: Entity,\n  catalogApi: CatalogApi,\n  alreadyRetrievedParentRefs: string[] = [],\n): Promise<string[]> => {\n  const childGroups = getEntityRelations(entity, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n\n  const hasChildGroups = childGroups.length > 0;\n\n  const entityRef = stringifyEntityRef(entity);\n  if (hasChildGroups) {\n    const entityRefs = childGroups.map(r => stringifyEntityRef(r));\n    const childGroupResponse = await catalogApi.getEntitiesByRefs({\n      fields: ['kind', 'metadata.namespace', 'metadata.name', 'relations'],\n      entityRefs,\n    });\n    const childGroupEntities = childGroupResponse.items.filter(isEntity);\n\n    const unknownChildren = childGroupEntities.filter(\n      childGroupEntity =>\n        !alreadyRetrievedParentRefs.includes(\n          stringifyEntityRef(childGroupEntity),\n        ),\n    );\n    const childrenRefs = (\n      await Promise.all(\n        unknownChildren.map(childGroupEntity =>\n          limiter(() =>\n            getChildOwnershipEntityRefs(childGroupEntity, catalogApi, [\n              ...alreadyRetrievedParentRefs,\n              entityRef,\n            ]),\n          ),\n        ),\n      )\n    ).flatMap(aggregated => aggregated);\n\n    return uniq([...childrenRefs, entityRef]);\n  }\n\n  return [entityRef];\n};\n\nconst getOwners = async (\n  entity: Entity,\n  relations: EntityRelationsAggregation,\n  catalogApi: CatalogApi,\n): Promise<string[]> => {\n  const isGroup = entity.kind === 'Group';\n  const isAggregated = relations === 'aggregated';\n  const isUserEntity = entity.kind === 'User';\n\n  if (isAggregated && isGroup) {\n    return getChildOwnershipEntityRefs(entity, catalogApi);\n  }\n\n  if (isAggregated && isUserEntity) {\n    return getMemberOfEntityRefs(entity);\n  }\n\n  return [stringifyEntityRef(entity)];\n};\n\nconst getOwnedEntitiesByOwners = (\n  owners: string[],\n  kinds: string[],\n  catalogApi: CatalogApi,\n) =>\n  catalogApi.getEntities({\n    filter: [\n      {\n        kind: kinds,\n        'relations.ownedBy': owners,\n      },\n    ],\n    fields: [\n      'kind',\n      'metadata.name',\n      'metadata.namespace',\n      'spec.type',\n      'relations',\n    ],\n  });\n\nexport function useGetEntities(\n  entity: Entity,\n  relations: EntityRelationsAggregation,\n  entityFilterKind?: string[],\n  entityLimit = 6,\n): {\n  componentsWithCounters:\n    | {\n        counter: number;\n        type: string;\n        kind: string;\n        queryParams: string;\n      }[]\n    | undefined;\n  loading: boolean;\n  error?: Error;\n} {\n  const catalogApi = useApi(catalogApiRef);\n  const kinds = entityFilterKind ?? ['Component', 'API', 'System'];\n\n  const {\n    loading,\n    error,\n    value: componentsWithCounters,\n  } = useAsync(async () => {\n    const owners = await getOwners(entity, relations, catalogApi);\n\n    const ownedEntitiesList = await getOwnedEntitiesByOwners(\n      owners,\n      kinds,\n      catalogApi,\n    );\n\n    const counts = ownedEntitiesList.items.reduce(\n      (acc: EntityTypeProps[], ownedEntity) => {\n        const match = acc.find(\n          x => x.kind === ownedEntity.kind && x.type === ownedEntity.spec?.type,\n        );\n        if (match) {\n          match.count += 1;\n        } else {\n          acc.push({\n            kind: ownedEntity.kind,\n            type: ownedEntity.spec?.type?.toString(),\n            count: 1,\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    // Return top N (entityLimit) entities to be displayed in ownership boxes\n    const topN = counts.sort((a, b) => b.count - a.count).slice(0, entityLimit);\n\n    return topN.map(topOwnedEntity => ({\n      counter: topOwnedEntity.count,\n      type: topOwnedEntity.type,\n      kind: topOwnedEntity.kind,\n      queryParams: getQueryParams(owners, topOwnedEntity),\n    })) as Array<{\n      counter: number;\n      type: string;\n      kind: string;\n      queryParams: string;\n    }>;\n  }, [catalogApi, entity, relations]);\n\n  return {\n    componentsWithCounters,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  Link,\n  OverflowTooltip,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport { catalogIndexRouteRef } from '../../../routes';\nimport { useGetEntities } from './useGetEntities';\nimport { EntityRelationAggregation } from './types';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      padding: theme.spacing(2),\n      transition: `${theme.transitions.duration.standard}ms`,\n      '&:hover': {\n        boxShadow: theme.shadows[4],\n      },\n      height: '100%',\n    },\n    bold: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    smallFont: {\n      fontSize: theme.typography.body2.fontSize,\n    },\n    entityTypeBox: {\n      background: (props: { type: string }) =>\n        theme.getPageTheme({ themeId: props.type }).backgroundImage,\n      color: (props: { type: string }) =>\n        theme.getPageTheme({ themeId: props.type }).fontColor,\n    },\n  }),\n);\n\nconst EntityCountTile = ({\n  counter,\n  type,\n  kind,\n  url,\n}: {\n  counter: number;\n  type?: string;\n  kind: string;\n  url: string;\n}) => {\n  const classes = useStyles({ type: type ?? kind });\n\n  const rawTitle = type ?? kind;\n  const isLongText = rawTitle.length > 10;\n\n  return (\n    <Link to={url} variant=\"body2\">\n      <Box\n        className={`${classes.card} ${classes.entityTypeBox}`}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <Typography className={classes.bold} variant=\"h6\">\n          {counter}\n        </Typography>\n        <Box sx={{ width: '100%', textAlign: 'center' }}>\n          <Typography\n            className={`${classes.bold} ${isLongText && classes.smallFont}`}\n            variant=\"h6\"\n          >\n            <OverflowTooltip\n              text={pluralize(rawTitle.toLocaleUpperCase('en-US'), counter)}\n            />\n          </Typography>\n        </Box>\n        {type && <Typography variant=\"subtitle1\">{kind}</Typography>}\n      </Box>\n    </Link>\n  );\n};\n\nexport const ComponentsGrid = ({\n  entity,\n  relationsType,\n  entityFilterKind,\n  entityLimit = 6,\n}: {\n  entity: Entity;\n  relationsType: EntityRelationAggregation;\n  entityFilterKind?: string[];\n  entityLimit?: number;\n}) => {\n  const catalogLink = useRouteRef(catalogIndexRouteRef);\n  const { componentsWithCounters, loading, error } = useGetEntities(\n    entity,\n    relationsType,\n    entityFilterKind,\n    entityLimit,\n  );\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <Grid container>\n      {componentsWithCounters?.map(c => (\n        <Grid item xs={6} md={6} lg={4} key={c.type ?? c.kind}>\n          <EntityCountTile\n            counter={c.counter}\n            kind={c.kind}\n            type={c.type}\n            url={`${catalogLink()}/?${c.queryParams}`}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Tooltip,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { ComponentsGrid } from './ComponentsGrid';\nimport { EntityRelationAggregation } from './types';\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 0 12px`,\n    },\n  },\n  listItemText: {\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n  listItemSecondaryAction: {\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      top: 'auto',\n      right: 'auto',\n      position: 'relative',\n      transform: 'unset',\n    },\n  },\n}));\n\n/** @public */\nexport const OwnershipCard = (props: {\n  variant?: InfoCardVariants;\n  entityFilterKind?: string[];\n  hideRelationsToggle?: boolean;\n  relationsType?: EntityRelationAggregation;\n  entityLimit?: number;\n}) => {\n  const {\n    variant,\n    entityFilterKind,\n    hideRelationsToggle,\n    relationsType,\n    entityLimit = 6,\n  } = props;\n  const relationsToggle =\n    hideRelationsToggle === undefined ? false : hideRelationsToggle;\n  const classes = useStyles();\n  const { entity } = useEntity();\n\n  const defaultRelationsType = entity.kind === 'User' ? 'aggregated' : 'direct';\n  const [getRelationsType, setRelationsType] = useState(\n    relationsType ?? defaultRelationsType,\n  );\n\n  useEffect(() => {\n    if (!relationsType) {\n      setRelationsType(defaultRelationsType);\n    }\n  }, [setRelationsType, defaultRelationsType, relationsType]);\n\n  return (\n    <InfoCard title=\"Ownership\" variant={variant}>\n      {!relationsToggle && (\n        <List dense>\n          <ListItem className={classes.list}>\n            <ListItemText className={classes.listItemText} />\n            <ListItemSecondaryAction\n              className={classes.listItemSecondaryAction}\n            >\n              Direct Relations\n              <Tooltip\n                placement=\"top\"\n                arrow\n                title={`${\n                  getRelationsType === 'direct' ? 'Direct' : 'Aggregated'\n                } Relations`}\n              >\n                <Switch\n                  color=\"primary\"\n                  checked={getRelationsType !== 'direct'}\n                  onChange={() => {\n                    const updatedRelationsType =\n                      getRelationsType === 'direct' ? 'aggregated' : 'direct';\n                    setRelationsType(updatedRelationsType);\n                  }}\n                  name=\"pin\"\n                  inputProps={{ 'aria-label': 'Ownership Type Switch' }}\n                />\n              </Tooltip>\n              Aggregated Relations\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      <ComponentsGrid\n        entity={entity}\n        entityLimit={entityLimit}\n        relationsType={getRelationsType}\n        entityFilterKind={entityFilterKind}\n      />\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  SidebarItem,\n  SidebarSubmenu,\n  SidebarSubmenuItem,\n} from '@backstage/core-components';\nimport {\n  IconComponent,\n  identityApiRef,\n  useApi,\n  useRouteRef,\n} from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/lib/useAsync';\nimport {\n  catalogApiRef,\n  CatalogApi,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { getCompoundEntityRef } from '@backstage/catalog-model';\n\n/**\n * MyGroupsSidebarItem can be added to your sidebar providing quick access to groups the logged in user is a member of\n *\n * @public\n */\nexport const MyGroupsSidebarItem = (props: {\n  singularTitle: string;\n  pluralTitle: string;\n  icon: IconComponent;\n  filter?: Record<string, string | symbol | (string | symbol)[]>;\n}) => {\n  const { singularTitle, pluralTitle, icon, filter } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const catalogApi: CatalogApi = useApi(catalogApiRef);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n\n  const { value: groups } = useAsync(async () => {\n    const profile = await identityApi.getBackstageIdentity();\n\n    const response = await catalogApi.getEntities({\n      filter: [\n        {\n          kind: 'group',\n          'relations.hasMember': profile.userEntityRef,\n          ...(filter ?? {}),\n        },\n      ],\n      fields: ['metadata', 'kind'],\n    });\n\n    return response.items;\n  }, []);\n\n  // Not a member of any groups\n  if (!groups?.length) {\n    return null;\n  }\n\n  // Only member of one group\n  if (groups.length === 1) {\n    const group = groups[0];\n    return (\n      <SidebarItem\n        text={singularTitle}\n        to={catalogEntityRoute(getCompoundEntityRef(group))}\n        icon={icon}\n      />\n    );\n  }\n\n  // Member of more than one group\n  return (\n    <SidebarItem icon={icon} text={pluralTitle}>\n      <SidebarSubmenu title={pluralTitle}>\n        {groups?.map(function groupsMap(group) {\n          return (\n            <SidebarSubmenuItem\n              title={group.metadata.title || group.metadata.name}\n              subtitle={\n                group.metadata.namespace !== DEFAULT_NAMESPACE\n                  ? group.metadata.namespace\n                  : undefined\n              }\n              to={catalogEntityRoute(getCompoundEntityRef(group))}\n              icon={icon}\n              key={stringifyEntityRef(group)}\n            />\n          );\n        })}\n      </SidebarSubmenu>\n    </SidebarItem>\n  );\n};\n"],"names":["useStyles","CardTitle","_a"],"mappings":"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"}