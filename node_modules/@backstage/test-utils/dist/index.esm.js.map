{"version":3,"file":"index.esm.js","sources":["../src/testUtils/apis/AnalyticsApi/MockAnalyticsApi.ts","../src/testUtils/apis/ConfigApi/MockConfigApi.ts","../src/testUtils/apis/ErrorApi/MockErrorApi.ts","../src/testUtils/apis/FetchApi/MockFetchApi.ts","../src/testUtils/apis/PermissionApi/MockPermissionApi.ts","../src/testUtils/apis/StorageApi/MockStorageApi.ts","../src/testUtils/mockBreakpoint.ts","../src/testUtils/testingLibrary.ts","../src/testUtils/defaultApis.ts","../src/testUtils/mockApis.ts","../src/testUtils/appWrappers.tsx","../src/testUtils/msw/setupRequestMockHandlers.ts","../src/testUtils/logCollector.ts","../src/testUtils/TestApiProvider.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnalyticsApi, AnalyticsEvent } from '@backstage/core-plugin-api';\n\n/**\n * Mock implementation of {@link core-plugin-api#AnalyticsApi} with helpers to ensure that events are sent correctly.\n * Use getEvents in tests to verify captured events.\n *\n * @public\n */\nexport class MockAnalyticsApi implements AnalyticsApi {\n  private events: AnalyticsEvent[] = [];\n\n  captureEvent(event: AnalyticsEvent) {\n    const { action, subject, value, attributes, context } = event;\n\n    this.events.push({\n      action,\n      subject,\n      context,\n      ...(value !== undefined ? { value } : {}),\n      ...(attributes !== undefined ? { attributes } : {}),\n    });\n  }\n\n  getEvents(): AnalyticsEvent[] {\n    return this.events;\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config, ConfigReader } from '@backstage/config';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { ConfigApi } from '@backstage/core-plugin-api';\n\n/**\n * MockConfigApi is a thin wrapper around {@link @backstage/config#ConfigReader}\n * that can be used to mock configuration using a plain object.\n *\n * @public\n * @example\n * ```tsx\n * const mockConfig = new MockConfigApi({\n *   app: { baseUrl: 'https://example.com' },\n * });\n *\n * const rendered = await renderInTestApp(\n *   <TestApiProvider apis={[[configApiRef, mockConfig]]}>\n *     <MyTestedComponent />\n *   </TestApiProvider>,\n * );\n * ```\n */\nexport class MockConfigApi implements ConfigApi {\n  private readonly config: ConfigReader;\n\n  // NOTE: not extending in order to avoid inheriting the static `.fromConfigs`\n  constructor(data: JsonObject) {\n    this.config = new ConfigReader(data);\n  }\n\n  /** {@inheritdoc @backstage/config#Config.has} */\n  has(key: string): boolean {\n    return this.config.has(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.keys} */\n  keys(): string[] {\n    return this.config.keys();\n  }\n  /** {@inheritdoc @backstage/config#Config.get} */\n  get<T = JsonValue>(key?: string): T {\n    return this.config.get(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptional} */\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    return this.config.getOptional(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getConfig} */\n  getConfig(key: string): Config {\n    return this.config.getConfig(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalConfig} */\n  getOptionalConfig(key: string): Config | undefined {\n    return this.config.getOptionalConfig(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getConfigArray} */\n  getConfigArray(key: string): Config[] {\n    return this.config.getConfigArray(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalConfigArray} */\n  getOptionalConfigArray(key: string): Config[] | undefined {\n    return this.config.getOptionalConfigArray(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getNumber} */\n  getNumber(key: string): number {\n    return this.config.getNumber(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalNumber} */\n  getOptionalNumber(key: string): number | undefined {\n    return this.config.getOptionalNumber(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getBoolean} */\n  getBoolean(key: string): boolean {\n    return this.config.getBoolean(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalBoolean} */\n  getOptionalBoolean(key: string): boolean | undefined {\n    return this.config.getOptionalBoolean(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getString} */\n  getString(key: string): string {\n    return this.config.getString(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalString} */\n  getOptionalString(key: string): string | undefined {\n    return this.config.getOptionalString(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getStringArray} */\n  getStringArray(key: string): string[] {\n    return this.config.getStringArray(key);\n  }\n  /** {@inheritdoc @backstage/config#Config.getOptionalStringArray} */\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.config.getOptionalStringArray(key);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ErrorApi,\n  ErrorApiError,\n  ErrorApiErrorContext,\n} from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\n\n/**\n * Constructor arguments for {@link MockErrorApi}\n * @public\n */\nexport type MockErrorApiOptions = {\n  // Need to be true if getErrors is used in testing.\n  collect?: boolean;\n};\n\n/**\n * ErrorWithContext contains error and ErrorApiErrorContext\n * @public\n */\nexport type ErrorWithContext = {\n  error: ErrorApiError;\n  context?: ErrorApiErrorContext;\n};\n\ntype Waiter = {\n  pattern: RegExp;\n  resolve: (err: ErrorWithContext) => void;\n};\n\nconst nullObservable = {\n  subscribe: () => ({ unsubscribe: () => {}, closed: true }),\n\n  [Symbol.observable]() {\n    return this;\n  },\n};\n\n/**\n * Mock implementation of the {@link core-plugin-api#ErrorApi} to be used in tests.\n * Includes withForError and getErrors methods for error testing.\n * @public\n */\nexport class MockErrorApi implements ErrorApi {\n  private readonly errors = new Array<ErrorWithContext>();\n  private readonly waiters = new Set<Waiter>();\n\n  constructor(private readonly options: MockErrorApiOptions = {}) {}\n\n  post(error: ErrorApiError, context?: ErrorApiErrorContext) {\n    if (this.options.collect) {\n      this.errors.push({ error, context });\n\n      for (const waiter of this.waiters) {\n        if (waiter.pattern.test(error.message)) {\n          this.waiters.delete(waiter);\n          waiter.resolve({ error, context });\n        }\n      }\n\n      return;\n    }\n\n    throw new Error(`MockErrorApi received unexpected error, ${error}`);\n  }\n\n  error$(): Observable<{\n    error: ErrorApiError;\n    context?: ErrorApiErrorContext;\n  }> {\n    return nullObservable;\n  }\n\n  getErrors(): ErrorWithContext[] {\n    return this.errors;\n  }\n\n  waitForError(\n    pattern: RegExp,\n    timeoutMs: number = 2000,\n  ): Promise<ErrorWithContext> {\n    return new Promise<ErrorWithContext>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('Timed out waiting for error'));\n      }, timeoutMs);\n\n      this.waiters.add({ resolve, pattern });\n    });\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createFetchApi,\n  FetchMiddleware,\n  FetchMiddlewares,\n} from '@backstage/core-app-api';\nimport {\n  DiscoveryApi,\n  FetchApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport crossFetch, { Response } from 'cross-fetch';\n\n/**\n * The options given when constructing a {@link MockFetchApi}.\n *\n * @public\n */\nexport interface MockFetchApiOptions {\n  /**\n   * Define the underlying base `fetch` implementation.\n   *\n   * @defaultValue undefined\n   * @remarks\n   *\n   * Leaving out this parameter or passing `undefined`, makes the API use the\n   * global `fetch` implementation to make real network requests.\n   *\n   * `'none'` swallows all calls and makes no requests at all.\n   *\n   * You can also pass in any `fetch` compatible callback, such as a\n   * `jest.fn()`, if you want to use a custom implementation or to just track\n   * and assert on calls.\n   */\n  baseImplementation?: undefined | 'none' | typeof crossFetch;\n\n  /**\n   * Add translation from `plugin://` URLs to concrete http(s) URLs, basically\n   * simulating what\n   * {@link @backstage/core-app-api#FetchMiddlewares.resolvePluginProtocol}\n   * does.\n   *\n   * @defaultValue undefined\n   * @remarks\n   *\n   * Leaving out this parameter or passing `undefined`, disables plugin protocol\n   * translation.\n   *\n   * To enable the feature, pass in a discovery API which is then used to\n   * resolve the URLs.\n   */\n  resolvePluginProtocol?:\n    | undefined\n    | { discoveryApi: Pick<DiscoveryApi, 'getBaseUrl'> };\n\n  /**\n   * Add token based Authorization headers to requests, basically simulating\n   * what {@link @backstage/core-app-api#FetchMiddlewares.injectIdentityAuth}\n   * does.\n   *\n   * @defaultValue undefined\n   * @remarks\n   *\n   * Leaving out this parameter or passing `undefined`, disables auth injection.\n   *\n   * To enable the feature, pass in either a static token or an identity API\n   * which is queried on each request for a token.\n   */\n  injectIdentityAuth?:\n    | undefined\n    | { token: string }\n    | { identityApi: Pick<IdentityApi, 'getCredentials'> };\n}\n\n/**\n * A test helper implementation of {@link @backstage/core-plugin-api#FetchApi}.\n *\n * @public\n */\nexport class MockFetchApi implements FetchApi {\n  private readonly implementation: FetchApi;\n\n  /**\n   * Creates a mock {@link @backstage/core-plugin-api#FetchApi}.\n   */\n  constructor(options?: MockFetchApiOptions) {\n    this.implementation = build(options);\n  }\n\n  /** {@inheritdoc @backstage/core-plugin-api#FetchApi.fetch} */\n  get fetch(): typeof crossFetch {\n    return this.implementation.fetch;\n  }\n}\n\n//\n// Helpers\n//\n\nfunction build(options?: MockFetchApiOptions): FetchApi {\n  return createFetchApi({\n    baseImplementation: baseImplementation(options),\n    middleware: [\n      resolvePluginProtocol(options),\n      injectIdentityAuth(options),\n    ].filter((x): x is FetchMiddleware => Boolean(x)),\n  });\n}\n\nfunction baseImplementation(\n  options: MockFetchApiOptions | undefined,\n): typeof crossFetch {\n  const implementation = options?.baseImplementation;\n  if (!implementation) {\n    return crossFetch;\n  } else if (implementation === 'none') {\n    return () => Promise.resolve(new Response());\n  }\n  return implementation;\n}\n\nfunction resolvePluginProtocol(\n  allOptions: MockFetchApiOptions | undefined,\n): FetchMiddleware | undefined {\n  const options = allOptions?.resolvePluginProtocol;\n  if (!options) {\n    return undefined;\n  }\n\n  return FetchMiddlewares.resolvePluginProtocol({\n    discoveryApi: options.discoveryApi,\n  });\n}\n\nfunction injectIdentityAuth(\n  allOptions: MockFetchApiOptions | undefined,\n): FetchMiddleware | undefined {\n  const options = allOptions?.injectIdentityAuth;\n  if (!options) {\n    return undefined;\n  }\n\n  const identityApi: Pick<IdentityApi, 'getCredentials'> =\n    'token' in options\n      ? { getCredentials: async () => ({ token: options.token }) }\n      : options.identityApi;\n\n  return FetchMiddlewares.injectIdentityAuth({\n    identityApi: identityApi as IdentityApi,\n    allowUrl: () => true,\n  });\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionApi } from '@backstage/plugin-permission-react';\nimport {\n  EvaluatePermissionResponse,\n  EvaluatePermissionRequest,\n  AuthorizeResult,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Mock implementation of\n * {@link @backstage/plugin-permission-react#PermissionApi}. Supply a\n * requestHandler function to override the mock result returned for a given\n * request.\n * @public\n */\nexport class MockPermissionApi implements PermissionApi {\n  constructor(\n    private readonly requestHandler: (\n      request: EvaluatePermissionRequest,\n    ) => AuthorizeResult.ALLOW | AuthorizeResult.DENY = () =>\n      AuthorizeResult.ALLOW,\n  ) {}\n\n  async authorize(\n    request: EvaluatePermissionRequest,\n  ): Promise<EvaluatePermissionResponse> {\n    return { result: this.requestHandler(request) };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageApi, StorageValueSnapshot } from '@backstage/core-plugin-api';\nimport { JsonValue, Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\n\n/**\n * Type for map holding data in {@link MockStorageApi}\n * @public\n */\nexport type MockStorageBucket = { [key: string]: any };\n\n/**\n * Mock implementation of the {@link core-plugin-api#StorageApi} to be used in tests\n * @public\n */\nexport class MockStorageApi implements StorageApi {\n  private readonly namespace: string;\n  private readonly data: MockStorageBucket;\n  private readonly bucketStorageApis: Map<string, MockStorageApi>;\n\n  private constructor(\n    namespace: string,\n    bucketStorageApis: Map<string, MockStorageApi>,\n    data?: MockStorageBucket,\n  ) {\n    this.namespace = namespace;\n    this.bucketStorageApis = bucketStorageApis;\n    this.data = { ...data };\n  }\n\n  static create(data?: MockStorageBucket) {\n    return new MockStorageApi('', new Map(), data);\n  }\n\n  forBucket(name: string): StorageApi {\n    if (!this.bucketStorageApis.has(name)) {\n      this.bucketStorageApis.set(\n        name,\n        new MockStorageApi(\n          `${this.namespace}/${name}`,\n          this.bucketStorageApis,\n          this.data,\n        ),\n      );\n    }\n    return this.bucketStorageApis.get(name)!;\n  }\n\n  snapshot<T extends JsonValue>(key: string): StorageValueSnapshot<T> {\n    if (this.data.hasOwnProperty(this.getKeyName(key))) {\n      const data = this.data[this.getKeyName(key)];\n      return {\n        key,\n        presence: 'present',\n        value: data,\n      };\n    }\n    return {\n      key,\n      presence: 'absent',\n      value: undefined,\n    };\n  }\n\n  async set<T>(key: string, data: T): Promise<void> {\n    const serialized = JSON.parse(JSON.stringify(data), (_key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        Object.freeze(value);\n      }\n      return value;\n    });\n    this.data[this.getKeyName(key)] = serialized;\n    this.notifyChanges({\n      key,\n      presence: 'present',\n      value: serialized,\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    delete this.data[this.getKeyName(key)];\n    this.notifyChanges({\n      key,\n      presence: 'absent',\n      value: undefined,\n    });\n  }\n\n  observe$<T extends JsonValue>(\n    key: string,\n  ): Observable<StorageValueSnapshot<T>> {\n    return this.observable.filter(({ key: messageKey }) => messageKey === key);\n  }\n\n  private getKeyName(key: string) {\n    return `${this.namespace}/${encodeURIComponent(key)}`;\n  }\n\n  private notifyChanges<T extends JsonValue>(message: StorageValueSnapshot<T>) {\n    for (const subscription of this.subscribers) {\n      subscription.next(message);\n    }\n  }\n\n  private subscribers = new Set<\n    ZenObservable.SubscriptionObserver<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private readonly observable = new ObservableImpl<\n    StorageValueSnapshot<JsonValue>\n  >(subscriber => {\n    this.subscribers.add(subscriber);\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  This is a mocking method suggested in the Jest docs, as it is not implemented in JSDOM yet.\n *  It can be used to mock values for the Material UI `useMediaQuery` hook if it is used in a tested component.\n *\n *  For issues checkout the documentation:\n *  https://jestjs.io/docs/manual-mocks#mocking-methods-which-are-not-implemented-in-jsdom\n *\n *  If there are any updates from Material UI React on testing `useMediaQuery` this mock should be replaced\n *  https://mui.com/material-ui/react-use-media-query/#testing\n *\n * @public\n * @deprecated Import from `@backstage/core-components/testUtils` instead.\n */\nexport default function mockBreakpoint(options: { matches: boolean }) {\n  Object.defineProperty(window, 'matchMedia', {\n    writable: true,\n    value: jest.fn().mockImplementation(query => ({\n      matches: options.matches ?? false,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(), // deprecated\n      removeListener: jest.fn(), // deprecated\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    })),\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactElement } from 'react';\nimport {\n  act,\n  render,\n  RenderOptions,\n  RenderResult,\n} from '@testing-library/react';\n\n/**\n * @public\n * Set legacy mode when using React 18/RTL 13+.\n * Mock this option while we're working against React 17 or lower.\n */\nexport type LegacyRootOption = { legacyRoot?: boolean };\n\n/**\n * @public\n * Simplifies rendering of async components in by taking care of the wrapping inside act\n *\n * @remarks\n *\n * Components using useEffect to perform an asynchronous action (such as fetch) must be rendered within an async\n * act call to properly get the final state, even with mocked responses. This utility method makes the signature a bit\n * cleaner, since act doesn't return the result of the evaluated function.\n * https://github.com/testing-library/react-testing-library/issues/281\n * https://github.com/facebook/react/pull/14853\n */\nexport async function renderWithEffects(\n  nodes: ReactElement,\n  options?: Pick<RenderOptions, 'wrapper'> & LegacyRootOption,\n): Promise<RenderResult> {\n  let value: RenderResult;\n  await act(async () => {\n    value = render(nodes, options);\n  });\n  return value!;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AlertApiForwarder,\n  NoOpAnalyticsApi,\n  ErrorApiForwarder,\n  ErrorAlerter,\n  GoogleAuth,\n  GithubAuth,\n  OktaAuth,\n  GitlabAuth,\n  MicrosoftAuth,\n  BitbucketAuth,\n  OAuthRequestManager,\n  WebStorage,\n  UrlPatternDiscovery,\n  OneLoginAuth,\n  UnhandledErrorForwarder,\n  AtlassianAuth,\n} from '@backstage/core-app-api';\n\nimport {\n  createApiFactory,\n  alertApiRef,\n  analyticsApiRef,\n  errorApiRef,\n  discoveryApiRef,\n  oauthRequestApiRef,\n  googleAuthApiRef,\n  githubAuthApiRef,\n  oktaAuthApiRef,\n  gitlabAuthApiRef,\n  microsoftAuthApiRef,\n  storageApiRef,\n  configApiRef,\n  oneloginAuthApiRef,\n  bitbucketAuthApiRef,\n  atlassianAuthApiRef,\n} from '@backstage/core-plugin-api';\n\n// TODO(Rugvip): This is just a copy of the createApp default APIs for now, but\n//               we should clean up this list a bit move more things over to mocks.\nexport const defaultApis = [\n  createApiFactory({\n    api: discoveryApiRef,\n    deps: { configApi: configApiRef },\n    factory: ({ configApi }) =>\n      UrlPatternDiscovery.compile(\n        `${configApi.getString('backend.baseUrl')}/api/{{ pluginId }}`,\n      ),\n  }),\n  createApiFactory(alertApiRef, new AlertApiForwarder()),\n  createApiFactory(analyticsApiRef, new NoOpAnalyticsApi()),\n  createApiFactory({\n    api: errorApiRef,\n    deps: { alertApi: alertApiRef },\n    factory: ({ alertApi }) => {\n      const errorApi = new ErrorAlerter(alertApi, new ErrorApiForwarder());\n      UnhandledErrorForwarder.forward(errorApi, { hidden: false });\n      return errorApi;\n    },\n  }),\n  createApiFactory({\n    api: storageApiRef,\n    deps: { errorApi: errorApiRef },\n    factory: ({ errorApi }) => WebStorage.create({ errorApi }),\n  }),\n  createApiFactory(oauthRequestApiRef, new OAuthRequestManager()),\n  createApiFactory({\n    api: googleAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GoogleAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: microsoftAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      MicrosoftAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: githubAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GithubAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        defaultScopes: ['read:user'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: oktaAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OktaAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: gitlabAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      GitlabAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: oneloginAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OneLoginAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: bitbucketAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      BitbucketAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        defaultScopes: ['team'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  }),\n  createApiFactory({\n    api: atlassianAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) => {\n      return AtlassianAuth.create({\n        configApi,\n        discoveryApi,\n        oauthRequestApi,\n        environment: configApi.getOptionalString('auth.environment'),\n      });\n    },\n  }),\n];\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createApiFactory,\n  errorApiRef,\n  fetchApiRef,\n  storageApiRef,\n} from '@backstage/core-plugin-api';\nimport { translationApiRef } from '@backstage/core-plugin-api/alpha';\nimport { MockErrorApi, MockFetchApi, MockStorageApi } from './apis';\nimport { MockTranslationApi } from './apis/TranslationApi';\n\nexport const mockApis = [\n  createApiFactory(errorApiRef, new MockErrorApi()),\n  createApiFactory(fetchApiRef, new MockFetchApi()),\n  createApiFactory(storageApiRef, MockStorageApi.create()),\n  createApiFactory(translationApiRef, MockTranslationApi.create()),\n];\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ComponentType,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport { MemoryRouter, Route } from 'react-router-dom';\nimport { themes, UnifiedThemeProvider } from '@backstage/theme';\nimport MockIcon from '@material-ui/icons/AcUnit';\nimport { createSpecializedApp } from '@backstage/core-app-api';\nimport {\n  attachComponentData,\n  BootErrorPageProps,\n  createRouteRef,\n  ExternalRouteRef,\n  RouteRef,\n} from '@backstage/core-plugin-api';\nimport { MatcherFunction, RenderResult } from '@testing-library/react';\nimport { LegacyRootOption, renderWithEffects } from './testingLibrary';\nimport { defaultApis } from './defaultApis';\nimport { mockApis } from './mockApis';\n\nconst mockIcons = {\n  'kind:api': MockIcon,\n  'kind:component': MockIcon,\n  'kind:domain': MockIcon,\n  'kind:group': MockIcon,\n  'kind:location': MockIcon,\n  'kind:system': MockIcon,\n  'kind:user': MockIcon,\n  'kind:resource': MockIcon,\n  'kind:template': MockIcon,\n\n  brokenImage: MockIcon,\n  catalog: MockIcon,\n  scaffolder: MockIcon,\n  techdocs: MockIcon,\n  search: MockIcon,\n  chat: MockIcon,\n  dashboard: MockIcon,\n  docs: MockIcon,\n  email: MockIcon,\n  github: MockIcon,\n  group: MockIcon,\n  help: MockIcon,\n  user: MockIcon,\n  warning: MockIcon,\n};\n\nconst ErrorBoundaryFallback = ({ error }: { error: Error }) => {\n  throw new Error(`Reached ErrorBoundaryFallback Page with error, ${error}`);\n};\nconst NotFoundErrorPage = () => {\n  throw new Error('Reached NotFound Page');\n};\nconst BootErrorPage = ({ step, error }: BootErrorPageProps) => {\n  throw new Error(`Reached BootError Page at step ${step} with error ${error}`);\n};\nconst Progress = () => <div data-testid=\"progress\" />;\n\nconst NoRender = (_props: { children: ReactNode }) => null;\n\n/**\n * Options to customize the behavior of the test app wrapper.\n * @public\n */\nexport type TestAppOptions = {\n  /**\n   * Initial route entries to pass along as `initialEntries` to the router.\n   */\n  routeEntries?: string[];\n\n  /**\n   * An object of paths to mount route ref on, with the key being the path and the value\n   * being the RouteRef that the path will be bound to. This allows the route refs to be\n   * used by `useRouteRef` in the rendered elements.\n   *\n   * @example\n   * wrapInTestApp(<MyComponent />, \\{\n   *   mountedRoutes: \\{\n   *     '/my-path': myRouteRef,\n   *   \\}\n   * \\})\n   * // ...\n   * const link = useRouteRef(myRouteRef)\n   */\n  mountedRoutes?: { [path: string]: RouteRef | ExternalRouteRef };\n};\n\nfunction isExternalRouteRef(\n  routeRef: RouteRef | ExternalRouteRef,\n): routeRef is ExternalRouteRef {\n  // TODO(Rugvip): Least ugly workaround for now, but replace :D\n  return String(routeRef).includes('{type=external,');\n}\n\n/**\n * Creates a Wrapper component that wraps a component inside a Backstage test app,\n * providing a mocked theme and app context, along with mocked APIs.\n *\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function createTestAppWrapper(\n  options: TestAppOptions = {},\n): (props: { children: ReactNode }) => JSX.Element {\n  const { routeEntries = ['/'] } = options;\n  const boundRoutes = new Map<ExternalRouteRef, RouteRef>();\n\n  const app = createSpecializedApp({\n    apis: mockApis,\n    defaultApis,\n    // Bit of a hack to make sure that the default config loader isn't used\n    // as that would force every single test to wait for config loading.\n    configLoader: false as unknown as undefined,\n    components: {\n      Progress,\n      BootErrorPage,\n      NotFoundErrorPage,\n      ErrorBoundaryFallback,\n      Router: ({ children }) => (\n        <MemoryRouter initialEntries={routeEntries} children={children} />\n      ),\n    },\n    icons: mockIcons,\n    plugins: [],\n    themes: [\n      {\n        id: 'light',\n        title: 'Test App Theme',\n        variant: 'light',\n        Provider: ({ children }) => (\n          <UnifiedThemeProvider theme={themes.light}>\n            {children}\n          </UnifiedThemeProvider>\n        ),\n      },\n    ],\n    bindRoutes: ({ bind }) => {\n      for (const [externalRef, absoluteRef] of boundRoutes) {\n        bind(\n          { ref: externalRef },\n          {\n            ref: absoluteRef,\n          },\n        );\n      }\n    },\n  });\n\n  const routeElements = Object.entries(options.mountedRoutes ?? {}).map(\n    ([path, routeRef]) => {\n      const Page = () => <div>Mounted at {path}</div>;\n\n      // Allow external route refs to be bound to paths as well, for convenience.\n      // We work around it by creating and binding an absolute ref to the external one.\n      if (isExternalRouteRef(routeRef)) {\n        const absoluteRef = createRouteRef({ id: 'id' });\n        boundRoutes.set(routeRef, absoluteRef);\n        attachComponentData(Page, 'core.mountPoint', absoluteRef);\n      } else {\n        attachComponentData(Page, 'core.mountPoint', routeRef);\n      }\n      return <Route key={path} path={path} element={<Page />} />;\n    },\n  );\n\n  const AppProvider = app.getProvider();\n  const AppRouter = app.getRouter();\n\n  const TestAppWrapper = ({ children }: { children: ReactNode }) => (\n    <AppProvider>\n      <AppRouter>\n        <NoRender>{routeElements}</NoRender>\n        {children}\n      </AppRouter>\n    </AppProvider>\n  );\n\n  return TestAppWrapper;\n}\n\n/**\n * Wraps a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function wrapInTestApp(\n  Component: ComponentType | ReactNode,\n  options: TestAppOptions = {},\n): ReactElement {\n  const TestAppWrapper = createTestAppWrapper(options);\n\n  let wrappedElement: React.ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = React.createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as React.ReactElement;\n  }\n\n  return <TestAppWrapper>{wrappedElement}</TestAppWrapper>;\n}\n\n/**\n * Renders a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * The render executes async effects similar to `renderWithEffects`. To avoid this\n * behavior, use a regular `render()` + `wrapInTestApp()` instead.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport async function renderInTestApp(\n  Component: ComponentType<PropsWithChildren<{}>> | ReactNode,\n  options: TestAppOptions & LegacyRootOption = {},\n): Promise<RenderResult> {\n  let wrappedElement: React.ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = React.createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as React.ReactElement;\n  }\n  const { legacyRoot } = options;\n\n  return renderWithEffects(wrappedElement, {\n    wrapper: createTestAppWrapper(options),\n    legacyRoot,\n  });\n}\n\n/**\n * Returns a `@testing-library/react` valid MatcherFunction for supplied text\n *\n * @param string - text Text to match by element's textContent\n *\n * @public\n */\nexport const textContentMatcher =\n  (text: string): MatcherFunction =>\n  (_, node) => {\n    if (!node) {\n      return false;\n    }\n\n    const hasText = (textNode: Element) =>\n      textNode?.textContent?.includes(text) ?? false;\n    const childrenDontHaveText = (containerNode: Element) =>\n      Array.from(containerNode?.children).every(child => !hasText(child));\n\n    return hasText(node) && childrenDontHaveText(node);\n  };\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sets up handlers for request mocking\n * @public\n * @param worker - service worker\n */\nexport function setupRequestMockHandlers(worker: {\n  listen: (t: any) => void;\n  close: () => void;\n  resetHandlers: () => void;\n}) {\n  beforeAll(() => worker.listen({ onUnhandledRequest: 'error' }));\n  afterAll(() => worker.close());\n  afterEach(() => worker.resetHandlers());\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-console */\n\n/**\n * Severity levels of {@link CollectedLogs}\n * @public\n */\nexport type LogFuncs = 'log' | 'warn' | 'error';\n/**\n * AsyncLogCollector type used in {@link (withLogCollector:1)} callback function.\n * @public\n */\nexport type AsyncLogCollector = () => Promise<void>;\n/**\n * SyncLogCollector type used in {@link (withLogCollector:2)} callback function.\n * @public\n */\nexport type SyncLogCollector = () => void;\n/**\n * Union type used in {@link (withLogCollector:3)} callback function.\n * @public\n */\nexport type LogCollector = AsyncLogCollector | SyncLogCollector;\n/**\n * Map of severity level and corresponding log lines.\n * @public\n */\nexport type CollectedLogs<T extends LogFuncs> = { [key in T]: string[] };\n\nconst allCategories = ['log', 'warn', 'error'];\n\n/**\n * Asynchronous log collector with that collects all categories\n * @public\n */\nexport function withLogCollector(\n  callback: AsyncLogCollector,\n): Promise<CollectedLogs<LogFuncs>>;\n\n/**\n * Synchronous log collector with that collects all categories\n * @public\n */\nexport function withLogCollector(\n  callback: SyncLogCollector,\n): CollectedLogs<LogFuncs>;\n\n/**\n * Asynchronous log collector with that only collects selected categories\n * @public\n */\nexport function withLogCollector<T extends LogFuncs>(\n  logsToCollect: T[],\n  callback: AsyncLogCollector,\n): Promise<CollectedLogs<T>>;\n\n/**\n * Synchronous log collector with that only collects selected categories\n * @public\n */\nexport function withLogCollector<T extends LogFuncs>(\n  logsToCollect: T[],\n  callback: SyncLogCollector,\n): CollectedLogs<T>;\n\n/**\n * Log collector that collect logs either from a sync or async collector.\n * @public\n */\nexport function withLogCollector(\n  logsToCollect: LogFuncs[] | LogCollector,\n  callback?: LogCollector,\n): CollectedLogs<LogFuncs> | Promise<CollectedLogs<LogFuncs>> {\n  const oneArg = !callback;\n  const actualCallback = (oneArg ? logsToCollect : callback) as LogCollector;\n  const categories = (oneArg ? allCategories : logsToCollect) as LogFuncs[];\n\n  const logs = {\n    log: new Array<string>(),\n    warn: new Array<string>(),\n    error: new Array<string>(),\n  };\n\n  const origLog = console.log;\n  const origWarn = console.warn;\n  const origError = console.error;\n\n  if (categories.includes('log')) {\n    console.log = (message: string) => {\n      logs.log.push(message);\n    };\n  }\n  if (categories.includes('warn')) {\n    console.warn = (message: string) => {\n      logs.warn.push(message);\n    };\n  }\n  if (categories.includes('error')) {\n    console.error = (message: string) => {\n      logs.error.push(message);\n    };\n  }\n\n  const restore = () => {\n    console.log = origLog;\n    console.warn = origWarn;\n    console.error = origError;\n  };\n\n  try {\n    const ret = actualCallback();\n\n    if (!ret || !ret.then) {\n      restore();\n      return logs;\n    }\n\n    return ret.then(\n      () => {\n        restore();\n        return logs;\n      },\n      error => {\n        restore();\n        throw error;\n      },\n    );\n  } catch (error) {\n    restore();\n    throw error;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { ApiProvider } from '@backstage/core-app-api';\nimport { ApiRef, ApiHolder } from '@backstage/core-plugin-api';\n\n/** @ignore */\ntype TestApiProviderPropsApiPair<TApi> = TApi extends infer TImpl\n  ? readonly [ApiRef<TApi>, Partial<TImpl>]\n  : never;\n\n/** @ignore */\ntype TestApiProviderPropsApiPairs<TApiPairs> = {\n  [TIndex in keyof TApiPairs]: TestApiProviderPropsApiPair<TApiPairs[TIndex]>;\n};\n\n/**\n * Properties for the {@link TestApiProvider} component.\n *\n * @public\n */\nexport type TestApiProviderProps<TApiPairs extends any[]> = {\n  apis: readonly [...TestApiProviderPropsApiPairs<TApiPairs>];\n  children: ReactNode;\n};\n\n/**\n * The `TestApiRegistry` is an {@link @backstage/core-plugin-api#ApiHolder} implementation\n * that is particularly well suited for development and test environments such as\n * unit tests, storybooks, and isolated plugin development setups.\n *\n * @public\n */\nexport class TestApiRegistry implements ApiHolder {\n  /**\n   * Creates a new {@link TestApiRegistry} with a list of API implementation pairs.\n   *\n   * Similar to the {@link TestApiProvider}, there is no need to provide a full\n   * implementation of each API, it's enough to implement the methods that are tested.\n   *\n   * @example\n   * ```ts\n   * const apis = TestApiRegistry.from(\n   *   [configApiRef, new ConfigReader({})],\n   *   [identityApiRef, { getUserId: () => 'tester' }],\n   * );\n   * ```\n   *\n   * @public\n   * @param apis - A list of pairs mapping an ApiRef to its respective implementation.\n   */\n  static from<TApiPairs extends any[]>(\n    ...apis: readonly [...TestApiProviderPropsApiPairs<TApiPairs>]\n  ) {\n    return new TestApiRegistry(\n      new Map(apis.map(([api, impl]) => [api.id, impl])),\n    );\n  }\n\n  private constructor(private readonly apis: Map<string, unknown>) {}\n\n  /**\n   * Returns an implementation of the API.\n   *\n   * @public\n   */\n  get<T>(api: ApiRef<T>): T | undefined {\n    return this.apis.get(api.id) as T | undefined;\n  }\n}\n\n/**\n * The `TestApiProvider` is a Utility API context provider that is particularly\n * well suited for development and test environments such as unit tests, storybooks,\n * and isolated plugin development setups.\n *\n * It lets you provide any number of API implementations, without necessarily\n * having to fully implement each of the APIs.\n *\n * @remarks\n * todo: remove this remark tag and ship in the api-reference. There's some odd formatting going on when this is made into a markdown doc, that there's no line break between\n * the emmited <p> for To the following </p> so what happens is that when parsing in docusaurus, it thinks that the code block is mdx rather than a code\n * snippet. Just ommiting this from the report for now until we can work out how to fix laterr.\n * A migration from `ApiRegistry` and `ApiProvider` might look like this, from:\n *\n * ```tsx\n * renderInTestApp(\n *   <ApiProvider\n *     apis={ApiRegistry.from([\n *       [identityApiRef, mockIdentityApi as unknown as IdentityApi]\n *     ])}\n *   >\n *    ...\n *   </ApiProvider>\n * )\n * ```\n *\n * To the following:\n *\n * ```tsx\n * renderInTestApp(\n *   <TestApiProvider apis={[[identityApiRef, mockIdentityApi]]}>\n *     ...\n *   </TestApiProvider>\n * )\n * ```\n *\n * Note that the cast to `IdentityApi` is no longer needed as long as the mock API\n * implements a subset of the `IdentityApi`.\n *\n * @public\n */\nexport const TestApiProvider = <T extends any[]>(\n  props: TestApiProviderProps<T>,\n) => {\n  return (\n    <ApiProvider\n      apis={TestApiRegistry.from(...props.apis)}\n      children={props.children}\n    />\n  );\n};\n"],"names":["__publicField"],"mappings":"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"}