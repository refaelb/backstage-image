import { b as rootDocsRouteRef } from './routes-691e552c.esm.js';
import { t as toLowerMaybe } from './TechDocsIndexPage-a43a1a1c.esm.js';
import { useRouteRef, useApi, configApiRef } from '@backstage/core-plugin-api';
import { ItemCardGrid, ItemCardHeader, LinkButton } from '@backstage/core-components';
import { Card, CardMedia, CardContent, CardActions } from '@material-ui/core';
import React from 'react';

const DocsCardGrid = (props) => {
  const { entities } = props;
  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);
  const config = useApi(configApiRef);
  if (!entities)
    return null;
  return /* @__PURE__ */ React.createElement(ItemCardGrid, { "data-testid": "docs-explore" }, !(entities == null ? void 0 : entities.length) ? null : entities.map((entity, index) => {
    var _a, _b;
    return /* @__PURE__ */ React.createElement(Card, { key: index }, /* @__PURE__ */ React.createElement(CardMedia, null, /* @__PURE__ */ React.createElement(
      ItemCardHeader,
      {
        title: (_a = entity.metadata.title) != null ? _a : entity.metadata.name
      }
    )), /* @__PURE__ */ React.createElement(CardContent, null, entity.metadata.description), /* @__PURE__ */ React.createElement(CardActions, null, /* @__PURE__ */ React.createElement(
      LinkButton,
      {
        to: getRouteToReaderPageFor({
          namespace: toLowerMaybe(
            (_b = entity.metadata.namespace) != null ? _b : "default",
            config
          ),
          kind: toLowerMaybe(entity.kind, config),
          name: toLowerMaybe(entity.metadata.name, config)
        }),
        color: "primary",
        "data-testid": "read_docs"
      },
      "Read Docs"
    )));
  }));
};

export { DocsCardGrid as D };
//# sourceMappingURL=DocsCardGrid-66754d32.esm.js.map
