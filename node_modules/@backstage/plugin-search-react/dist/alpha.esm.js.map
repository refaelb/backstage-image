{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { lazy } from 'react';\n\nimport { ListItemProps } from '@material-ui/core';\n\nimport {\n  ExtensionBoundary,\n  PortableSchema,\n  createExtension,\n  createExtensionDataRef,\n  createSchemaFromZod,\n} from '@backstage/frontend-plugin-api';\nimport { SearchDocument, SearchResult } from '@backstage/plugin-search-common';\n\nimport { SearchResultListItemExtension } from './extensions';\n\n/** @alpha */\nexport type BaseSearchResultListItemProps<T = {}> = T & {\n  rank?: number;\n  result?: SearchDocument;\n} & Omit<ListItemProps, 'button'>;\n\n/** @alpha */\nexport type SearchResultItemExtensionComponent = <\n  P extends BaseSearchResultListItemProps,\n>(\n  props: P,\n) => JSX.Element | null;\n\n/** @alpha */\nexport type SearchResultItemExtensionPredicate = (\n  result: SearchResult,\n) => boolean;\n\n/** @alpha */\nexport type SearchResultItemExtensionOptions<\n  TConfig extends { noTrack?: boolean },\n> = {\n  /**\n   * The extension namespace.\n   */\n  namespace?: string;\n  /**\n   * The extension name.\n   */\n  name?: string;\n  /**\n   * The extension attachment point (e.g., search modal or page).\n   */\n  attachTo?: { id: string; input: string };\n  /**\n   * Optional extension config schema.\n   */\n  configSchema?: PortableSchema<TConfig>;\n  /**\n   * The extension component.\n   */\n  component: (options: {\n    config: TConfig;\n  }) => Promise<SearchResultItemExtensionComponent>;\n  /**\n   * When an extension defines a predicate, it returns true if the result should be rendered by that extension.\n   * Defaults to a predicate that returns true, which means it renders all sorts of results.\n   */\n  predicate?: SearchResultItemExtensionPredicate;\n};\n\n/** @alpha */\nexport function createSearchResultListItemExtension<\n  TConfig extends { noTrack?: boolean },\n>(options: SearchResultItemExtensionOptions<TConfig>) {\n  const configSchema =\n    'configSchema' in options\n      ? options.configSchema\n      : (createSchemaFromZod(z =>\n          z.object({\n            noTrack: z.boolean().default(false),\n          }),\n        ) as PortableSchema<TConfig>);\n\n  return createExtension({\n    kind: 'search-result-list-item',\n    namespace: options.namespace,\n    name: options.name,\n    attachTo: options.attachTo ?? {\n      id: 'page:search',\n      input: 'items',\n    },\n    configSchema,\n    output: {\n      item: createSearchResultListItemExtension.itemDataRef,\n    },\n    factory({ config, node }) {\n      const ExtensionComponent = lazy(() =>\n        options\n          .component({ config })\n          .then(component => ({ default: component })),\n      ) as unknown as SearchResultItemExtensionComponent;\n\n      return {\n        item: {\n          predicate: options.predicate,\n          component: props => (\n            <ExtensionBoundary node={node}>\n              <SearchResultListItemExtension\n                rank={props.rank}\n                result={props.result}\n                noTrack={config.noTrack}\n              >\n                <ExtensionComponent {...props} />\n              </SearchResultListItemExtension>\n            </ExtensionBoundary>\n          ),\n        },\n      };\n    },\n  });\n}\n\n/** @alpha */\nexport namespace createSearchResultListItemExtension {\n  export const itemDataRef = createExtensionDataRef<{\n    predicate?: SearchResultItemExtensionPredicate;\n    component: SearchResultItemExtensionComponent;\n  }>('search.search-result-list-item.item');\n}\n"],"names":["createSearchResultListItemExtension"],"mappings":";;;;;;;;AAmFO,SAAS,oCAEd,OAAoD,EAAA;AArFtD,EAAA,IAAA,EAAA,CAAA;AAsFE,EAAA,MAAM,YACJ,GAAA,cAAA,IAAkB,OACd,GAAA,OAAA,CAAQ,YACP,GAAA,mBAAA;AAAA,IAAoB,CAAA,CAAA,KACnB,EAAE,MAAO,CAAA;AAAA,MACP,OAAS,EAAA,CAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,KAAK,CAAA;AAAA,KACnC,CAAA;AAAA,GACH,CAAA;AAEN,EAAA,OAAO,eAAgB,CAAA;AAAA,IACrB,IAAM,EAAA,yBAAA;AAAA,IACN,WAAW,OAAQ,CAAA,SAAA;AAAA,IACnB,MAAM,OAAQ,CAAA,IAAA;AAAA,IACd,QAAA,EAAA,CAAU,EAAQ,GAAA,OAAA,CAAA,QAAA,KAAR,IAAoB,GAAA,EAAA,GAAA;AAAA,MAC5B,EAAI,EAAA,aAAA;AAAA,MACJ,KAAO,EAAA,OAAA;AAAA,KACT;AAAA,IACA,YAAA;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,MAAM,mCAAoC,CAAA,WAAA;AAAA,KAC5C;AAAA,IACA,OAAQ,CAAA,EAAE,MAAQ,EAAA,IAAA,EAAQ,EAAA;AACxB,MAAA,MAAM,kBAAqB,GAAA,IAAA;AAAA,QAAK,MAC9B,OAAA,CACG,SAAU,CAAA,EAAE,MAAO,EAAC,CACpB,CAAA,IAAA,CAAK,CAAc,SAAA,MAAA,EAAE,OAAS,EAAA,SAAA,EAAY,CAAA,CAAA;AAAA,OAC/C,CAAA;AAEA,MAAO,OAAA;AAAA,QACL,IAAM,EAAA;AAAA,UACJ,WAAW,OAAQ,CAAA,SAAA;AAAA,UACnB,SAAW,EAAA,CAAA,KAAA,qBACR,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,EAAkB,IACjB,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,YAAC,6BAAA;AAAA,YAAA;AAAA,cACC,MAAM,KAAM,CAAA,IAAA;AAAA,cACZ,QAAQ,KAAM,CAAA,MAAA;AAAA,cACd,SAAS,MAAO,CAAA,OAAA;AAAA,aAAA;AAAA,4BAEhB,KAAA,CAAA,aAAA,CAAC,kBAAoB,EAAA,EAAA,GAAG,KAAO,EAAA,CAAA;AAAA,WAEnC,CAAA;AAAA,SAEJ;AAAA,OACF,CAAA;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AACH,CAAA;AAAA,CAGO,CAAUA,oCAAV,KAAA;AACE,EAAMA,oCAAAA,CAAA,WAAc,GAAA,sBAAA,CAGxB,qCAAqC,CAAA,CAAA;AAAA,CAJzB,EAAA,mCAAA,KAAA,mCAAA,GAAA,EAAA,CAAA,CAAA;;;;"}