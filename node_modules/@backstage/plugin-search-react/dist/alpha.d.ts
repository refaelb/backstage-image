/// <reference types="react" />
import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';
import { PortableSchema } from '@backstage/frontend-plugin-api';
import { ListItemProps } from '@material-ui/core';
import { SearchDocument, SearchResult } from '@backstage/plugin-search-common';

/** @alpha */
type BaseSearchResultListItemProps<T = {}> = T & {
    rank?: number;
    result?: SearchDocument;
} & Omit<ListItemProps, 'button'>;
/** @alpha */
type SearchResultItemExtensionComponent = <P extends BaseSearchResultListItemProps>(props: P) => JSX.Element | null;
/** @alpha */
type SearchResultItemExtensionPredicate = (result: SearchResult) => boolean;
/** @alpha */
type SearchResultItemExtensionOptions<TConfig extends {
    noTrack?: boolean;
}> = {
    /**
     * The extension namespace.
     */
    namespace?: string;
    /**
     * The extension name.
     */
    name?: string;
    /**
     * The extension attachment point (e.g., search modal or page).
     */
    attachTo?: {
        id: string;
        input: string;
    };
    /**
     * Optional extension config schema.
     */
    configSchema?: PortableSchema<TConfig>;
    /**
     * The extension component.
     */
    component: (options: {
        config: TConfig;
    }) => Promise<SearchResultItemExtensionComponent>;
    /**
     * When an extension defines a predicate, it returns true if the result should be rendered by that extension.
     * Defaults to a predicate that returns true, which means it renders all sorts of results.
     */
    predicate?: SearchResultItemExtensionPredicate;
};
/** @alpha */
declare function createSearchResultListItemExtension<TConfig extends {
    noTrack?: boolean;
}>(options: SearchResultItemExtensionOptions<TConfig>): _backstage_frontend_plugin_api.ExtensionDefinition<TConfig>;
/** @alpha */
declare namespace createSearchResultListItemExtension {
    const itemDataRef: _backstage_frontend_plugin_api.ConfigurableExtensionDataRef<{
        predicate?: SearchResultItemExtensionPredicate | undefined;
        component: SearchResultItemExtensionComponent;
    }, {}>;
}

export { BaseSearchResultListItemProps, SearchResultItemExtensionComponent, SearchResultItemExtensionOptions, SearchResultItemExtensionPredicate, createSearchResultListItemExtension };
