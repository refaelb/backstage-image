{"version":3,"file":"index.esm.js","sources":["../src/addons.tsx","../src/api.ts","../src/helpers.ts","../src/context.tsx","../src/types.ts","../src/component.tsx","../src/hooks.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useCallback } from 'react';\nimport { useOutlet } from 'react-router-dom';\n\nimport {\n  attachComponentData,\n  createReactExtension,\n  ElementCollection,\n  Extension,\n  useElementFilter,\n} from '@backstage/core-plugin-api';\n\nimport { TechDocsAddonLocations, TechDocsAddonOptions } from './types';\n\n/**\n * Key for each addon.\n * @public\n */\nexport const TECHDOCS_ADDONS_KEY = 'techdocs.addons.addon.v1';\n\n/**\n * Marks the `<TechDocsAddons>` registry component.\n * @public\n */\nexport const TECHDOCS_ADDONS_WRAPPER_KEY = 'techdocs.addons.wrapper.v1';\n\n/**\n * TechDocs Addon registry.\n * @public\n */\nexport const TechDocsAddons: React.ComponentType<\n  React.PropsWithChildren<{}>\n> = () => null;\n\nattachComponentData(TechDocsAddons, TECHDOCS_ADDONS_WRAPPER_KEY, true);\n\nconst getDataKeyByName = (name: string) => {\n  return `${TECHDOCS_ADDONS_KEY}.${name.toLocaleLowerCase('en-US')}`;\n};\n\n/**\n * Create a TechDocs addon overload signature without props.\n * @public\n */\nexport function createTechDocsAddonExtension(\n  options: TechDocsAddonOptions,\n): Extension<() => JSX.Element | null>;\n\n/**\n * Create a TechDocs addon overload signature with props.\n * @public\n */\nexport function createTechDocsAddonExtension<TComponentProps>(\n  options: TechDocsAddonOptions<TComponentProps>,\n): Extension<(props: TComponentProps) => JSX.Element | null>;\n\n/**\n * Create a TechDocs addon implementation.\n * @public\n */\nexport function createTechDocsAddonExtension<\n  TComponentProps extends React.PropsWithChildren<{}>,\n>(\n  options: TechDocsAddonOptions<TComponentProps>,\n): Extension<(props: TComponentProps) => JSX.Element | null> {\n  const { name, component: TechDocsAddon } = options;\n  return createReactExtension({\n    name,\n    component: {\n      sync: (props: TComponentProps) => <TechDocsAddon {...props} />,\n    },\n    data: {\n      [TECHDOCS_ADDONS_KEY]: options,\n      [getDataKeyByName(name)]: true,\n    },\n  });\n}\n\nconst getTechDocsAddonByName = (\n  collection: ElementCollection,\n  key: string,\n): JSX.Element | undefined => {\n  return collection.selectByComponentData({ key }).getElements()[0];\n};\n\nconst getAllTechDocsAddons = (collection: ElementCollection) => {\n  return collection\n    .selectByComponentData({\n      key: TECHDOCS_ADDONS_WRAPPER_KEY,\n    })\n    .selectByComponentData({\n      key: TECHDOCS_ADDONS_KEY,\n    });\n};\n\nconst getAllTechDocsAddonsData = (collection: ElementCollection) => {\n  return collection\n    .selectByComponentData({\n      key: TECHDOCS_ADDONS_WRAPPER_KEY,\n    })\n    .findComponentData<TechDocsAddonOptions>({\n      key: TECHDOCS_ADDONS_KEY,\n    });\n};\n\n/**\n * hook to use addons in components\n * @public\n */\nexport const useTechDocsAddons = () => {\n  const node = useOutlet();\n  const collection = useElementFilter(node, getAllTechDocsAddons);\n  const options = useElementFilter(node, getAllTechDocsAddonsData);\n\n  const findAddonByData = useCallback(\n    (data: TechDocsAddonOptions | undefined) => {\n      if (!collection || !data) return null;\n      const nameKey = getDataKeyByName(data.name);\n      return getTechDocsAddonByName(collection, nameKey) ?? null;\n    },\n    [collection],\n  );\n\n  const renderComponentByName = useCallback(\n    (name: string) => {\n      const data = options.find(option => option.name === name);\n      return data ? findAddonByData(data) : null;\n    },\n    [options, findAddonByData],\n  );\n\n  const renderComponentsByLocation = useCallback(\n    (location: keyof typeof TechDocsAddonLocations) => {\n      const data = options.filter(option => option.location === location);\n      return data.length ? data.map(findAddonByData) : null;\n    },\n    [options, findAddonByData],\n  );\n\n  return { renderComponentByName, renderComponentsByLocation };\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { TechDocsEntityMetadata, TechDocsMetadata } from './types';\n\n/**\n * API to talk to techdocs-backend.\n *\n * @public\n */\nexport interface TechDocsApi {\n  getApiOrigin(): Promise<string>;\n  getTechDocsMetadata(entityId: CompoundEntityRef): Promise<TechDocsMetadata>;\n  getEntityMetadata(\n    entityId: CompoundEntityRef,\n  ): Promise<TechDocsEntityMetadata>;\n}\n\n/**\n * Utility API reference for the {@link TechDocsApi}.\n *\n * @public\n */\nexport const techdocsApiRef = createApiRef<TechDocsApi>({\n  id: 'plugin.techdocs.service',\n});\n\n/**\n * The outcome of a docs sync operation.\n *\n * @public\n */\nexport type SyncResult = 'cached' | 'updated';\n\n/**\n * API which talks to TechDocs storage to fetch files to render.\n *\n * @public\n */\nexport interface TechDocsStorageApi {\n  getApiOrigin(): Promise<string>;\n  getStorageUrl(): Promise<string>;\n  getBuilder(): Promise<string>;\n  getEntityDocs(entityId: CompoundEntityRef, path: string): Promise<string>;\n  syncEntityDocs(\n    entityId: CompoundEntityRef,\n    logHandler?: (line: string) => void,\n  ): Promise<SyncResult>;\n  getBaseUrl(\n    oldBaseUrl: string,\n    entityId: CompoundEntityRef,\n    path: string,\n  ): Promise<string>;\n}\n\n/**\n * Utility API reference for the {@link TechDocsStorageApi}.\n *\n * @public\n */\nexport const techdocsStorageApiRef = createApiRef<TechDocsStorageApi>({\n  id: 'plugin.techdocs.storageservice',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\n\n/**\n * Lower-case entity triplets by default, but allow override.\n *\n * @public\n */\nexport function toLowercaseEntityRefMaybe(\n  entityRef: CompoundEntityRef,\n  config: Config,\n): CompoundEntityRef {\n  if (config.getOptionalBoolean('techdocs.legacyUseCaseSensitiveTripletPaths'))\n    return entityRef;\n\n  entityRef.kind = entityRef.kind.toLocaleLowerCase();\n  entityRef.name = entityRef.name.toLocaleLowerCase();\n  entityRef.namespace = entityRef.namespace.toLocaleLowerCase();\n\n  return entityRef;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useState,\n  memo,\n  ReactNode,\n  useEffect,\n} from 'react';\nimport useAsync, { AsyncState } from 'react-use/lib/useAsync';\nimport useAsyncRetry from 'react-use/lib/useAsyncRetry';\n\nimport {\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  createVersionedContext,\n  createVersionedValueMap,\n} from '@backstage/version-bridge';\n\nimport {\n  AnalyticsContext,\n  configApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\n\nimport { techdocsApiRef } from './api';\nimport { TechDocsEntityMetadata, TechDocsMetadata } from './types';\n\nimport { toLowercaseEntityRefMaybe } from './helpers';\n\nconst areEntityRefsEqual = (\n  prevEntityRef: CompoundEntityRef,\n  nextEntityRef: CompoundEntityRef,\n) => {\n  return (\n    stringifyEntityRef(prevEntityRef) === stringifyEntityRef(nextEntityRef)\n  );\n};\n\n/**\n * @public type for the value of the TechDocsReaderPageContext\n */\nexport type TechDocsReaderPageValue = {\n  metadata: AsyncState<TechDocsMetadata>;\n  entityRef: CompoundEntityRef;\n  entityMetadata: AsyncState<TechDocsEntityMetadata>;\n  shadowRoot?: ShadowRoot;\n  setShadowRoot: Dispatch<SetStateAction<ShadowRoot | undefined>>;\n  title: string;\n  setTitle: Dispatch<SetStateAction<string>>;\n  subtitle: string;\n  setSubtitle: Dispatch<SetStateAction<string>>;\n  /**\n   * @deprecated property can be passed down directly to the `TechDocsReaderPageContent` instead.\n   */\n  onReady?: () => void;\n};\n\nconst defaultTechDocsReaderPageValue: TechDocsReaderPageValue = {\n  title: '',\n  subtitle: '',\n  setTitle: () => {},\n  setSubtitle: () => {},\n  setShadowRoot: () => {},\n  metadata: { loading: true },\n  entityMetadata: { loading: true },\n  entityRef: { kind: '', name: '', namespace: '' },\n};\n\nconst TechDocsReaderPageContext = createVersionedContext<{\n  1: TechDocsReaderPageValue;\n}>('techdocs-reader-page-context');\n\n/**\n * render function for {@link TechDocsReaderPageProvider}\n *\n * @public\n */\nexport type TechDocsReaderPageProviderRenderFunction = (\n  value: TechDocsReaderPageValue,\n) => JSX.Element;\n\n/**\n * Props for {@link TechDocsReaderPageProvider}\n *\n * @public\n */\nexport type TechDocsReaderPageProviderProps = {\n  entityRef: CompoundEntityRef;\n  children: TechDocsReaderPageProviderRenderFunction | ReactNode;\n};\n\n/**\n * A context to store the reader page state\n * @public\n */\nexport const TechDocsReaderPageProvider = memo(\n  (props: TechDocsReaderPageProviderProps) => {\n    const { entityRef, children } = props;\n\n    const techdocsApi = useApi(techdocsApiRef);\n    const config = useApi(configApiRef);\n\n    const entityMetadata = useAsync(async () => {\n      return techdocsApi.getEntityMetadata(entityRef);\n    }, [entityRef]);\n\n    const metadata = useAsyncRetry(async () => {\n      return techdocsApi.getTechDocsMetadata(entityRef);\n    }, [entityRef]);\n\n    const [title, setTitle] = useState(defaultTechDocsReaderPageValue.title);\n    const [subtitle, setSubtitle] = useState(\n      defaultTechDocsReaderPageValue.subtitle,\n    );\n    const [shadowRoot, setShadowRoot] = useState<ShadowRoot | undefined>(\n      defaultTechDocsReaderPageValue.shadowRoot,\n    );\n\n    useEffect(() => {\n      if (shadowRoot && !metadata.value && !metadata.loading) {\n        metadata.retry();\n      }\n    }, [\n      metadata.value,\n      metadata.loading,\n      shadowRoot,\n      metadata.retry,\n      metadata,\n    ]);\n\n    const value: TechDocsReaderPageValue = {\n      metadata,\n      entityRef: toLowercaseEntityRefMaybe(entityRef, config),\n      entityMetadata,\n      shadowRoot,\n      setShadowRoot,\n      title,\n      setTitle,\n      subtitle,\n      setSubtitle,\n    };\n    const versionedValue = createVersionedValueMap({ 1: value });\n\n    return (\n      <AnalyticsContext\n        attributes={{ entityRef: stringifyEntityRef(entityRef) }}\n      >\n        <TechDocsReaderPageContext.Provider value={versionedValue}>\n          {children instanceof Function ? children(value) : children}\n        </TechDocsReaderPageContext.Provider>\n      </AnalyticsContext>\n    );\n  },\n  (prevProps, nextProps) => {\n    return areEntityRefsEqual(prevProps.entityRef, nextProps.entityRef);\n  },\n);\n\n/**\n * Hook used to get access to shared state between reader page components.\n * @public\n */\nexport const useTechDocsReaderPage = () => {\n  const versionedContext = useContext(TechDocsReaderPageContext);\n\n  if (versionedContext === undefined) {\n    return defaultTechDocsReaderPageValue;\n  }\n\n  const context = versionedContext.atVersion(1);\n  if (context === undefined) {\n    throw new Error('No context found for version 1.');\n  }\n\n  return context;\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentType } from 'react';\nimport { Entity } from '@backstage/catalog-model';\n\n/**\n * Metadata for TechDocs page\n *\n * @public\n */\nexport type TechDocsMetadata = {\n  site_name: string;\n  site_description: string;\n};\n\n/**\n * Metadata for TechDocs Entity\n *\n * @public\n */\nexport type TechDocsEntityMetadata = Entity & {\n  locationMetadata?: { type: string; target: string };\n};\n\n/**\n * Locations for which TechDocs addons may be declared and rendered.\n * @public\n */\nexport const TechDocsAddonLocations = Object.freeze({\n  /**\n   * These addons fill up the header from the right, on the same line as the\n   * title.\n   */\n  Header: 'Header',\n\n  /**\n   * These addons appear below the header and above all content; tooling addons\n   * can be inserted for convenience.\n   */\n  Subheader: 'Subheader',\n\n  /**\n   * These addons are items added to the settings menu list and are designed to make\n   * the reader experience customizable, for example accessibility options\n   */\n  Settings: 'Settings',\n\n  /**\n   * These addons appear left of the content and above the navigation.\n   */\n  PrimarySidebar: 'PrimarySidebar',\n\n  /**\n   * These addons appear right of the content and above the table of contents.\n   */\n  SecondarySidebar: 'SecondarySidebar',\n\n  /**\n   * A virtual location which allows mutation of all content within the shadow\n   * root by transforming DOM nodes. These addons should return null on render.\n   */\n  Content: 'Content',\n\n  /**\n   * todo(backstage/community): This is a proposed virtual location which would\n   * help implement a common addon pattern in which many instances of a given\n   * element in markdown would be dynamically replaced at render-time based on\n   * attributes provided on that element, for example:\n   *\n   * ```md\n   * ## For Fun\n   * <TechDocsAddon>CatGif</TechDocsAddon>\n   *\n   * ## Component Metadata\n   * <TechDocsAddon entityRef=\"default:component/some-component-name\">CatalogEntityCard</TechDocsAddon>\n   *\n   * ## System Metadata\n   * <TechDocsAddon entityRef=\"default:system/some-system-name\">CatalogEntityCard</TechDocsAddon>\n   * ```\n   *\n   * Could correspond to a TechDocs addon named `CatalogEntityCard` with\n   * location `TechDocsAddonLocations.COMPONENT`, whose `component` would be\n   * the react component that would be rendered in place of all instances of\n   * the markdown illustrated above.\n   *\n   * The `@backstage/plugin-techdocs-react` package would need to be updated to, in\n   * cases where such addons had been registered, find all instances of the\n   * the `<TechDocsAddon>` tag whose `textContent` corresponded with the name of the\n   * addon, then replace them with component instances of the addon component,\n   * passing any attributes from the tag as props to the component.\n   */\n  // Component: 'Component',\n} as const);\n\n/**\n * Options for creating a TechDocs addon.\n * @public\n */\nexport type TechDocsAddonOptions<TAddonProps = {}> = {\n  name: string;\n  location: keyof typeof TechDocsAddonLocations;\n  component: ComponentType<TAddonProps>;\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  PropsWithChildren,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\n\nimport { create } from 'jss';\nimport { StylesProvider, jssPreset } from '@material-ui/styles';\n\nimport { Progress } from '@backstage/core-components';\n\n/**\n * Name for the event dispatched when ShadowRoot styles are loaded.\n * @public\n */\nexport const SHADOW_DOM_STYLE_LOAD_EVENT = 'TECH_DOCS_SHADOW_DOM_STYLE_LOAD';\n\n/**\n * Dispatch style load event after all styles are loaded.\n * @param element - the ShadowRoot tree.\n */\nconst useShadowDomStylesEvents = (element: Element | null) => {\n  useEffect(() => {\n    if (!element) {\n      return () => {};\n    }\n\n    const styles = element.querySelectorAll<HTMLElement>(\n      'head > link[rel=\"stylesheet\"]',\n    );\n\n    let count = styles?.length ?? 0;\n    const event = new CustomEvent(SHADOW_DOM_STYLE_LOAD_EVENT);\n\n    if (!count) {\n      element.dispatchEvent(event);\n      return () => {};\n    }\n\n    const handleLoad = () => {\n      if (--count === 0) {\n        element.dispatchEvent(event);\n      }\n    };\n\n    styles?.forEach(style => {\n      style.addEventListener('load', handleLoad);\n    });\n\n    return () => {\n      styles?.forEach(style => {\n        style.removeEventListener('load', handleLoad);\n      });\n    };\n  }, [element]);\n};\n\n/**\n * Returns the style's loading state.\n *\n * @example\n * Here's an example that updates the sidebar position only after styles are calculated:\n * ```jsx\n * import {\n *   TechDocsShadowDom,\n *   useShadowDomStylesLoading,\n * } from '@backstage/plugin-techdocs-react';\n *\n * export const TechDocsReaderPageContent = () => {\n *   // ...\n *   const dom = useTechDocsReaderDom(entity);\n *   const isStyleLoading = useShadowDomStylesLoading(dom);\n *\n *   const updateSidebarPosition = useCallback(() => {\n *     //...\n *   }, [dom]);\n *\n *   useEffect(() => {\n *     if (!isStyleLoading) {\n *       updateSidebarPosition();\n *     }\n *   }, [isStyleLoading, updateSidebarPosition]);\n *\n *   const handleDomAppend = useCallback(\n *     (newShadowRoot: ShadowRoot) => {\n *       setShadowRoot(newShadowRoot);\n *     },\n *     [setShadowRoot],\n *   );\n *\n *   return <TechDocsShadowDom element={dom} onAppend={handleDomAppend} />;\n * };\n * ```\n *\n * @param element - which is the ShadowRoot tree.\n * @returns a boolean value, true if styles are being loaded.\n * @public\n */\nexport const useShadowDomStylesLoading = (element: Element | null) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!element) return () => {};\n\n    setLoading(true);\n\n    const style = (element as HTMLElement).style;\n\n    style.setProperty('opacity', '0');\n\n    const handleLoad = () => {\n      setLoading(false);\n      style.setProperty('opacity', '1');\n    };\n\n    element.addEventListener(SHADOW_DOM_STYLE_LOAD_EVENT, handleLoad);\n\n    return () => {\n      element.removeEventListener(SHADOW_DOM_STYLE_LOAD_EVENT, handleLoad);\n    };\n  }, [element]);\n\n  return loading;\n};\n\n/**\n * Props for {@link TechDocsShadowDom}.\n *\n * @remarks\n * If you want to use portals to render Material UI components in the Shadow DOM,\n * you must render these portals as children because this component wraps its children in a Material UI StylesProvider\n * to ensure that Material UI styles are applied.\n *\n * @public\n */\nexport type TechDocsShadowDomProps = PropsWithChildren<{\n  /**\n   * Element tree that is appended to ShadowRoot.\n   */\n  element: Element;\n  /**\n   * Callback called when the element tree is appended in ShadowRoot.\n   */\n  onAppend?: (shadowRoot: ShadowRoot) => void;\n}>;\n\n/**\n * Renders a tree of elements in a Shadow DOM.\n *\n * @remarks\n * Centers the styles loaded event to avoid having multiple locations setting the opacity style in Shadow DOM causing the screen to flash multiple times,\n * so if you want to know when Shadow DOM styles are computed, you can listen for the \"TECH_DOCS_SHADOW_DOM_STYLE_LOAD\" event dispatched by the element tree.\n *\n * @example\n * Here is an example using this component and also listening for styles loaded event:\n *```jsx\n * import {\n *   TechDocsShadowDom,\n *   SHADOW_DOM_STYLE_LOAD_EVENT,\n * } from '@backstage/plugin-techdocs-react';\n *\n * export const TechDocsReaderPageContent = ({ entity }: TechDocsReaderPageContentProps) => {\n *   // ...\n *   const dom = useTechDocsReaderDom(entity);\n *\n *   useEffect(() => {\n *     const updateSidebarPosition = () => {\n *       // ...\n *     };\n *     dom?.addEventListener(SHADOW_DOM_STYLE_LOAD_EVENT, updateSidebarPosition);\n *     return () => {\n *       dom?.removeEventListener(SHADOW_DOM_STYLE_LOAD_EVENT, updateSidebarPosition);\n *     };\n *   }, [dom]);\n *\n *   const handleDomAppend = useCallback(\n *     (newShadowRoot: ShadowRoot) => {\n *       setShadowRoot(newShadowRoot);\n *     },\n *     [setShadowRoot],\n *   );\n *\n *   return <TechDocsShadowDom element={dom} onAppend={handleDomAppend} />;\n * };\n * ```\n *\n * @param props - see {@link TechDocsShadowDomProps}.\n * @public\n */\nexport const TechDocsShadowDom = (props: TechDocsShadowDomProps) => {\n  const { element, onAppend, children } = props;\n\n  const [jss, setJss] = useState(\n    create({\n      ...jssPreset(),\n      insertionPoint: undefined,\n    }),\n  );\n\n  useShadowDomStylesEvents(element);\n  const loading = useShadowDomStylesLoading(element);\n\n  const ref = useCallback(\n    (shadowHost: HTMLDivElement) => {\n      if (!element || !shadowHost) return;\n\n      setJss(\n        create({\n          ...jssPreset(),\n          insertionPoint: element.querySelector('head') || undefined,\n        }),\n      );\n\n      let shadowRoot = shadowHost.shadowRoot;\n\n      if (!shadowRoot) {\n        shadowRoot = shadowHost.attachShadow({ mode: 'open' });\n      }\n\n      shadowRoot.replaceChildren(element);\n\n      if (typeof onAppend === 'function') {\n        onAppend(shadowRoot);\n      }\n    },\n    [element, onAppend],\n  );\n\n  return (\n    <>\n      {loading && <Progress />}\n      {/* The sheetsManager={new Map()} is needed in order to deduplicate the injection of CSS in the page. */}\n      <StylesProvider jss={jss} sheetsManager={new Map()}>\n        <div ref={ref} data-testid=\"techdocs-native-shadowroot\" />\n        {children}\n      </StylesProvider>\n    </>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState, useEffect, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useTechDocsReaderPage } from './context';\n\n/**\n * Hook for use within TechDocs addons that provides access to the underlying\n * shadow root of the current page, allowing the DOM within to be mutated.\n * @public\n */\nexport const useShadowRoot = () => {\n  const { shadowRoot } = useTechDocsReaderPage();\n  return shadowRoot;\n};\n\n/**\n * Convenience hook for use within TechDocs addons that provides access to\n * elements that match a given selector within the shadow root.\n *\n * @public\n */\nexport const useShadowRootElements = <\n  TReturnedElement extends HTMLElement = HTMLElement,\n>(\n  selectors: string[],\n): TReturnedElement[] => {\n  const shadowRoot = useShadowRoot();\n  if (!shadowRoot) return [];\n  return selectors\n    .map(selector => shadowRoot?.querySelectorAll<TReturnedElement>(selector))\n    .filter(nodeList => nodeList.length)\n    .map(nodeList => Array.from(nodeList))\n    .flat();\n};\n\nconst isValidSelection = (newSelection: Selection) => {\n  // Safari sets the selection rect to top zero\n  return (\n    newSelection.toString() &&\n    newSelection.rangeCount &&\n    newSelection.getRangeAt(0).getBoundingClientRect().top\n  );\n};\n\n/**\n * Hook for retrieving a selection within the ShadowRoot.\n * @public\n */\nexport const useShadowRootSelection = (waitMillis: number = 0) => {\n  const shadowRoot = useShadowRoot();\n  const [selection, setSelection] = useState<Selection | null>(null);\n  const handleSelectionChange = useMemo(\n    () =>\n      debounce(() => {\n        const shadowDocument = shadowRoot as ShadowRoot &\n          Pick<Document, 'getSelection'>;\n        // Firefox and Safari don't implement getSelection for Shadow DOM\n        const newSelection = shadowDocument.getSelection\n          ? shadowDocument.getSelection()\n          : document.getSelection();\n\n        if (newSelection && isValidSelection(newSelection)) {\n          setSelection(newSelection);\n        } else {\n          setSelection(null);\n        }\n      }, waitMillis),\n    [shadowRoot, setSelection, waitMillis],\n  );\n\n  useEffect(() => {\n    window.document.addEventListener('selectionchange', handleSelectionChange);\n    return () => {\n      handleSelectionChange.cancel();\n      window.document.removeEventListener(\n        'selectionchange',\n        handleSelectionChange,\n      );\n    };\n  }, [handleSelectionChange]);\n\n  return selection;\n};\n"],"names":[],"mappings":"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"}