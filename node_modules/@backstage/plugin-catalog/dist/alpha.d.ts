/// <reference types="react" />
import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';
import { AnyExtensionInputMap, PortableSchema } from '@backstage/frontend-plugin-api';

/** @alpha */
declare const _default: _backstage_frontend_plugin_api.BackstagePlugin<{
    catalogIndex: _backstage_frontend_plugin_api.RouteRef<undefined>;
    catalogEntity: _backstage_frontend_plugin_api.RouteRef<{
        name: string;
        kind: string;
        namespace: string;
    }>;
}, {
    viewTechDoc: _backstage_frontend_plugin_api.ExternalRouteRef<{
        name: string;
        kind: string;
        namespace: string;
    }, true>;
    createComponent: _backstage_frontend_plugin_api.ExternalRouteRef<undefined, true>;
    createFromTemplate: _backstage_frontend_plugin_api.ExternalRouteRef<{
        namespace: string;
        templateName: string;
    }, true>;
    unregisterRedirect: _backstage_frontend_plugin_api.ExternalRouteRef<undefined, true>;
}>;

/** @alpha */
declare function createCatalogFilterExtension<TInputs extends AnyExtensionInputMap, TConfig = never>(options: {
    namespace?: string;
    name?: string;
    inputs?: TInputs;
    configSchema?: PortableSchema<TConfig>;
    loader: (options: {
        config: TConfig;
    }) => Promise<JSX.Element>;
}): _backstage_frontend_plugin_api.ExtensionDefinition<TConfig>;

export { createCatalogFilterExtension, _default as default };
