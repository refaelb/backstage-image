{"version":3,"file":"presets-c708fd7b.esm.js","sources":["../../src/components/RelatedEntitiesCard/RelatedEntitiesCard.tsx","../../src/components/RelatedEntitiesCard/presets.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  ResponseErrorPanel,\n  TableColumn,\n  TableOptions,\n} from '@backstage/core-components';\n\n/** @public */\nexport type RelatedEntitiesCardProps<T extends Entity> = {\n  variant?: InfoCardVariants;\n  title: string;\n  columns: TableColumn<T>[];\n  entityKind?: string;\n  relationType: string;\n  emptyMessage: string;\n  emptyHelpLink: string;\n  asRenderableEntities: (entities: Entity[]) => T[];\n  tableOptions?: TableOptions;\n};\n\n/**\n * A low level card component that can be used as a building block for more\n * specific cards.\n *\n * @remarks\n *\n * You probably want to make a dedicated component for your needs, which renders\n * this card as its implementation with some of the props set to the appropriate\n * values.\n *\n * @public\n */\nexport function RelatedEntitiesCard<T extends Entity>(\n  props: RelatedEntitiesCardProps<T>,\n) {\n  const {\n    variant = 'gridItem',\n    title,\n    columns,\n    entityKind,\n    relationType,\n    emptyMessage,\n    emptyHelpLink,\n    asRenderableEntities,\n    tableOptions = {},\n  } = props;\n\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: relationType,\n    kind: entityKind,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title={title}>\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error) {\n    return (\n      <InfoCard variant={variant} title={title}>\n        <ResponseErrorPanel error={error} />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title={title}\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">{emptyMessage}</Typography>\n          <Typography variant=\"body2\">\n            <Link to={emptyHelpLink}>Learn how to change this.</Link>\n          </Typography>\n        </div>\n      }\n      columns={columns}\n      entities={asRenderableEntities(entities || [])}\n      tableOptions={tableOptions}\n    />\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  ComponentEntity,\n  Entity,\n  ResourceEntity,\n  SystemEntity,\n} from '@backstage/catalog-model';\nimport { EntityTable } from '@backstage/plugin-catalog-react';\nimport { TableColumn } from '@backstage/core-components';\n\nexport const componentEntityColumns: TableColumn<ComponentEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'component' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const componentEntityHelpLink: string =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component';\nexport const asComponentEntities = (entities: Entity[]): ComponentEntity[] =>\n  entities as ComponentEntity[];\n\nexport const resourceEntityColumns: TableColumn<ResourceEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'resource' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const resourceEntityHelpLink: string =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-resource';\nexport const asResourceEntities = (entities: Entity[]): ResourceEntity[] =>\n  entities as ResourceEntity[];\n\nexport const systemEntityColumns: TableColumn<SystemEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'system' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const systemEntityHelpLink: string =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system';\nexport const asSystemEntities = (entities: Entity[]): SystemEntity[] =>\n  entities as SystemEntity[];\n"],"names":[],"mappings":"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"}