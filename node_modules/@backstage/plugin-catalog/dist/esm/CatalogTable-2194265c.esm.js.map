{"version":3,"file":"CatalogTable-2194265c.esm.js","sources":["../../src/components/CatalogTable/columns.tsx","../../src/components/CatalogTable/PaginatedCatalogTable.tsx","../../src/components/CatalogTable/CatalogTable.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  humanizeEntityRef,\n  EntityRefLink,\n  EntityRefLinks,\n} from '@backstage/plugin-catalog-react';\nimport { Chip } from '@material-ui/core';\nimport { CatalogTableRow } from './types';\nimport { OverflowTooltip, TableColumn } from '@backstage/core-components';\nimport { Entity } from '@backstage/catalog-model';\nimport { JsonArray } from '@backstage/types';\n\n// The columnFactories symbol is not directly exported, but through the\n// CatalogTable.columns field.\n/** @public */\nexport const columnFactories = Object.freeze({\n  createNameColumn(options?: {\n    defaultKind?: string;\n  }): TableColumn<CatalogTableRow> {\n    function formatContent(entity: Entity): string {\n      return (\n        entity.metadata?.title ||\n        humanizeEntityRef(entity, {\n          defaultKind: options?.defaultKind,\n        })\n      );\n    }\n\n    return {\n      title: 'Name',\n      field: 'resolved.entityRef',\n      highlight: true,\n      customSort({ entity: entity1 }, { entity: entity2 }) {\n        // TODO: We could implement this more efficiently by comparing field by field.\n        // This has similar issues as above.\n        return formatContent(entity1).localeCompare(formatContent(entity2));\n      },\n      render: ({ entity }) => (\n        <EntityRefLink\n          entityRef={entity}\n          defaultKind={options?.defaultKind || 'Component'}\n        />\n      ),\n    };\n  },\n  createSystemColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'System',\n      field: 'resolved.partOfSystemRelationTitle',\n      render: ({ resolved }) => (\n        <EntityRefLinks\n          entityRefs={resolved.partOfSystemRelations}\n          defaultKind=\"system\"\n        />\n      ),\n    };\n  },\n  createOwnerColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Owner',\n      field: 'resolved.ownedByRelationsTitle',\n      render: ({ resolved }) => (\n        <EntityRefLinks\n          entityRefs={resolved.ownedByRelations}\n          defaultKind=\"group\"\n        />\n      ),\n    };\n  },\n  createSpecTargetsColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Targets',\n      field: 'entity.spec.targets',\n      render: ({ entity }) => (\n        <>\n          {(entity?.spec?.targets || entity?.spec?.target) && (\n            <OverflowTooltip\n              text={(\n                (entity!.spec!.targets as JsonArray) || [entity.spec.target]\n              ).join(', ')}\n              placement=\"bottom-start\"\n            />\n          )}\n        </>\n      ),\n    };\n  },\n  createSpecTypeColumn(\n    options: {\n      hidden: boolean;\n    } = { hidden: false },\n  ): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Type',\n      field: 'entity.spec.type',\n      hidden: options.hidden,\n      width: 'auto',\n    };\n  },\n  createSpecLifecycleColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Lifecycle',\n      field: 'entity.spec.lifecycle',\n    };\n  },\n  createMetadataDescriptionColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Description',\n      field: 'entity.metadata.description',\n      render: ({ entity }) => (\n        <OverflowTooltip\n          text={entity.metadata.description}\n          placement=\"bottom-start\"\n        />\n      ),\n      width: 'auto',\n    };\n  },\n  createTagsColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Tags',\n      field: 'entity.metadata.tags',\n      cellStyle: {\n        padding: '0px 16px 0px 20px',\n      },\n      render: ({ entity }) => (\n        <>\n          {entity.metadata.tags &&\n            entity.metadata.tags.map(t => (\n              <Chip\n                key={t}\n                label={t}\n                size=\"small\"\n                variant=\"outlined\"\n                style={{ marginBottom: '0px' }}\n              />\n            ))}\n        </>\n      ),\n      width: 'auto',\n    };\n  },\n  createTitleColumn(options?: {\n    hidden?: boolean;\n  }): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Title',\n      field: 'entity.metadata.title',\n      hidden: options?.hidden,\n      searchable: true,\n    };\n  },\n  createLabelColumn(\n    key: string,\n    options?: { title?: string; defaultValue?: string },\n  ): TableColumn<CatalogTableRow> {\n    return {\n      title: options?.title || 'Label',\n      field: 'entity.metadata.labels',\n      cellStyle: {\n        padding: '0px 16px 0px 20px',\n      },\n      render: ({ entity }: { entity: Entity }) => {\n        const labels: Record<string, string> | undefined =\n          entity.metadata?.labels;\n        const specifiedLabelValue =\n          (labels && labels[key]) || options?.defaultValue;\n        return (\n          <>\n            {specifiedLabelValue && (\n              <Chip\n                key={specifiedLabelValue}\n                label={specifiedLabelValue}\n                size=\"small\"\n                variant=\"outlined\"\n              />\n            )}\n          </>\n        );\n      },\n      width: 'auto',\n    };\n  },\n  createNamespaceColumn(): TableColumn<CatalogTableRow> {\n    return {\n      title: 'Namespace',\n      field: 'entity.metadata.namespace',\n      width: 'auto',\n    };\n  },\n});\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport { Table, TableProps } from '@backstage/core-components';\nimport { CatalogTableRow } from './types';\n\ntype PaginatedCatalogTableProps = {\n  prev?(): void;\n  next?(): void;\n} & TableProps<CatalogTableRow>;\n\n/**\n * @internal\n */\nexport function PaginatedCatalogTable(props: PaginatedCatalogTableProps) {\n  const { columns, data, next, prev } = props;\n\n  return (\n    <Table\n      columns={columns}\n      data={data}\n      options={{\n        paginationPosition: 'both',\n        pageSizeOptions: [],\n        showFirstLastPageButtons: false,\n        pageSize: Number.MAX_SAFE_INTEGER,\n        emptyRowsWhenPaging: false,\n      }}\n      onPageChange={page => {\n        if (page > 0) {\n          next?.();\n        } else {\n          prev?.();\n        }\n      }}\n      /* this will enable the prev button accordingly */\n      page={prev ? 1 : 0}\n      /* this will enable the next button accordingly */\n      totalCount={next ? Number.MAX_VALUE : Number.MAX_SAFE_INTEGER}\n      localization={{ pagination: { labelDisplayedRows: '' } }}\n    />\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_VIEW_URL,\n  Entity,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  Table,\n  TableColumn,\n  TableProps,\n  WarningPanel,\n} from '@backstage/core-components';\nimport {\n  getEntityRelations,\n  humanizeEntityRef,\n  useEntityList,\n  useStarredEntities,\n} from '@backstage/plugin-catalog-react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@mui/utils';\nimport Edit from '@material-ui/icons/Edit';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { capitalize } from 'lodash';\nimport pluralize from 'pluralize';\nimport React, { ReactNode, useMemo } from 'react';\nimport { columnFactories } from './columns';\nimport { CatalogTableColumnsFunc, CatalogTableRow } from './types';\nimport { PaginatedCatalogTable } from './PaginatedCatalogTable';\n\n/**\n * Props for {@link CatalogTable}.\n *\n * @public\n */\nexport interface CatalogTableProps {\n  columns?: TableColumn<CatalogTableRow>[] | CatalogTableColumnsFunc;\n  actions?: TableProps<CatalogTableRow>['actions'];\n  tableOptions?: TableProps<CatalogTableRow>['options'];\n  emptyContent?: ReactNode;\n  subtitle?: string;\n}\n\nconst YellowStar = withStyles({\n  root: {\n    color: '#f3ba37',\n  },\n})(Star);\n\nconst refCompare = (a: Entity, b: Entity) => {\n  const toRef = (entity: Entity) =>\n    entity.metadata.title ||\n    humanizeEntityRef(entity, {\n      defaultKind: 'Component',\n    });\n\n  return toRef(a).localeCompare(toRef(b));\n};\n\nconst defaultColumnsFunc: CatalogTableColumnsFunc = ({ filters, entities }) => {\n  const showTypeColumn = filters.type === undefined;\n\n  return [\n    columnFactories.createTitleColumn({ hidden: true }),\n    columnFactories.createNameColumn({ defaultKind: filters.kind?.value }),\n    ...createEntitySpecificColumns(),\n    columnFactories.createMetadataDescriptionColumn(),\n    columnFactories.createTagsColumn(),\n  ];\n\n  function createEntitySpecificColumns(): TableColumn<CatalogTableRow>[] {\n    const baseColumns = [\n      columnFactories.createSystemColumn(),\n      columnFactories.createOwnerColumn(),\n      columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n      columnFactories.createSpecLifecycleColumn(),\n    ];\n    switch (filters.kind?.value) {\n      case 'user':\n        return [];\n      case 'domain':\n      case 'system':\n        return [columnFactories.createOwnerColumn()];\n      case 'group':\n      case 'template':\n        return [\n          columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n        ];\n      case 'location':\n        return [\n          columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n          columnFactories.createSpecTargetsColumn(),\n        ];\n      default:\n        return entities.every(entity => entity.metadata.namespace === 'default')\n          ? baseColumns\n          : [...baseColumns, columnFactories.createNamespaceColumn()];\n    }\n  }\n};\n\n/** @public */\nexport const CatalogTable = (props: CatalogTableProps) => {\n  const {\n    columns = defaultColumnsFunc,\n    tableOptions,\n    subtitle,\n    emptyContent,\n  } = props;\n  const { isStarredEntity, toggleStarredEntity } = useStarredEntities();\n  const entityListContext = useEntityList();\n  const { loading, error, entities, filters, pageInfo } = entityListContext;\n  const enablePagination = !!pageInfo;\n\n  const tableColumns = useMemo(\n    () =>\n      typeof columns === 'function' ? columns(entityListContext) : columns,\n    [columns, entityListContext],\n  );\n\n  if (error) {\n    return (\n      <div>\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not fetch catalog entities.\"\n        >\n          <CodeSnippet language=\"text\" text={error.toString()} />\n        </WarningPanel>\n      </div>\n    );\n  }\n\n  const defaultActions: TableProps<CatalogTableRow>['actions'] = [\n    ({ entity }) => {\n      const url = entity.metadata.annotations?.[ANNOTATION_VIEW_URL];\n      const title = 'View';\n\n      return {\n        icon: () => (\n          <>\n            <Typography style={visuallyHidden}>{title}</Typography>\n            <OpenInNew fontSize=\"small\" />\n          </>\n        ),\n        tooltip: title,\n        disabled: !url,\n        onClick: () => {\n          if (!url) return;\n          window.open(url, '_blank');\n        },\n      };\n    },\n    ({ entity }) => {\n      const url = entity.metadata.annotations?.[ANNOTATION_EDIT_URL];\n      const title = 'Edit';\n\n      return {\n        icon: () => (\n          <>\n            <Typography style={visuallyHidden}>{title}</Typography>\n            <Edit fontSize=\"small\" />\n          </>\n        ),\n        tooltip: title,\n        disabled: !url,\n        onClick: () => {\n          if (!url) return;\n          window.open(url, '_blank');\n        },\n      };\n    },\n    ({ entity }) => {\n      const isStarred = isStarredEntity(entity);\n      const title = isStarred ? 'Remove from favorites' : 'Add to favorites';\n\n      return {\n        cellStyle: { paddingLeft: '1em' },\n        icon: () => (\n          <>\n            <Typography style={visuallyHidden}>{title}</Typography>\n            {isStarred ? <YellowStar /> : <StarBorder />}\n          </>\n        ),\n        tooltip: title,\n        onClick: () => toggleStarredEntity(entity),\n      };\n    },\n  ];\n\n  const currentKind = filters.kind?.value || '';\n  const currentType = filters.type?.value || '';\n  // TODO(timbonicus): remove the title from the CatalogTable once using EntitySearchBar\n  const titlePreamble = capitalize(filters.user?.value ?? 'all');\n  const titleDisplay = [titlePreamble, currentType, pluralize(currentKind)]\n    .filter(s => s)\n    .join(' ');\n\n  const title = `${titleDisplay} (${entities.length})`;\n  const actions = props.actions || defaultActions;\n  const options = {\n    actionsColumnIndex: -1,\n    loadingType: 'linear' as const,\n    showEmptyDataSourceMessage: !loading,\n    padding: 'dense' as const,\n    ...tableOptions,\n  };\n\n  if (enablePagination) {\n    return (\n      <PaginatedCatalogTable\n        columns={tableColumns}\n        emptyContent={emptyContent}\n        isLoading={loading}\n        title={title}\n        actions={actions}\n        subtitle={subtitle}\n        options={options}\n        data={entities.map(toEntityRow)}\n        next={pageInfo.next}\n        prev={pageInfo.prev}\n      />\n    );\n  }\n\n  const rows = entities.sort(refCompare).map(toEntityRow);\n  const pageSize = 20;\n  const showPagination = rows.length > pageSize;\n\n  return (\n    <Table<CatalogTableRow>\n      isLoading={loading}\n      columns={tableColumns}\n      options={{\n        paging: showPagination,\n        pageSize: pageSize,\n        pageSizeOptions: [20, 50, 100],\n        ...options,\n      }}\n      title={`${titleDisplay} (${entities.length})`}\n      data={rows}\n      actions={actions}\n      subtitle={subtitle}\n      emptyContent={emptyContent}\n    />\n  );\n};\n\nCatalogTable.columns = columnFactories;\n\nfunction toEntityRow(entity: Entity) {\n  const partOfSystemRelations = getEntityRelations(entity, RELATION_PART_OF, {\n    kind: 'system',\n  });\n  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n\n  return {\n    entity,\n    resolved: {\n      // This name is here for backwards compatibility mostly; the\n      // presentation of refs in the table should in general be handled with\n      // EntityRefLink / EntityName components\n      name: humanizeEntityRef(entity, {\n        defaultKind: 'Component',\n      }),\n      entityRef: stringifyEntityRef(entity),\n      ownedByRelationsTitle: ownedByRelations\n        .map(r => humanizeEntityRef(r, { defaultKind: 'group' }))\n        .join(', '),\n      ownedByRelations,\n      partOfSystemRelationTitle: partOfSystemRelations\n        .map(r =>\n          humanizeEntityRef(r, {\n            defaultKind: 'system',\n          }),\n        )\n        .join(', '),\n      partOfSystemRelations,\n    },\n  };\n}\n"],"names":["_a","title","Edit"],"mappings":"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"}