import React from 'react';
import { makeStyles, ListItemIcon, ListItemText, Box, Chip } from '@material-ui/core';
import { Link } from '@backstage/core-components';
import { HighlightedSearchResultText } from '@backstage/plugin-search-react';

const useStyles = makeStyles(
  {
    item: {
      display: "flex"
    },
    flexContainer: {
      flexWrap: "wrap"
    },
    itemText: {
      width: "100%",
      wordBreak: "break-all",
      marginBottom: "1rem"
    }
  },
  { name: "CatalogSearchResultListItem" }
);
function CatalogSearchResultListItem(props) {
  const result = props.result;
  const highlight = props.highlight;
  const classes = useStyles();
  if (!result)
    return null;
  return /* @__PURE__ */ React.createElement("div", { className: classes.item }, props.icon && /* @__PURE__ */ React.createElement(ListItemIcon, null, typeof props.icon === "function" ? props.icon(result) : props.icon), /* @__PURE__ */ React.createElement("div", { className: classes.flexContainer }, /* @__PURE__ */ React.createElement(
    ListItemText,
    {
      className: classes.itemText,
      primaryTypographyProps: { variant: "h6" },
      primary: /* @__PURE__ */ React.createElement(Link, { noTrack: true, to: result.location }, (highlight == null ? void 0 : highlight.fields.title) ? /* @__PURE__ */ React.createElement(
        HighlightedSearchResultText,
        {
          text: highlight.fields.title,
          preTag: highlight.preTag,
          postTag: highlight.postTag
        }
      ) : result.title),
      secondary: (highlight == null ? void 0 : highlight.fields.text) ? /* @__PURE__ */ React.createElement(
        HighlightedSearchResultText,
        {
          text: highlight.fields.text,
          preTag: highlight.preTag,
          postTag: highlight.postTag
        }
      ) : result.text
    }
  ), /* @__PURE__ */ React.createElement(Box, null, result.kind && /* @__PURE__ */ React.createElement(Chip, { label: `Kind: ${result.kind}`, size: "small" }), result.type && /* @__PURE__ */ React.createElement(Chip, { label: `Type: ${result.type}`, size: "small" }), result.lifecycle && /* @__PURE__ */ React.createElement(Chip, { label: `Lifecycle: ${result.lifecycle}`, size: "small" }), result.owner && /* @__PURE__ */ React.createElement(Chip, { label: `Owner: ${result.owner}`, size: "small" }))));
}

export { CatalogSearchResultListItem };
//# sourceMappingURL=index-391ccf9c.esm.js.map
