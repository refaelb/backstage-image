import FormData from 'form-data';
export declare type CamelizeString<T extends PropertyKey> = T extends string ? string extends T ? string : T extends `${infer F}_${infer R}` ? `${F}${Capitalize<CamelizeString<R>>}` : T : T;
export declare type Camelize<T> = {
    [K in keyof T as CamelizeString<K>]: T[K];
};
export declare function appendFormFromObject(object: Record<string, unknown>): FormData;
export declare function getAPIMap(): Record<string, unknown>;
/**
 * Normalize GitLab API endpoint by encoding route parameters.
 * @param strings
 * @param values
 */
export declare function endpoint<T extends (string | number)[]>(strings: TemplateStringsArray, ...values: T): T extends number[] ? void : string;
