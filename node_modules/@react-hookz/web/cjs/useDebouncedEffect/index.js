"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDebouncedEffect = void 0;
const react_1 = require("react");
const useDebouncedCallback_1 = require("../useDebouncedCallback");
/**
 * Like `useEffect`, but the passed function is debounced.
 *
 * @param callback Callback like for `useEffect`, but without ability to return
 * a cleanup function.
 * @param deps Dependency list like the one passed to `useEffect`.
 * @param delay Debounce delay (in milliseconds).
 * @param maxWait The maximum time `callback` is allowed to be delayed
 * before it's invoked. `0` means no max wait.
 */
function useDebouncedEffect(callback, deps, delay, maxWait = 0) {
    (0, react_1.useEffect)((0, useDebouncedCallback_1.useDebouncedCallback)(callback, deps, delay, maxWait), deps);
}
exports.useDebouncedEffect = useDebouncedEffect;
