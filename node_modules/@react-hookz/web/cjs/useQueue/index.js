"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useQueue = void 0;
const react_1 = require("react");
const useList_1 = require("../useList");
const useSyncedRef_1 = require("../useSyncedRef");
/**
 * A state hook implementing FIFO queue.
 *
 * @param initialValue The initial value. Defaults to an empty array.
 */
function useQueue(initialValue = []) {
    const [list, { removeAt, push }] = (0, useList_1.useList)(initialValue);
    const listRef = (0, useSyncedRef_1.useSyncedRef)(list);
    return (0, react_1.useMemo)(() => ({
        add(value) {
            push(value);
        },
        remove() {
            const val = listRef.current[0];
            removeAt(0);
            return val;
        },
        get first() {
            return listRef.current[0];
        },
        get last() {
            return listRef.current[listRef.current.length - 1];
        },
        get size() {
            return listRef.current.length;
        },
        get items() {
            return listRef.current;
        },
    }), []);
}
exports.useQueue = useQueue;
