"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useIsMounted = void 0;
const react_1 = require("react");
/**
 * Returns a function that returns the current mount state. This hook is useful when you have to
 * detect component mount state within async effects.
 *
 * @param initialValue Initial value.
 *
 * @return Function that returns `true` only if the component is mounted.
 */
function useIsMounted(initialValue = false) {
    const isMounted = (0, react_1.useRef)(initialValue);
    const get = (0, react_1.useCallback)(() => isMounted.current, []);
    (0, react_1.useEffect)(() => {
        isMounted.current = true;
        return () => {
            isMounted.current = false;
        };
    }, []);
    return get;
}
exports.useIsMounted = useIsMounted;
