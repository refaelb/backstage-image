"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useLocalStorageValue = void 0;
const useStorageValue_1 = require("../useStorageValue");
const const_1 = require("../util/const");
let IS_LOCAL_STORAGE_AVAILABLE;
try {
    IS_LOCAL_STORAGE_AVAILABLE = const_1.isBrowser && Boolean(window.localStorage);
}
catch {
    // No need to test this flag leads to noop behaviour
    /* istanbul ignore next */
    IS_LOCAL_STORAGE_AVAILABLE = false;
}
/**
 * Manages a single localStorage key.
 */
exports.useLocalStorageValue = IS_LOCAL_STORAGE_AVAILABLE
    ? (key, options) => {
        return (0, useStorageValue_1.useStorageValue)(localStorage, key, options);
    }
    : (_key, _options) => {
        if (const_1.isBrowser && process.env.NODE_ENV === 'development') {
            console.warn('LocalStorage is not available in this environment');
        }
        return { value: undefined, set: const_1.noop, remove: const_1.noop, fetch: const_1.noop };
    };
