"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMediatedState = void 0;
const react_1 = require("react");
const useSyncedRef_1 = require("../useSyncedRef");
const resolveHookState_1 = require("../util/resolveHookState");
/**
 * Like `useState`, but every value set is passed through a mediator function.
 */
function useMediatedState(initialState, mediator) {
    const [state, setState] = (0, react_1.useState)(() => {
        return mediator ? mediator((0, resolveHookState_1.resolveHookState)(initialState)) : initialState;
    });
    const mediatorRef = (0, useSyncedRef_1.useSyncedRef)(mediator);
    return [
        state,
        (0, react_1.useCallback)((value) => {
            if (mediatorRef.current) {
                setState((prevState) => mediatorRef.current?.((0, resolveHookState_1.resolveHookState)(value, prevState)));
            }
            else {
                setState(value);
            }
        }, []),
    ];
}
exports.useMediatedState = useMediatedState;
