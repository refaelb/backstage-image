"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMeasure = void 0;
const react_1 = require("react");
const useResizeObserver_1 = require("../useResizeObserver");
const useHookableRef_1 = require("../useHookableRef");
const useRafCallback_1 = require("../useRafCallback");
/**
 * Uses ResizeObserver to track element dimensions and re-render component when they change.
 *
 * @param enabled Whether resize observer is enabled or not.
 */
function useMeasure(enabled = true) {
    const [element, setElement] = (0, react_1.useState)(null);
    const elementRef = (0, useHookableRef_1.useHookableRef)(null, (v) => {
        setElement(v);
        return v;
    });
    const [measures, setMeasures] = (0, react_1.useState)();
    const [observerHandler] = (0, useRafCallback_1.useRafCallback)((entry) => {
        setMeasures({ width: entry.contentRect.width, height: entry.contentRect.height });
    });
    (0, useResizeObserver_1.useResizeObserver)(element, observerHandler, enabled);
    return [measures, elementRef];
}
exports.useMeasure = useMeasure;
