"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRafCallback = void 0;
const react_1 = require("react");
const useSyncedRef_1 = require("../useSyncedRef");
const useUnmountEffect_1 = require("../useUnmountEffect");
const const_1 = require("../util/const");
/**
 * Makes passed function to be called within next animation frame.
 *
 * Consequential calls, before the animation frame occurred, cancel previously scheduled call.
 *
 * @param cb Callback to fire within animation frame.
 */
function useRafCallback(cb) {
    const cbRef = (0, useSyncedRef_1.useSyncedRef)(cb);
    const frame = (0, react_1.useRef)(0);
    const cancel = (0, react_1.useCallback)(() => {
        if (!const_1.isBrowser)
            return;
        if (frame.current) {
            cancelAnimationFrame(frame.current);
            frame.current = 0;
        }
    }, []);
    (0, useUnmountEffect_1.useUnmountEffect)(cancel);
    return [
        (0, react_1.useMemo)(() => {
            const wrapped = (...args) => {
                if (!const_1.isBrowser)
                    return;
                cancel();
                frame.current = requestAnimationFrame(() => {
                    cbRef.current(...args);
                    frame.current = 0;
                });
            };
            Object.defineProperties(wrapped, {
                length: { value: cb.length },
                name: { value: `${cb.name || 'anonymous'}__raf` },
            });
            return wrapped;
        }, []),
        cancel,
    ];
}
exports.useRafCallback = useRafCallback;
