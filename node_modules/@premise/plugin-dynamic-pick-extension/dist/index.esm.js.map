{"version":3,"file":"index.esm.js","sources":["../src/components/DynamicPickExtension.tsx","../src/plugin.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { z } from 'zod';\nimport { makeFieldSchemaFromZod } from '@backstage/plugin-scaffolder';\nimport { useAsync } from 'react-use';\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst DynamicPickExtensionWithOptionsFieldSchema = makeFieldSchemaFromZod(\n  z.string(),\n  z.object({\n    form_data: z\n      .string()\n      .describe('Endpoint from form-data plugin to fill the select'),\n    external_data: z\n      .string()\n      .describe('External endpoint to fill the select. Needs to return a JSON array of strings.'),\n    no_options_text: z\n      .string()\n      .default('No options')\n      .describe('Text to show when there are no options available'),\n  }),\n);\n\nexport const DynamicPickExtensionWithOptionsSchema = DynamicPickExtensionWithOptionsFieldSchema.schema;\n\ntype DynamicPickExtensionWithOptionsProps = typeof DynamicPickExtensionWithOptionsFieldSchema.type;\n\nexport const DynamicPickExtension = ({\n  onChange,\n  rawErrors,\n  required,\n  formData,\n  idSchema,\n  schema: { title, description },\n  uiSchema: { 'ui:options': options },\n}: DynamicPickExtensionWithOptionsProps) => {\n  const config = useApi(configApiRef);\n  const backendUrl = config.getString('backend.baseUrl');\n  const [loading, setLoading] = useState(true);\n  const [formDataOptions, setFormDataOptions] = useState([]);\n\n  useAsync(async () => {\n    if (options?.external_data) {\n      setFormDataOptions(await (await fetch(options?.external_data)).json());\n      setLoading(false);\n    } else if (options?.form_data) {\n      setFormDataOptions(await (await fetch(`${backendUrl}/api/form-data/${options?.form_data}`)).json());\n      setLoading(false);\n    }\n  });\n\n  return (\n    <Autocomplete\n      id={idSchema?.$id}\n      loading={loading}\n      value={formData ?? null}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={title}\n          variant=\"standard\"\n          required={required}\n          error={rawErrors?.length > 0 && !formData}\n          helperText={description}\n        />\n      )}\n      options={formDataOptions}\n      onChange={(_, value) => onChange(value)}\n      getOptionSelected={(option, value) => option === value}\n      noOptionsText={options?.no_options_text}\n      disableClearable\n    />\n  )\n};\n","import { createPlugin } from '@backstage/core-plugin-api';\nimport { scaffolderPlugin } from '@backstage/plugin-scaffolder';\nimport { createScaffolderFieldExtension } from '@backstage/plugin-scaffolder-react';\nimport { DynamicPickExtension, DynamicPickExtensionWithOptionsSchema } from './components/DynamicPickExtension';\n\nexport const dynamicPickExtensionPlugin = createPlugin({\n  id: 'dynamic-pick-extension',\n});\n\nexport const DynamicPickFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n      name: 'DynamicPickExtension',\n      component: DynamicPickExtension,\n      schema: DynamicPickExtensionWithOptionsSchema,\n  }),\n);\n"],"names":[],"mappings":"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"}