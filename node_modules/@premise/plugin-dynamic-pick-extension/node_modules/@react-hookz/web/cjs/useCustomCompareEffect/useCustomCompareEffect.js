"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCustomCompareEffect = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
var react_1 = require("react");
var const_1 = require("../util/const");
var misc_1 = require("../util/misc");
/**
 * Like `useEffect` but uses provided comparator function to validate dependency changes.
 *
 * @param callback Function that will be passed to underlying effect hook.
 * @param deps Dependencies list, like for `useEffect` hook.
 * @param comparator Function that compares two dependencies arrays, and returns true in case
 * they're equal.
 * @param effectHook Effect hook that will be used to run callback. Must comply `useEffect`
 * signature, meaning that callback should be placed as first argument and dependencies list
 * as second.
 * @param effectHookRestArgs Extra arguments that passed to effectHook.
 */
function useCustomCompareEffect(callback, deps, comparator, effectHook) {
    if (comparator === void 0) { comparator = misc_1.basicDepsComparator; }
    if (effectHook === void 0) { effectHook = react_1.useEffect; }
    var effectHookRestArgs = [];
    for (var _i = 4; _i < arguments.length; _i++) {
        effectHookRestArgs[_i - 4] = arguments[_i];
    }
    var dependencies = (0, react_1.useRef)();
    // Effects not working in SSR environment therefore no sense to invoke comparator
    if (dependencies.current === undefined ||
        (const_1.isBrowser && !comparator(dependencies.current, deps))) {
        dependencies.current = deps;
    }
    effectHook.apply(void 0, __spreadArray([callback, dependencies.current], effectHookRestArgs, false));
}
exports.useCustomCompareEffect = useCustomCompareEffect;
