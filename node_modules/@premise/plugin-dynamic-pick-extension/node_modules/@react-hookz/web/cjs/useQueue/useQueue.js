"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useQueue = void 0;
var react_1 = require("react");
var useList_1 = require("../useList/useList");
var useSyncedRef_1 = require("../useSyncedRef/useSyncedRef");
/**
 * A state hook implementing FIFO queue.
 *
 * @param initialValue The initial value. Defaults to an empty array.
 */
function useQueue(initialValue) {
    if (initialValue === void 0) { initialValue = []; }
    var _a = (0, useList_1.useList)(initialValue), list = _a[0], _b = _a[1], removeAt = _b.removeAt, push = _b.push;
    var listRef = (0, useSyncedRef_1.useSyncedRef)(list);
    return (0, react_1.useMemo)(function () { return ({
        add: function (value) { return push(value); },
        remove: function () {
            var val = listRef.current[0];
            removeAt(0);
            return val;
        },
        get first() {
            return listRef.current[0];
        },
        get last() {
            return listRef.current[listRef.current.length - 1];
        },
        get size() {
            return listRef.current.length;
        },
        get items() {
            return listRef.current;
        },
    }); }, 
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []);
}
exports.useQueue = useQueue;
