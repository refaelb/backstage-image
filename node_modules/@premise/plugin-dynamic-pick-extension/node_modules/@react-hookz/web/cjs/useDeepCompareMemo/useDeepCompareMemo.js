"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDeepCompareMemo = void 0;
var deep_equal_1 = require("@react-hookz/deep-equal");
var useCustomCompareMemo_1 = require("../useCustomCompareMemo/useCustomCompareMemo");
/**
 * Like useMemo but validates dependency changes using deep equality check instead of reference check.
 *
 * @param factory Function calculating the value to be memoized.
 * @param deps The list of all reactive values referenced inside `factory`.
 * @returns Initially returns the result of calling `factory`. On subsequent renders, it will return
 * the same value, if dependencies haven't changed, or the result of calling `factory` again, if they have changed.
 */
function useDeepCompareMemo(factory, deps) {
    return (0, useCustomCompareMemo_1.useCustomCompareMemo)(factory, deps, deep_equal_1.isEqual);
}
exports.useDeepCompareMemo = useDeepCompareMemo;
