"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMeasure = void 0;
var useResizeObserver_1 = require("../useResizeObserver/useResizeObserver");
var useHookableRef_1 = require("../useHookableRef/useHookableRef");
var useRafCallback_1 = require("../useRafCallback/useRafCallback");
var useSafeState_1 = require("../useSafeState/useSafeState");
/**
 * Uses ResizeObserver to track element dimensions and re-render component when they change.
 *
 * @param enabled Whether resize observer is enabled or not.
 */
function useMeasure(enabled) {
    if (enabled === void 0) { enabled = true; }
    var _a = (0, useSafeState_1.useSafeState)(null), element = _a[0], setElement = _a[1];
    var elementRef = (0, useHookableRef_1.useHookableRef)(null, function (v) {
        setElement(v);
        return v;
    });
    var _b = (0, useSafeState_1.useSafeState)(), measures = _b[0], setMeasures = _b[1];
    var observerHandler = (0, useRafCallback_1.useRafCallback)(function (entry) {
        return setMeasures({ width: entry.contentRect.width, height: entry.contentRect.height });
    })[0];
    (0, useResizeObserver_1.useResizeObserver)(element, observerHandler, enabled);
    return [measures, elementRef];
}
exports.useMeasure = useMeasure;
