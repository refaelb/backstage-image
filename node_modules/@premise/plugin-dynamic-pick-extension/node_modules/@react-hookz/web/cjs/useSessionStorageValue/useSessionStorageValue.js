"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSessionStorageValue = void 0;
var useStorageValue_1 = require("../useStorageValue/useStorageValue");
var const_1 = require("../util/const");
var IS_SESSION_STORAGE_AVAILABLE;
try {
    IS_SESSION_STORAGE_AVAILABLE = const_1.isBrowser && !!window.sessionStorage;
}
catch (_a) {
    // no need to test as this flag leads to noop behaviour
    /* istanbul ignore next */
    IS_SESSION_STORAGE_AVAILABLE = false;
}
/**
 * Manages a single sessionStorage key.
 */
exports.useSessionStorageValue = IS_SESSION_STORAGE_AVAILABLE
    ? function (key, options) {
        return (0, useStorageValue_1.useStorageValue)(sessionStorage, key, options);
    }
    : function (_key, _options) {
        if (const_1.isBrowser && process.env.NODE_ENV === 'development') {
            // eslint-disable-next-line no-console
            console.warn('SessionStorage is not available in this environment');
        }
        return { value: undefined, set: const_1.noop, remove: const_1.noop, fetch: const_1.noop };
    };
