{"version":3,"file":"Layout.js","sourceRoot":"","sources":["../../../../src/containers/AsyncApi/Layout.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAExC,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAGvC,OAAO,EAAE,oBAAoB,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AASrE,IAAM,cAAc,GAAmC,UAAC,EAIvD;QAHC,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,aAAY,EAAZ,KAAK,mBAAG,IAAI,KAAA;IAEN,IAAA,KAA4C,QAAQ,CAAC,cAAc,CAAC,EAAnE,iBAAiB,QAAA,EAAE,oBAAoB,QAA4B,CAAC;IAEnE,IAAA,GAAG,GAAK,iBAAiB,CAAiB;QAChD,QAAQ,EAAE,UAAC,EAAS;gBAAP,KAAK,WAAA;YAChB,qBAAqB,CAAC;gBACpB,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,OAAO;iBACR;gBAED,IAAM,iBAAiB,GACrB,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBACpD,IAAI,iBAAiB,KAAK,iBAAiB,EAAE;oBAC3C,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;iBACzC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KACF,CAAC,IAdS,CAcR;IAEH,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACrC,OAAO,CACL,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,MAAM;QACnC,oBAAC,oBAAoB,CAAC,QAAQ,IAAC,KAAK,EAAE,QAAQ;YAC5C,iCAAS,SAAS,EAAC,UAAU;gBAC3B,6BACE,SAAS,EAAE,UAAG,iBAAiB,8CAA2C,EAC1E,EAAE,EAAE,MAAM,CAAC,QAAQ,IAAI,SAAS,EAChC,GAAG,EAAE,GAAG;oBAEP,UAAU,CAAC,OAAO,IAAI,oBAAC,OAAO,OAAG;oBAClC,6BAAK,SAAS,EAAC,oCAAoC;wBACjD,6BAAK,SAAS,EAAC,eAAe;4BAC3B,UAAU,CAAC,MAAM,IAAI,KAAK,IAAI,oBAAC,KAAK,IAAC,KAAK,EAAE,KAAK,GAAI;4BACrD,UAAU,CAAC,IAAI,IAAI,oBAAC,IAAI,OAAG;4BAC3B,UAAU,CAAC,OAAO,IAAI,oBAAC,OAAO,OAAG;4BACjC,UAAU,CAAC,UAAU,IAAI,oBAAC,UAAU,OAAG;4BACvC,UAAU,CAAC,QAAQ,IAAI,oBAAC,QAAQ,OAAG;4BACnC,UAAU,CAAC,OAAO,IAAI,oBAAC,OAAO,OAAG,CAC9B;wBACN,6BAAK,SAAS,EAAC,wDAAwD,GAAG,CACtE,CACF,CACE,CACoB,CACT,CAC1B,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { AsyncAPIDocumentInterface } from '@asyncapi/parser';\nimport useResizeObserver from 'use-resize-observer';\n\nimport { Sidebar } from '../Sidebar/Sidebar';\nimport { Info } from '../Info/Info';\nimport { Servers } from '../Servers/Servers';\nimport { Operations } from '../Operations/Operations';\nimport { Messages } from '../Messages/Messages';\nimport { Schemas } from '../Schemas/Schemas';\nimport { Error } from '../Error/Error';\n\nimport { ConfigInterface } from '../../config';\nimport { SpecificationContext, ConfigContext } from '../../contexts';\nimport { ErrorObject } from '../../types';\n\ninterface Props {\n  asyncapi: AsyncAPIDocumentInterface;\n  config: ConfigInterface;\n  error?: ErrorObject;\n}\n\nconst AsyncApiLayout: React.FunctionComponent<Props> = ({\n  asyncapi,\n  config,\n  error = null,\n}) => {\n  const [observerClassName, setObserverClassName] = useState('container:xl');\n\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width }) => {\n      requestAnimationFrame(() => {\n        if (width === undefined) {\n          return;\n        }\n\n        const possibleClassName =\n          width <= 1280 ? 'container:xl' : 'container:base';\n        if (possibleClassName !== observerClassName) {\n          setObserverClassName(possibleClassName);\n        }\n      });\n    },\n  });\n\n  const configShow = config.show || {};\n  return (\n    <ConfigContext.Provider value={config}>\n      <SpecificationContext.Provider value={asyncapi}>\n        <section className=\"aui-root\">\n          <div\n            className={`${observerClassName} relative md:flex bg-white leading-normal`}\n            id={config.schemaID || undefined}\n            ref={ref}\n          >\n            {configShow.sidebar && <Sidebar />}\n            <div className=\"panel--center relative py-8 flex-1\">\n              <div className=\"relative z-10\">\n                {configShow.errors && error && <Error error={error} />}\n                {configShow.info && <Info />}\n                {configShow.servers && <Servers />}\n                {configShow.operations && <Operations />}\n                {configShow.messages && <Messages />}\n                {configShow.schemas && <Schemas />}\n              </div>\n              <div className=\"panel--right absolute top-0 right-0 h-full bg-gray-800\" />\n            </div>\n          </div>\n        </section>\n      </SpecificationContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default AsyncApiLayout;\n"]}