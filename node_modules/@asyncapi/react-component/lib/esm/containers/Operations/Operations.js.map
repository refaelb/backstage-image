{"version":3,"file":"Operations.js","sourceRoot":"","sources":["../../../../src/containers/Operations/Operations.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Operation } from './Operation';\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { OPERATIONS_TEXT } from '../../constants';\nimport { PayloadType } from '../../types';\n\nexport const Operations: React.FunctionComponent = () => {\n  const operations = useSpec()\n    .operations()\n    .all();\n  const config = useConfig();\n\n  if (!Object.keys(operations).length) {\n    return null;\n  }\n\n  const operationsList: React.ReactNodeArray = [];\n  operations.forEach(operation => {\n    const channel = operation.channels().all()[0];\n    const channelAddress = channel?.address() ?? '';\n    if (operation.isSend()) {\n      if (operation.reply() !== undefined) {\n        operationsList.push(\n          <li\n            className=\"mb-12\"\n            key={`req-${operation.id()}`}\n            id={CommonHelpers.getIdentifier(\n              `operation-${PayloadType.REQUEST}-${operation.id()}`,\n              config,\n            )}\n          >\n            <Operation\n              type={PayloadType.REQUEST}\n              operation={operation}\n              channelName={channelAddress}\n              channel={channel}\n            />\n          </li>,\n        );\n      } else {\n        operationsList.push(\n          <li\n            className=\"mb-12\"\n            key={`pub-${operation.id()}`}\n            id={CommonHelpers.getIdentifier(\n              `operation-${PayloadType.SEND}-${operation.id()}`,\n              config,\n            )}\n          >\n            <Operation\n              type={PayloadType.SEND}\n              operation={operation}\n              channelName={channelAddress}\n              channel={channel}\n            />\n          </li>,\n        );\n      }\n    }\n    if (operation.isReceive()) {\n      if (operation.reply() !== undefined) {\n        operationsList.push(\n          <li\n            className=\"mb-12\"\n            key={`replier-${operation.id()}`}\n            id={CommonHelpers.getIdentifier(\n              `operation-${PayloadType.REPLY}-${operation.id()}`,\n              config,\n            )}\n          >\n            <Operation\n              type={PayloadType.REPLY}\n              operation={operation}\n              channelName={channelAddress}\n              channel={channel}\n            />\n          </li>,\n        );\n      } else {\n        operationsList.push(\n          <li\n            className=\"mb-12\"\n            key={`sub-${operation.id()}`}\n            id={CommonHelpers.getIdentifier(\n              `operation-${PayloadType.RECEIVE}-${operation.id()}`,\n              config,\n            )}\n          >\n            <Operation\n              type={PayloadType.RECEIVE}\n              operation={operation}\n              channelName={channelAddress}\n              channel={channel}\n            />\n          </li>,\n        );\n      }\n    }\n  });\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('operations', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {OPERATIONS_TEXT}\n      </h2>\n      <ul>{operationsList}</ul>\n    </section>\n  );\n};\n"]}