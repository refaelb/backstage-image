{"version":3,"file":"Standalone.js","sourceRoot":"","sources":["../../../../src/containers/AsyncApi/Standalone.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAyC;AAGzC,yCAAqD;AAErD,uCAA8D;AAE9D,oDAAsC;AACtC,wCAAuC;AAavC;IAAgC,qCAAuC;IAMrE,2BAAY,KAAoB;QAAhC,YACE,kBAAM,KAAK,CAAC,SAMb;QAZD,WAAK,GAAkB;YACrB,QAAQ,EAAE,SAAS;YACnB,KAAK,EAAE,SAAS;SACjB,CAAC;QAKA,IAAM,UAAU,GAAG,8BAAoB,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzE,IAAI,UAAU,EAAE;YACd,KAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;SACvC;;IACH,CAAC;IAEK,6CAAiB,GAAvB;;;gBACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBACrC;;;;KACF;IAEK,8CAAkB,GAAxB,UAAyB,SAAwB;;;;gBACzC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC;gBAC7B,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAEpC,IAAI,SAAS,KAAK,SAAS,EAAE;oBAC3B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;iBAC7B;;;;KACF;IAED,kCAAM,GAAN;;QACQ,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAvC,MAAM,YAAA,EAAS,SAAS,WAAe,CAAC;QAC1C,IAAA,KAAkC,IAAI,CAAC,KAAK,EAA1C,QAAQ,cAAA,EAAS,UAAU,WAAe,CAAC;QAEnD,IAAM,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC;QACtC,IAAM,kBAAkB,kCACnB,sBAAa,GACb,MAAM,KACT,IAAI,wBACC,sBAAa,CAAC,IAAI,GAClB,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,GAE9B,MAAM,wBACD,sBAAa,CAAC,MAAM,GACpB,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,GAEhC,OAAO,wBACF,sBAAa,CAAC,OAAO,GACrB,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,IAElC,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YACD,OAAO,CAAA,MAAA,kBAAkB,CAAC,IAAI,0CAAE,MAAM,KAAI,8BAAC,aAAK,IAAC,KAAK,EAAE,KAAK,GAAI,CAAC;SACnE;QAED,OAAO,CACL,8BAAC,gBAAc,IACb,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,kBAAkB,EAC1B,KAAK,EAAE,KAAK,GACZ,CACH,CAAC;IACJ,CAAC;IAEO,uCAAW,GAAnB,UAAoB,MAAmB;QACrC,IAAM,UAAU,GAAG,8BAAoB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YACvC,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1C,CAAC;IACH,wBAAC;AAAD,CAAC,AA5ED,CAAgC,iBAAS,GA4ExC;AAED,kBAAe,iBAAiB,CAAC","sourcesContent":["import React, { Component } from 'react';\nimport { AsyncAPIDocumentInterface } from '@asyncapi/parser';\n\nimport { SpecificationHelpers } from '../../helpers';\nimport { ErrorObject, PropsSchema } from '../../types';\nimport { ConfigInterface, defaultConfig } from '../../config';\n\nimport AsyncApiLayout from './Layout';\nimport { Error } from '../Error/Error';\n\nexport interface AsyncApiProps {\n  schema: PropsSchema;\n  config?: Partial<ConfigInterface>;\n  error?: ErrorObject;\n}\n\ninterface AsyncAPIState {\n  asyncapi?: AsyncAPIDocumentInterface;\n  error?: ErrorObject;\n}\n\nclass AsyncApiComponent extends Component<AsyncApiProps, AsyncAPIState> {\n  state: AsyncAPIState = {\n    asyncapi: undefined,\n    error: undefined,\n  };\n\n  constructor(props: AsyncApiProps) {\n    super(props);\n\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(props.schema);\n    if (parsedSpec) {\n      this.state = { asyncapi: parsedSpec };\n    }\n  }\n\n  async componentDidMount() {\n    if (!this.state.asyncapi) {\n      this.updateState(this.props.schema);\n    }\n  }\n\n  async componentDidUpdate(prevProps: AsyncApiProps) {\n    const oldSchema = prevProps.schema;\n    const newSchema = this.props.schema;\n\n    if (oldSchema !== newSchema) {\n      this.updateState(newSchema);\n    }\n  }\n\n  render() {\n    const { config, error: propError } = this.props;\n    const { asyncapi, error: stateError } = this.state;\n\n    const error = propError || stateError;\n    const concatenatedConfig: ConfigInterface = {\n      ...defaultConfig,\n      ...config,\n      show: {\n        ...defaultConfig.show,\n        ...(!!config && config.show),\n      },\n      expand: {\n        ...defaultConfig.expand,\n        ...(!!config && config.expand),\n      },\n      sidebar: {\n        ...defaultConfig.sidebar,\n        ...(!!config && config.sidebar),\n      },\n    };\n\n    if (!asyncapi) {\n      if (!error) {\n        return null;\n      }\n      return concatenatedConfig.show?.errors && <Error error={error} />;\n    }\n\n    return (\n      <AsyncApiLayout\n        asyncapi={asyncapi}\n        config={concatenatedConfig}\n        error={error}\n      />\n    );\n  }\n\n  private updateState(schema: PropsSchema) {\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(schema);\n    if (!parsedSpec) {\n      this.setState({ asyncapi: undefined });\n      return;\n    }\n    this.setState({ asyncapi: parsedSpec });\n  }\n}\n\nexport default AsyncApiComponent;\n"]}