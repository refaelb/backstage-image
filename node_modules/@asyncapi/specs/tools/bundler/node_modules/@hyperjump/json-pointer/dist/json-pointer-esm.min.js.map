{"version":3,"file":"json-pointer-esm.min.js","sources":["../lib/index.js","../node_modules/just-curry-it/index.js"],"sourcesContent":["const curry = require(\"just-curry-it\");\n\n\nconst nil = \"\";\n\nconst compile = (pointer) => {\n  if (pointer.length > 0 && pointer[0] !== \"/\") {\n    throw Error(\"Invalid JSON Pointer\");\n  }\n\n  return pointer.split(\"/\").slice(1).map(unescape);\n};\n\nconst get = (pointer, value = undefined) => {\n  const ptr = compile(pointer);\n\n  const fn = (value) => ptr.reduce(([value, pointer], segment) => {\n    return [applySegment(value, segment, pointer), append(segment, pointer)];\n  }, [value, \"\"])[0];\n\n  return value === undefined ? fn : fn(value);\n};\n\nconst set = (pointer, subject = undefined, value = undefined) => {\n  const ptr = compile(pointer);\n  const fn = curry((subject, value) => _set(ptr, subject, value, nil));\n  return subject === undefined ? fn : fn(subject, value);\n};\n\nconst _set = (pointer, subject, value, cursor) => {\n  if (pointer.length === 0) {\n    return value;\n  } else if (pointer.length > 1) {\n    const segment = pointer.shift();\n    return { ...subject, [segment]: _set(pointer, applySegment(subject, segment, cursor), value, append(segment, cursor)) };\n  } else if (Array.isArray(subject)) {\n    const clonedSubject = [...subject];\n    const segment = computeSegment(subject, pointer[0]);\n    clonedSubject[segment] = value;\n    return clonedSubject;\n  } else if (typeof subject === \"object\" && subject !== null) {\n    return { ...subject, [pointer[0]]: value };\n  } else {\n    return applySegment(subject, pointer[0], cursor);\n  }\n};\n\nconst assign = (pointer, subject = undefined, value = undefined) => {\n  const ptr = compile(pointer);\n  const fn = curry((subject, value) => _assign(ptr, subject, value, nil));\n  return subject === undefined ? fn : fn(subject, value);\n};\n\nconst _assign = (pointer, subject, value, cursor) => {\n  if (pointer.length === 0) {\n    return;\n  } else if (pointer.length === 1 && !isScalar(subject)) {\n    const segment = computeSegment(subject, pointer[0]);\n    subject[segment] = value;\n  } else {\n    const segment = pointer.shift();\n    _assign(pointer, applySegment(subject, segment, cursor), value, append(segment, cursor));\n  }\n};\n\nconst unset = (pointer, subject = undefined) => {\n  const ptr = compile(pointer);\n  const fn = (subject) => _unset(ptr, subject, nil);\n  return subject === undefined ? fn : fn(subject);\n};\n\nconst _unset = (pointer, subject, cursor) => {\n  if (pointer.length == 0) {\n    return undefined;\n  } else if (pointer.length > 1) {\n    const segment = pointer.shift();\n    const value = applySegment(subject, segment, cursor);\n    return { ...subject, [segment]: _unset(pointer, value, append(segment, cursor)) };\n  } else if (Array.isArray(subject)) {\n    return subject.filter((_, ndx) => ndx != pointer[0]);\n  } else if (typeof subject === \"object\" && subject !== null) {\n    // eslint-disable-next-line no-unused-vars\n    const { [pointer[0]]: _, ...result } = subject;\n    return result;\n  } else {\n    return applySegment(subject, pointer[0], cursor);\n  }\n};\n\nconst remove = (pointer, subject = undefined) => {\n  const ptr = compile(pointer);\n  const fn = (subject) => _remove(ptr, subject, nil);\n  return subject === undefined ? fn : fn(subject);\n};\n\nconst _remove = (pointer, subject, cursor) => {\n  if (pointer.length === 0) {\n    return;\n  } else if (pointer.length > 1) {\n    const segment = pointer.shift();\n    const value = applySegment(subject, segment, cursor);\n    _remove(pointer, value, append(segment, cursor));\n  } else if (Array.isArray(subject)) {\n    subject.splice(pointer[0], 1);\n  } else if (typeof subject === \"object\" && subject !== null) {\n    delete subject[pointer[0]];\n  } else {\n    applySegment(subject, pointer[0], cursor);\n  }\n};\n\nconst append = curry((segment, pointer) => pointer + \"/\" + escape(segment));\n\nconst escape = (segment) => segment.toString().replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\nconst unescape = (segment) => segment.toString().replace(/~1/g, \"/\").replace(/~0/g, \"~\");\nconst computeSegment = (value, segment) => Array.isArray(value) && segment === \"-\" ? value.length : segment;\n\nconst applySegment = (value, segment, cursor = \"\") => {\n  if (value === undefined) {\n    throw TypeError(`Value at '${cursor}' is undefined and does not have property '${segment}'`);\n  } else if (value === null) {\n    throw TypeError(`Value at '${cursor}' is null and does not have property '${segment}'`);\n  } else if (isScalar(value)) {\n    throw TypeError(`Value at '${cursor}' is a ${typeof value} and does not have property '${segment}'`);\n  } else {\n    const computedSegment = computeSegment(value, segment);\n    return value[computedSegment];\n  }\n};\n\nconst isScalar = (value) => value === null || typeof value !== \"object\";\n\nmodule.exports = { nil, append, get, set, assign, unset, remove };\n","module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n"],"names":["curry","fn","arity","curried","length","args","slice","call","arguments","apply","this","concat","compile","pointer","Error","split","map","unescape","_set","subject","value","cursor","segment","shift","applySegment","append","Array","isArray","clonedSubject","computeSegment","_assign","isScalar","_unset","filter","_","ndx","result","_remove","splice","escape","toString","replace","undefined","TypeError","lib","nil","get","ptr","reduce","set","assign","unset","remove"],"mappings":"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"}