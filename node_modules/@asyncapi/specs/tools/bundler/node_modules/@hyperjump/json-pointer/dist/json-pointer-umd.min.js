!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).JsonPointer=t()}(this,(function(){"use strict";const e=function(e,t){return function r(){null==t&&(t=e.length);var n=[].slice.call(arguments);return n.length>=t?e.apply(this,n):function(){return r.apply(this,n.concat([].slice.call(arguments)))}}},t=e=>{if(e.length>0&&"/"!==e[0])throw Error("Invalid JSON Pointer");return e.split("/").slice(1).map(u)},r=(e,t,n,o)=>{if(0===e.length)return n;if(e.length>1){const i=e.shift();return{...t,[i]:r(e,a(t,i,o),n,l(i,o))}}if(Array.isArray(t)){const r=[...t];return r[f(t,e[0])]=n,r}return"object"==typeof t&&null!==t?{...t,[e[0]]:n}:a(t,e[0],o)},n=(e,t,r,o)=>{if(0!==e.length)if(1!==e.length||c(t)){const i=e.shift();n(e,a(t,i,o),r,l(i,o))}else{t[f(t,e[0])]=r}},o=(e,t,r)=>{if(0!=e.length){if(e.length>1){const n=e.shift(),i=a(t,n,r);return{...t,[n]:o(e,i,l(n,r))}}if(Array.isArray(t))return t.filter(((t,r)=>r!=e[0]));if("object"==typeof t&&null!==t){const{[e[0]]:r,...n}=t;return n}return a(t,e[0],r)}},i=(e,t,r)=>{if(0!==e.length)if(e.length>1){const n=e.shift(),o=a(t,n,r);i(e,o,l(n,r))}else Array.isArray(t)?t.splice(e[0],1):"object"==typeof t&&null!==t?delete t[e[0]]:a(t,e[0],r)},l=e(((e,t)=>t+"/"+s(e))),s=e=>e.toString().replace(/~/g,"~0").replace(/\//g,"~1"),u=e=>e.toString().replace(/~1/g,"/").replace(/~0/g,"~"),f=(e,t)=>Array.isArray(e)&&"-"===t?e.length:t,a=(e,t,r="")=>{if(void 0===e)throw TypeError(`Value at '${r}' is undefined and does not have property '${t}'`);if(null===e)throw TypeError(`Value at '${r}' is null and does not have property '${t}'`);if(c(e))throw TypeError(`Value at '${r}' is a ${typeof e} and does not have property '${t}'`);return e[f(e,t)]},c=e=>null===e||"object"!=typeof e;return{nil:"",append:l,get:(e,r)=>{const n=t(e),o=e=>n.reduce((([e,t],r)=>[a(e,r,t),l(r,t)]),[e,""])[0];return void 0===r?o:o(r)},set:(n,o,i)=>{const l=t(n),s=e(((e,t)=>r(l,e,t,"")));return void 0===o?s:s(o,i)},assign:(r,o,i)=>{const l=t(r),s=e(((e,t)=>n(l,e,t,"")));return void 0===o?s:s(o,i)},unset:(e,r)=>{const n=t(e),i=e=>o(n,e,"");return void 0===r?i:i(r)},remove:(e,r)=>{const n=t(e),o=e=>i(n,e,"");return void 0===r?o:o(r)}}}));
//# sourceMappingURL=json-pointer-umd.min.js.map
